descr,label
"I do a lot of work with image processing and need to test cameras / imagers. I am going to create a scalable test platform.. Read up about this project on . I do a lot of work with image processing and need to test cameras / imagers. I am going to create a scalable test platform.. . We have looked at creating image processing solutions previously which used image sensors which used a parallel interface or cameras which used HDMI interfaces. . One common interface for image sensors is MIPI, so let's take a look at how we can build an image processing design on the Zybo Z7 which is capable of using both HDMI input and the MIPI camera interface.. I also want to lay the ground work to be able to create an image processing system that allows me to quickly and easily test cameras and sensors. As such a future upgrade to this project will be to support a parallel Pmod camera as well. . We will then be able to select between which imager we wish to use for out algorithm. This has the added advantage that with pin out on the Zybo MIPI connector has been aligned with other commonly used maker cameras for example the Pi Cameras. We will look at how we can use the Pi camera in another project. . MIPI is the commonly used abbreviation for the Mobile Industry Processor Interface. This is an interface which is designed for uni-directional data transfer at high bandwidths using a number of high speed serial lanes.. MIPI has a number of different layers just like the OSI model, for this application we will be using the MIPI DPhy for the physical layer and MIPI Camera Serial Interface issue 2 (CSI-2) for the protocol which transfers the image data. . If you want to know more about MIPI have a look at this previous installment of the MicroZed Chronicles on MIPI. The Zybo Z7 interfaces with a MIPI camera using a Flat Flexible Cable (FFC) with a pin out as below. Using this interface we can use up to two MIPI lanes for image transfer. Configuration of the imager is provided using a I2C connection, while there are two GPIO provided. . These GPIOs provide different fucntionality depending upon what camera we are connected too. In the case of the PCam we only need to use GPIO on pin 11 this drives the power up signal to the imager.. In some applications we may need to provide a clock however, for the PCam we do not need too as the PCam board contains its own 12 MHz oscillator.. The actual pin out is as below. . As the Zynq 7000 does not have DPhy capable IO, the designers of the Zybo Z7 have implemented a Dphy compatible approach which uses an external resistor network to provide the high speed and low speed MIPI interfaces. . . Our FPGA design is going to have two video inputs paths and a common video output path. . Internally our FPGA architecture will use the following blocks from the Digilent Vivado Library.. From the Vivado Library we will be using the following blocks. We also need to configure the Zynq PS to provide the following. When it comes to clocking the AXI Lite network is clocked at 50 Mhz, the AXI Streaming network and the DPhy reference is connected to 200 MHz. While the Dynamic clock generator reference is connected to the 100 MHz clock. . To aid the integration and testing of the interfaces I placed several integrated logic analyzers within the design. Below you can see the initial capture of the MIPI input. . As we have two inputs we need to ensure both input paths work correctly as we desire.. . . Floor plan of the completed design. . Once we have the FPGA design completed we need to write application SW to configure the image processing cores within the FPGA and configure the PCam for the correct operation. . Both cameras HDMI and MIPI will be configured to operate with a 720p resolution. . The application SW therefore needs to perform the following . The largest part of the SW application is in configuration the PCam over the I2C link. The data sheet is quite comprehensive however the first thing we need to do is ensure we can communicate with the PCam. . I do this by reading the register 0x3100 and ensuring the response is 0x78 which is the I2C address of the device. IF I do not receive that value then I declare the camera is not connected, provided the camera is connected the next stage is to initialize the camera and then configure the camera for the mode we desire to operate in. . Once I had worked out what we need to configure in the PCam I created, a simple function which would read through an array and output the configuration data to the PCam. . The software allows me to switch between the different input sources using the AXIS Switch.. When I put all this together and ran the application on my bench it seemed to work pretty well providing me with a flexible platform for future testing of cameras and image sensors. . . . With the software all written we can use both video input formats. We will also be able to see differences in the performance. . I intend to come back to this board in a future MicroZed chronicles blog and add in support for Pmod camera and expand the MIPI camera to work with the PI low light camera. Over the next few weeks and months but at the moment it is good sufficient for the testing I have in mind, and provides a very flexible platform. . You can find the files associated with this project here:. https://github.com/ATaylorCEngFIET/Hackster. See previous projects here.. More on on Xilinx using FPGA development weekly at MicroZed Chronicles.. .",1
"The project I want to share with you today is an Arduino maze game, which became a pocket console as capable as Arduboy!. Read up about this project on . The project I want to share with you today is an Arduino maze game, which became a pocket console as capable as Arduboy!. Welcome to my first tutorial!. The project I want to share with you today is Arduino maze game, which became a pocket console as capable as Arduboy and similar Arduino based consoles. It can be flashed with my (or your) future games thanks to exposed ICSP header.. I had an idea few months ago to build a maze game on Arduino, but without hard-coded set of mazes. It should be able to generate a new maze for each level you are playing, so you never see the same maze again :). Coding this was a bit of a challenge, since Arduino is limited in RAM memory, and then I found few examples how this can be done with simple Bo-Taoshi algorithm.. Code I used as a starting point I took by SANUKI UDON and his project HOW TO MAKE A MAZE GENERATOR USING ATTINY13A. My starting point was with a small breadboard with only 4 buttons connected to move through maze, but later when I decided it should be a game console I added a few more buttons. On larger breadboard you can see 2 more buttons, and later I added a third one to be used as start/pause/menu button. Connecting components as shown in diagram above.. Buttons:. SSD1306 OLED screen:. Buzzer:. A-Maze game source code can be found here: https://github.com/alojzjakob/A-Maze. Open in Arduino IDE and upload to your board or use ISP programmer to program your chip.. I recommend using USBTIny ISP, never had problems with it :) but you can also use ordinary Arduino to program your chip.. In my case I did not use external crystal, so my Atmega328p chip works on internal oscillator which is 8MhZ.. For more info visit this link: https://www.arduino.cc/en/Tutorial/ArduinoToBreadboard.. If you want to make this project permanent, with a nice looking case, here is the simple 3D printable case I designed: https://www.thingiverse.com/thing:2851100. In the pictures above you can see how all components are laid out on the 4x6 prototype PCB.. Most button wiring goes under the battery holders, try to make it as plain as possible, so battery holders can have relatively flush fit above the board with wires inbetween.. I also recommend do other wiring under the screen, since Atmega chip legs are soldered and exposed under the screen. When you are done soldering, put some insulation tape under the screen to prevent shorts etc.. ICSP header is optional, and if you decide not to expose it, it will make your assembly much easier, 6 connections less to take care of, but program the chip first before you solder it, or use 28 pin DIP socket so you can easily remove the chip for programming.. .",1
"A pantry which can automatically replenish kitchen items.. Read up about this project on . A pantry which can automatically replenish kitchen items.. Most of the times, when I want to cook something I find some cooking ingredient (onion, garlic, chili etc.) is running low. In some cases I buy wrong item such as garlic instead of onion. When I reach at my kitchen I observe that, I have a plenty of onion but no garlic. How will you feel in such a situation?. To get rid from such situation I built a Smart Pantry which can order automatically to replenish every ingredients of my pantry with Amazon DRS. Busy life, easy solution!!!. Here, I will show you how I made such hi-tech pantry and I hope you will able to reproduce it as your requirement.. So, let's get started. First I will explain how I prepared my pantry to sense the shortage of any ingredient. I used Force Sensitive Resistor (FSR) to detect the absence of ingredient in a specific box of the pantry. Arduino UNO is used to to read the sensor value. . I took a 3 compartment kitchen box for my demo project and it can house three different ingredients into it's three separate box. For sensing the shortage of ingredients in a box I am measuring weight of each box with force sensitive resistor. Though FSR is not very accurate for weight measurement but enough for this project for identifying a blank box.. Photos attached above shows how I placed fsr in the box. I placed one fsr below each compartment and tried to put it at the center of the compartment. Using mini drill I made two holes for every sensor to bring out the pin of the sensor out of the box. Then I soldered jumper wire to each pin of the sensors to connect it with Arduino.. Three sensors are used for three separate parts of the box and sensors are placed in the center of each box. . Force sensitive resistor change its value when a force is applied to it. Pressure from a hard surface is not good for FSR and you will not get accurate result. For better output I place a small piece of foam on the bottom of every inner box using double sided tape. Place it in such position that it exactly be on the sensor.. Our pantry is ready!!!. DRS provides connected devices with direct access to Amazon’s powerful retail platform to order any item automatically. With easy-to-use APIs, device manufacturers can take advantage of Amazon's authentication and payment service.. After integrating with Amazon services like Login with Amazon (LWA) and Simple Notification Service (SNS), a simple API call allows a manufacturer to place a product order on behalf of a customer.. Let's get started with DRS.. If you don't have Amazon Developer or AWS (Amazon Web Services) Account then sign up for it.. For creating Amazon Security Profile:. 1. Log into Amazon Developer Portal. 2. After Successful Login to Developer Portal go to ""Login with Amazon"" from Apps & Services tab.. 3. Click on Create a New Security Profile.. 4. Now Click on Web Settings from Manage drop-down. 5. Click on Edit button and then Enter Allowed URL, Allowed Return URLs and Click Save button.. (Note: We will host a html page in a URL and the address of that page would be the return URL. You can set it later).. . 6. Now, click on General tab and note down the Security Profile ID and Client ID which will be required later.. Amazon Simple Notification Service (Amazon SNS) is a fast, flexible, fully managed push notification service that lets you send individual messages or to fan-out messages to large numbers of recipients. Amazon SNS makes it simple and cost effective to send push notifications to mobile device users, email recipients or even send messages to other distributed services.. For Creating new Amazon Web Services SNS:. 1. Login into Amazon Web Services Console. 2. After Successful login in AWS Account search SNS and click on it.. 3. Click on Create topic button. . 4. A popup for SNS will be displayed. Enter Topic Name and Display name respectively. After writing this click Create Topic button.. 5. Click on Edit Topic Policy from Other Topic Actions. 6. Chose the option of ""Only these AWS users"" and then write AWS Account ID. You can get your AWS Account ID from My Account option. . 7. Now click on Update Policy button.. 8. Note down the SNS Topic ARN(Amazon Resource Number).. 9. Now, click on Create subscription . 10. From the Protocol field select Email and enter your email address in Endpoint field.. 11. Click on request confirmation. An email will be sent to your account.. 12. From the provided link confirm your subscription.. 1. Login to Amazon Developer Portal and go to ""Dash Replenishment Service"" . 2. Click on Begin button. So, it will be redirected to Register with LWA page. Enter your LWA Security Profile ID (which noted earlier) and click next button.. 3. Now Enter your Amazon Web Services SNS ARN (which noted earlier) and click next and Done button.. 4. Now it is the right time to add a device in DRS account. Click on CREATE A DEVICE. . 5. Enter your Device name and click to GENERATE button to generate a Model ID. Then Upload a photo. After that click next button.. 6. Add Slots to your Device. Create as many slots as many you want for your device. Enter Product ASNs to slots. For information of Finding ASNs click on the ""How to find ASNs"" Google. Add items to your slot and submit. . Now you can use the Amazon DRS API in your application. For API and other help of DRS please visit: developer.amazon.com/public/solutions/devices/dash-replenishment-service. . Once we are done with creating all the individual elements, we are now ready to generate the authorization code from the DRS service that will be used to place order by Pantry.. For creating your own product registration page, you may use any of the free hosting platforms available.. Here is web page I have hosted on for register product from customer end to Amazon DRS. You may visit following link: . https://smart-pantry.000webhostapp.com/ . And try to register by providing random serial no.. The html code for the website has been uploaded to code section. . To register your product:. 1. Click on Login with Amazon and click on Okay button.. 2. Choose the product for first slot and than click to next for second slot. 3. Select product for second slot and so on.. 4. Click to Complete Setup to Confirm Details.. 5. After successful confirmation you will get an Authorization Code . 6. You will also get an email about the confirmation. . .",1
"How to make LAN/Ethernet relay switch using Arduino UNO and ethernet shield ENC28j60.. Read up about this project on . How to make LAN/Ethernet relay switch using Arduino UNO and ethernet shield ENC28j60.. How to make LAN/Ethernet relay switch using Arduino UNO and ethernet shield ENC28j60. This is a simple tutorial, remote control over the LAN. . To control it, I used HTTP and JSON. This electronic circuit can be used as part of a larger system, IoT Internet of things.. See more: How to make LAN/Ethernet relay switch using Arduino UNO.. Connection ENC28J60 from Arduino UNO.. . This software supports two relays, but it's not a problem to increase their number. IP device is permanently assigned to 192.168.0.101. If you had more devices working on the same network, you'd have to remember about unique IP and MAC addresses. . To turn on the relay, just enter the link in the browser. http://192.168.0.101/sw_on=1, ""1"" is the relay number. To turn off the relay http://192.168.0.101/sw_off=1. In response we get a JSON relay state {""sw_0"":0 ,""sw_1"":0 }.. . .",1
"Cellular backdoor with Hologram Nova on Raspberry Pi flask-ask server-Amazon Alexa controlled.. Read up about this project on . Cellular backdoor with Hologram Nova on Raspberry Pi flask-ask server-Amazon Alexa controlled.. Our previous project with the ARDrone 2.0 helped us learn about a new project. Our current Alexa and Arduino Smart Home Challenge entry introduced us to the skills needed to create a working demo for a voice-controlled drone.. Here is what we came up with:. Below, we outline our process.. To set up the Pi with the necessary software, install flask-ask:. You'll also need the library that controls the ARDrone via WiFi. Clone this repo and run the install.sh script provided.. We created a skill that was linked to a server running off the raspberry pi. Flask is an easy to use python library to serve an application. Using flask-ask, we can configure the server to communicate with our Alexa skill. We use Ngrok to serve the application externally and gives us an https link we'll need for our Alexa skill. Here's a snippet of code for the application. The full app.py script will be attached below.. To run this application, just type:. For this project, we used ngrok to serve the application over https. We used a reserved subdomain name so the link can be consistent with the Amazon Alexa skill configuration. To serve the application, run:. Because the Raspberry Pi joins the ARDrone's WiFi access point, we use the Hologram Nova USB modem as a cellular backdoor enabling Alexa to communicate with the flask-ask server.. We found that the application worked smoothly using hologram nova with a monthly data plan of 250mb. You can set this up using the hologram dashboard and activating a sim card.. Setting up the Alexa skill, navigate to the Amazon developer dashboard and log in. Click on Alexa and get started with Alexa Skill kit. Then create a new skill by clicking Add a new skill. Start completing the tabs on the left following their instructions. . Follow the instructions given by the gui.. Finish filling out the last two tabs until all the check marks are green. Then launch your skill with the beta testing feature. This allows you to host your skill on any echo device before publishing it. Follow the instructions on the email link to install the skill on your Echo device.. To run the entire application, first make sure your drone is on and its wifi connecting is up. On the Raspberry Pi server, connect to your ARDrone's network. In the terminal, connect to Hologram's network running the following command:. Once the blue LED on the Nova is solid and this process has finished, you are on the cellular network. On a separate tab, run the ngrok command we mentioned earlier:. Finally, in another tab, run the application. If the drone's lights are green, you're good to fly. If not, ask Alexa to reset it by saying, ""Alexa, ask MajorTom to reset."" . Now try to command your drone to fly! Say, ""Alexa, ask MajorTom to blast off."". 🎶 I think my spaceship knows which way to go 🎶 . kindbot.io .",1
"Sony Spresense Board + NodeMCU + Google Firebase + Android Studio. Read up about this project on . Sony Spresense Board + NodeMCU + Google Firebase + Android Studio. How to create a high quality project Sony Spresense Board & Extension Board has arrived. Thanks for the product and quick delivery. Package photos are below.. . Linux Ubuntu requires the user to be a member of the dialout group. Adding user to dialout groups is executed with the following command in the terminal: . - Log out and log in again to use the new settings. Now you can connect the Spresense board to PC via the USB cable.. 1. Install Spresense Arduino Library. . - The Spresense Arduino Library is now installed.. 2. Install Bootloader. 3. Build your first sketch to verify installation. The code that is update on the Sony Spresense Board is listed in the attachments with name sony_spresense_board.ino. Parts of code for elements are listed in other steps. All the code sections listed in the following steps are used in sony_spresense_board.ino.. When the microphone detects the sound, changes will be read and will be set as mic_data = 1. If there is no change in the sound sensor then the value will be mic_data = 0.. We can see that when the sound is detected, the LED will light up.. - I will connect the speakers to the Sony Spresense board. So I wil be able to make sound warning. Warnings will be saved to SD card as "".mp3"" format. Depending on which sensor is activated, "".mp3"" files will also be activated. This will be in the house.. - This can be seen/heard on video for testing, which is indicated in Step 7.. . - Installing mp3 player:. - player.ino folder is shown below:. Stepper motor in this project serves to rotate security camera. It will constantly rotate the camera. The radius of movement is 60°. Testing stepper motor is shown in the pictures below.. - IN1, IN2, IN3, IN4 are pins for programming the stepper motor. ""d"" is the delay that occurs between commands. ""for"" is used to create an angle that the motor will go in one direction. for the value for (int I = 0; i<150; i++), this is the angle of 90°. The first for the loop achieves that the engine rotates in one direction, while the other for the loop achieves the return to the starting position.. . - If the pir sensor detect motion, the value of the variable pir_data will be 1 (pir_data = 1) and the LED will turn on. If there is no detect motion the value of variable will be 0 (pir_data = 0) and the LED will turn off.. . Distance sensor (Ultrasonic Module HC-SR04) serves the distance sensor to inform the owner of the house via the Android application that someone is outside the door and how far away (meters). Sensor testing is shown in the pictures.. - In the code we see that the distance value is obtained. This distance value is printed using the Serial.print command and the printout is displayed as in the last photo. (Tools > Serial Monitor). - The codes required to load according to the associated schema below is sony_spresense_board.ino.. . . . Google Firebase serves to store data collected on the NodeMCU and Sony Spresense Board. These datas can be further used on websites, mobile applications and anywhere they can access the Internet. Sign in using your Google Account and follow the steps below.. After login follow the next steps:. Now, we've connected NodeMCU and Google Firebase.. . - The application was created in the android studio. The part that connects the app from Google Firebase from where the sensor data is taken from is shown below.. - The part of the code that is specified is used to display distance data. Part of the code used to retrieve data and converting to int from Google firebase is below.. - If-else is used to decide whether someone is outside or not.. . .",1
"Use your Arduino to create a Binary Clock and learn how to read Binary numbers.. Read up about this project on . Use your Arduino to create a Binary Clock and learn how to read Binary numbers.. This clock does not (yet) synchronise with any time server and does not use a real time clock module to stay exactly on time (yet). . It just runs a basic seconds count with a 1000 millisecond delay in the sketch. LEDs are connected to PWM 3 to 19 with a resistor each. . Note that: PWM pins 14 to 19 are the Analog pins 0 to 5.. I will be adding Internet time synchronisation soon. Stay tuned and hit Follow! ;). Enjoy and greetings,. Peter Lunk. .",1
"8,000 RPM motor with a guitar pick! Crazy! You will shred faster than any other guitarist!. Read up about this project on . 8,000 RPM motor with a guitar pick! Crazy! You will shred faster than any other guitarist!. Create your own speed pick and stomp back at home with this easy 3D-printed and a simple Arduino project!.",1
"This tutorial will show how to install FFmpeg into Raspberry Pi, then stream video to local web which can be access through the computer.. Read up about this project on . This tutorial will show how to install FFmpeg into Raspberry Pi, then stream video to local web which can be access through the computer.. Part list to purchase:. 1. Raspberry Pi 3 https://amzn.to/2VJIOBy. 2. USB camera Logitech https://amzn.to/35w1DMN. Buy electronic component on utsource.net. . The following tutorial will show you how to install FFmpeg onto the Raspberry Pi and stream video to the local web which can be access through computer/phone/tablet.. Note: Model B+ (4-Cores) can do “make -j4” instead of  “make”. This ""make"" command will take 4 hours long 🠚 take a sleep instead of waiting for it!. Input following settings:. Make execute file for easy command:. Input following settings:. Change the mode for file webcam.sh so it can execute, then run it:. After the above command, streaming will be started to local web.. Go to web browser, type address <your-ip-address:8090>/test.mjpg. Note: To stop the camera, press Ctrl+C at terminal, then type command:. As a test, I uploaded this video where you can see clock needle rotate every single second!. In order to run FFmpeg service without typing the command /usr/sbin/webcam.sh, go to /etc/rc.local 🠚 then add command line /usr/sbin/webcam.sh before ""exit 0"". Every time Raspberry starts up, FFmpeg will automatically run without typing code..",1
"This micocontrollers laboratory is designed to speed up projects, and make easy and clean connections.. Read up about this project on . This micocontrollers laboratory is designed to speed up projects, and make easy and clean connections.. An easy way for practice with microcontrollers (sorry I dont speak English).. Elements:. . . . . . . Star Wars Melody Player, shows buzzer and dancing LED also each component in detail. . . . more info about sprumn analyzer follow this link . Thank you!.",1
"When the 3.5mm audio is plugged in, it disconnects internal speaker. This project takes control of the behavior of the speaker.. Read up about this project on . When the 3.5mm audio is plugged in, it disconnects internal speaker. This project takes control of the behavior of the speaker.. WARNING! DO AT YOUR OWN PERIL, THIS WILL DEFINITELY VOID THE WARRANTY FOR THE ECHO DOT AND MIGHT BRICK THE DEVICE. On the other hand your loss is limited to $30, that's what Amazon is charging now for the device, and you are working with low currents, so no electric shock risk :-). I did brick the Echo, so do what I say but don't do what I do :-) Nevertheless, got a new one and completed the project, now being more careful with soldering (must have shorted something previously). See the video below. At the end I added the description of the solution as well (with the code). At $30 the Echo Dot is a steal as a music streamer, as it has an 3.5mm audio jack (as well as Bluetooth, if that's what you prefer). The internal speaker is good for only command-response stuff, I wouldn't self-inflict listening music on it. The challenge is that when the 3.5mm jack is plugged in it silences the internal speaker; unless you have an always-on amplifier you'd end up missing Alexa responses. The typical use case in my opinion (and my case) is an amplifier that's used for various inputs (music streaming, record player but could be TV, CD, etc) and that I switch into stand-by when not used. As such there is no guarantee that when you talk to Alexa the amplifier would be both on and connected to the right input; with the internal speaker silenced always when the 3.5mm plugged in it is a lottery to hear the responses.. The Echo Dot is using a 3.5mm connector that disconnects two pair of pins when the jack plugged in. The solution is relatively simple: run cables to those pin pairs and decide when to activate the internal speaker. There are various options that can be pursued, depending on your configuration and sophistication:. Taking apart the Dot is actually not that difficult. But things will never be the same again afterwards; there is a sticky rubber pad that you can put back but it will show has been removed (though this is at the bottom of the device so not visible at all). Also, there is some drilling, soldering, cutting involved. And as I warned at the beginning, this involves working with delicate electronics, so you always risk to brick the device. Now that you have been warned.... Gently remove the rubber pad at the bottom. Pry it delicately and it will peel off.. Once the rubber mat removed there is still a transparent foil glued to the bottom. In order to access the screws I simply drilled holes through that foil. Using a Torx screwdriver, remove the screws. Delicately open the device.. Now comes the tricky part. The pins for the 3.5mm connector are very small so be very careful. The cables need to be soldered to the the pins marked 1-4 in the photo above. If you short pins 1&2 and 3&4, the internal speaker will be on, even if a 3.5mm jack is plugged in. As I described in the ""My Solution"" section, there are various options how and when to turn on/off the internal speaker.. Same view with the cables soldered.. In order to get the cables out there are few modifications that are necessary.. Firstly, the internal skeleton is of something that looks like a magnesium alloy (BTW quite remarkable for a device at this price point). It is necessary to remove a little underneath where the connector sits to let the cables out. I used a Dremel but whatever works.. Next there is a need to cut on opening in the plastic enclosure to let the cables out.. Just to make sure the cable stays firmly I put a little glue, and an isolation on top. Eventually, assemble it altogether. I'm using a Sunfounder 2 Channel 5V relay. . Connected as follows (relay -> Photon), please note that the jumper RY-VCC/VCC MUST be removed in this configuration:. Then with Alexa connect what I marked as 1&2 to J1 1&2 and 3&4 to J2 1&2 (these are normally closed, so even if power down, the internal speaker would be active).. I'm not documenting here the Photon part, is part of a serial controller described here https://www.hackster.io/saka/automate-bluesound-s-node-with-amplifier-and-alexa-control-3fbc9e.. Additionally, I'm using the amplifier 12V trigger. This ensures that when e.g. the amplifier is switched off manually, it resets Alexa to the internal speaker.. . . .",1
"This omni-directional robot will detect your face, track you and then close in on his prey. Autonomously.. Read up about this project on . This omni-directional robot will detect your face, track you and then close in on his prey. Autonomously.. My initial submission to the ""Hackster Terminate the competition"" competition was to create a robot that seeked out humans but unlike those in the terminator universe it did not go around killing people, instead it used it's powers for good. . This omni-directional robot will find you, detect you, home in on you and compliment you!. One requirement that I specified to myself is that I would ensure that it could be made without having to build any of the electronics yourself. Every part inside of this robot can be purchased from eBay, plugged together using freely available tutorials and they should work. The case will then be 3D printable so you can either print it yourself or get it made on 3D Hubs. I think this project meets this goal and I will now guide you through the steps of building your own Hunter Flatterer Robot. So let us start with a system diagram that shows all the parts of the robot and how they plug together. We will be referencing this throughout the build and checking it off as we go along.. Don't be too daunted by this diagram if you have never used motors before. It basically boils down to Four main parts:. The next four sections will mirror this list and guide you through setting up each part.. So you've got yourself a battery, what next?. The above diagram shows how to connect up all the components for power, if you follow the wiring in the schematic this is the real life representation. . I could explain this, but it's better to just follow the tutorial I did: http://www.instructables.com/id/Arduino-Modules-L298N-Dual-H-Bridge-Motor-Controll.. So now you've wired everything up, you have blue lights flashing everywhere and no blue smoke so you're good to go. Let's get on to making this bad boy work.. When I designed this I decided I wanted two things to happen, it look cool & it shows off the Ci20 as well as possible. I mean this is the point of the competition right?. I designed this robot to be completely 3D printable and the designs are all available below. Basically at this point go and print yourself the top, bottom & wheels. If you don't have access to a 3D Printer you can check out www.3dhubs.com to get someone to print it for you! You can check out the designs below. Here's a pretty render I did of the design to make sure that the ci20 was going to fit and be in pride of place. Once you've got it all printed you can glue all the parts in as above (or use masking tape if you're not feeling two confident. You will need an M4 bolt to hold in the motors.. The CI20 is the boss, the brains of the operation. Without it the robot will flounder. So what does it do?. Well the ci20 is going to use OpenCV to detect your face and then send appropriate commands over serial to the Arduino to get the motors going in the right direction.. Step 1: Install OpenCV. Like I've said throughout this guide, I wasn't trying to reinvent the apple-cart. I'm trying to build something that you can do at home and extend on with relative ease. So to install OpenCV go and follow this tutorial:. It talks you through step-by-step of getting OpenCV up and running.. Step 2: Run the code. The Face Tracking code will need compiling and running, run this command on the file on the Ci20.. The binary file to be created: FaceTracking: main.cpp > Source file: FaceTracking.cpp. Easy right?. After flashing the Arduino with the code in the attachments below. Plug the Arduino into the USB port on the CI20 and run your recently created FaceTracker. You will see a camera feed pop up (Oh yeah, plug in the webcam) and if you stick your face in the middle the wheels on the robot should start making it drive forward!. Now due to time constraints I didn't quite get it to do anything else, so here's a challenge for anyone that has got this far. There are two things you can add to make this bot super awesome:. Add a set of speakers and some sound files so that when the face is large enough on the screen it plays a sound file to the person.",1
"Portable lighting station synchronized with music, with the Infineon CoolMOS C7 MOSFET.. Read up about this project on . Portable lighting station synchronized with music, with the Infineon CoolMOS C7 MOSFET.. Portable lighting station synchronized with music.. Always use technology to improve the world, if you are a black hat or gray hat hacker please abstain at this point......... or at least leave your respects to make me feel less guilty XP.. Nowadays for an organizer or independent musician, events, reunions and parties may not follow the traditional way of arriving, playing and leaving. Fans today require a higher level of entertainment, which led to organizers having to buy expensive lighting and sound control systems to achieve the level needed for the fans' show.. This type of lighting systems have a complex and expensive system of controls to handle each of the lights, most of the time it is necessary to set up a light show beforehand for each of the songs, increasing even more the costs.. Here are some similar products in the market, which are of very low quality:. None of the products available in the market sell for less than 40 dollars. They only allows the control of low power elements such as LED's, but if we really want to control high power elements we need a circuit that is capable of it without risking the controller, in this case an Arduino. . The purpose of the circuit is to switch from a digital signal of 0-5 V DC to a control signal of 120 V AC.. In the first stage of the circuit we have an Infineon 600VCoolMOS C7 MOSFET, which will allow us to control the optocoupler demanding the minimum current to the Arduino board, because the optocoupler requires at least 5 volts at 36mA to be able to drive. This is very close to the limit of the current that the Arduino board can supply, however the 600VCoolMOS only requires a signal of 5 volts at 60uA, thus showing an excessive improvement in the consumption that it requires from the board.. This consumption is extremely important because it gives us the possibility of being able to literally use any controller to perform this task due to its low consumption, thus not requiring more expensive drivers that can supply said power in their ports.. The MOSFET's operation is to ground the optocoupler diode, once this is activated it allows the flow of energy through the DIAC and this in turn allows the passage of current in the TRIAC connected to the lamp and igniting it in the process.. The other great advantage of using the MOSFET is the ease of increasing the number of drivers as in Image 1 or using more powerful drivers as in Image 2 without changing the design of the main circuit.. Different results in different boards: . Another solution to this project would have been to use relays, which have the function of performing this same task but mechanically, by generating a ""Click"" on each switch. The problem with this type of component is that if we use dimerizable lights or the switching frequency was larger, the relay could not perform this task, which the mosfet, optocoupler and triac can easily do.. For this project it is possible to make individual modules to be able to expand the number of bulbs or high voltage devices connected to the Arduino or to any other board. . You can also make a complete module for 4 AC outputs this in order to integrate the entire system on one PCB, both files are in the ""PBC Files"" folder in the Github or in the footer of the project.. To develop this circuit, we first tested each of the stages were carried out to demonstrate its effectiveness, the first circuit to be tested was the control of the bulbs by means of a button and safety gloves due to high voltage. (Please if you are to replicate the experiment use any safety measures possible, playing with live current is not wise).. For the second circuit since the Lamp control works well, a platform with LEDs was made to see how the Arduino controlled the lights to the rhythm of the music, the code is in the ""Arduino Code"" folder, the code is thoroughly commented.. Once we saw that the lights control worked, we connected all the components of the whole circuit in a protoboard, to control the 4 lights and connected it to the Arduino.. As you can see this was done in steps to manage safety, I repeat it is dangerous managing live 120V AC power so take any precautions into consideration.. With the circuit running, we decided to make control modules like the one shown in the image to not depend on any cable failing in the breadboard.. The board was made based on the one that is in the folder ""PCB Files"" however since we did not have transfer paper we had to make the vias with a sharpie. It is a permanenr marker so when you dip the plate in ferric chloride it survives, this process is the classic one for making homemade PCBs. You can get to know more about this process in the following link:. https://www.hackster.io/Junezriyaz/how-to-make-pcb-using-marker-531087. After making three aditional PCB's, we decided to put the entire circuit in a box, covering it and with 4 identical lamps so that this was a more aesthetic product and easy to transport.. And we are done! With this we have finished the light synchronization system for electrical elements (120 or 220 volts).. This project was carried out in order to demonstrate that the control of lights through microcontrollers can be efficient and cheap, since current systems at a much lower quality are sold at excessive prices and therefore not available to all.. And to showcase a creative and seldom seen approach to use the CoolMOS C7 MOSFETs provided by Infineon. All the information about the technology used, and direct references are in our wiki:. Wiki: https://github.com/altaga/MOSMusic-MM-/wiki. .",1
"MAX86150 puts ECG and SPO2 on a single chip, opening new opportunities for calculation of pulse transit time and indirect blood pressure.. Read up about this project on . MAX86150 puts ECG and SPO2 on a single chip, opening new opportunities for calculation of pulse transit time and indirect blood pressure.. Measuring blood pressure traditionally involves a nurse or the doctor placing an inflatable handcuff to somewhere above your elbow, asking you to breathe in and out. They then use a stethoscope to understand the timing of the measure. If you happen to have one of those digital Blood pressure meters at your home, you already know the poor accuracy. This is by no means a continuous or consistent measure of blood pressure !. Cuff less BP measurement has always been a challenge. There are a wide variety of studies where several methods were developed for cuff-free BP measurement and one among them which showed great potential is PTT or Pulse Transit Time, which acts as an indicator of Blood Pressure. Pulse Transit Time in simple words is the time taken by a pulse wave to propagate from heart to the point where reading is taken, in our case the finger tip.. Maxim Integrated recently released the MAX86150, a biopotential sensor which gives both Photoplethysmogram (PPG) and Electrocardiogram (ECG) simultaneously sampled. According to clinical studies, we can measure PTT(Pulse Transmit Time) which is a measure of our blood pressure using ECG and PPG waveforms.. At ProtoCentral, we are passionate about pushing the boundaries of DIY and affordable health. So we made a breakout board of this little sensor, which can be connected to any micro-controller using a simple I2C interface with easy-to-use ECG pads on which you can record ECG from your fingers.. You can plug in this breakout board just like how you plug in I2C devices to an Arduino Uno using jumper wires or use QWIIC connectors for a quick connection !. Arduino connect to BreakoutBoard. 5V VCC. GND GND. A4 SDA. A5 SCL. You can get our Arduino libraries for the MAX86150 here or you can install it from the Arduino IDE's libraries page. Once installed, check out our examples:. . You can either use the Arduino IDE's built-in serial plotter utility or use something like ProtoCentral OpenView to look at the ECG and PPG waveforms.. This functionality is not currently built into the current version of our Arduino library, but will be in the future. Meanwhile, we used Python to calculate the PTT peak and foot intervals of each segment of ECG-PPG that is measured simultaneously by the MAX86150 breakout board. . Below is quick run through of the code.. . For each R peak detected, we discovered the following trench and peak of the processed PPG signal. The time intervals are obtained using the sampling frequency. . PTT is often inversly proportional to BP. Though there are several limitations of using PTT to measure ecg, this board opens a platform to work on those limitations. . Note: There is still work to be done to accurately calculate PTT intervals, watch this space for updates on this project. .",1
"Electroplate conductive materials using an Arduino Uno and a relay.. Read up about this project on . Electroplate conductive materials using an Arduino Uno and a relay.. Electroplating is a process that uses an electric current to reduce dissolved metal cations so that they form a thin coherent metal coating on an electrode.. Reasons for electroplating: . This system will use a bucket with an electrolyte solution made of copper sulfate as well as copper pipe to plate metal objects. . I made my electrolyte solution by mixing copper sulfate and distilled water. The ratio of copper sulfate to water will determine how conductive the electrolyte is, and you should vary this ratio depending on your desired plating speed. The more conductive the solution, the faster the plating process will occur. I'm starting off with a ratio of 1 oz of copper sulfate to 2 cups of distilled water. . Once we have our electrolyte solution, we will need to set up the copper pipe and aquarium pump. I designed some clips in Tinkercad to hold the copper pipe along the side of the bucket and 3D-printed them on my Anet A8. I then inserted a tube from the aquarium pump through the copper pipe to the bottom of the solution. This will help agitate the electrolyte solution during the plating process. I also 3D-printed a mount to suspend the cathode in the center of the bath.. . The Arduino Uno is used along with a relay to toggle the power to electrolyte solution. The Uno will turn on the power for 10 seconds and then leave it off for 1 second. These values can be adjusted in the sketch as desired. . I have a simple button switch to enable/disable the plating process. . . I'm using a 4s lipo battery along with a buck converter to regulate the voltage because I don't have a bench power supply. I plan to test plating at different voltages to see what works best for my setup.. . . I started off by plating some coins. These were done at around 3 volts and were pulling around 600mA during the plating process. I plated each coin for about five to ten minutes and was surprised by how fast they plated.. . It works! But plating coins has been done many times before. So I ordered some conductive paint and started painting some 3D prints.. . First attempt was this wolf ring, which wasn't the best print but worked great as a first test.. The ring wasn't plating as fast as the coins because I didn't apply enough coats of the conductive paint. I plated this ring for about 4 hours. . Then I tried some more 3D prints but this time I applied an excessive amount of paint hoping that it would make the prints more conductive. . The prints are much harder to plate and it seems I still need to test some different settings to fine tune the process. . . . . It looks like I still need to test some different settings on the system but overall I'm very pleased with the results. . I hope you enjoyed this intro to electroplating and encourage you to give it a shot.. I would like to thank Elegoo for sponsoring this project. They sent out their Super Starter Kit which came with everything you need to get started hacking on Arduino projects. I used the following items from the starter kit: Arduino Uno, prototyping hat, breadboard, relay, resistors, leds, button switch and jumper wires. . Get your kit today and start making!. https://www.amazon.com/EL-KIT-003-Project-Starter-Tutorial-Arduino/dp/B01D8KOZF4.",1
"This is the 2nd tutorial on my ESP32 learning journey. Here, an OLED shows time and captured data by DHT sensor (temperature & humidity).. Read up about this project on . This is the 2nd tutorial on my ESP32 learning journey. Here, an OLED shows time and captured data by DHT sensor (temperature & humidity).. This tutorial is a continuation of a journey to learn more about this great IoT device, the ESP32.. In my last tutorial, IOT Made Simple: Playing With the ESP32 on Arduino IDE, we explored:. Now let's included an OLED to present locally the data captured by DHT sensor (temperature & humidity) as well the local time. . https://media.giphy.com/media/qdxLVaiWGooak/giphy.gif. We will use the Arduino IDE to program our ESP32, same way we do with the ESP8266 family.. Install Drivers:. It is important that you have installed on your computer the updated CP210x USB to UART Driver. Enter in this link: usb-to-uart-bridge-vcp-drivers and install the proper driver for your OS.. Install Library:. The novelty here is that Expressif itself in its GitHub will give us the proper directions for library installation: arduino-esp32. Follow the instructions for your OS. . After that, restart Arduino IDE and it's done! You must see several boards in the ""TOOLS"" menu. Select the appropriate for you. In general, the ""generic"" ESP32 DEV MODULE works fine.. We will start from the HW assembled in my last tutorial. We will go faster here, but if want more details, please visit: IOT Made Simple: Playing With the ESP32 on Arduino IDE. In short:. Install the DHT22 as shown (looking the sensor with the ""grid"" face you, count the 4 legs from left to right):. Then:. For testing the DHT, first install the libraries as described in the next step.. First, you need to have the Adafruit Library installed in your IDE. Go to their GitHub and download the updated version of this library: DHT-sensor-library. When I used for the first time I got a message:. After some digging, I found that it is also necessary to have the Adafruit Unified Sensor Library also installed. So, I did it from Arduino IDE Library Manager (see picture above). After that, everything worked fine, same as we use to do with Arduino and NodeMCU.. Let's do some tests with this sensor. You can use the ""DHT tester.ino"" example sketch that it is included in the library, or do your own.. I wrote a simple code for test the sensor that can be downloaded from my GitHub: ESP32_DHT. For this tutorial, I will use a 128 x 32 I2C OLED display. In principle, once you have the library installed, the ESP32 would also work with a 128 x 64 OLED display. Once this device is a I2C display, you will need to connect 4 pins with the ESP32:. Now, install the library. We will use here the Daniel Eighhoen version. Open the library manager and search for ""OLED"". See the above picture. I have the 3.2.7 version installed.. Open SSD1306SimpleDemo in Examples Menu and replace the code:. with:. Below a GIF showing the Simple Demos partially working. Note that this demo was designed for a 128 x 64 display, so you realize that in my case, where I used 128 x 32, the graphics are shrunk.. https://media.giphy.com/media/key4A8EOkHKzC/giphy.gif . You can easily create and install new fonts on your display. I created a new font that can give me around 2 lines of 20 characters each on the 128 X 32 OLED display.. How to create it:. Go to SSD1306 Font Converter, a great tool also developed by Daniel Eighhoen. There, you must choose:. Press Create and voilá! A ""C Font"" file is created in the proper window. . The above photo shows a new ""Hello World"", using this new font. A clean code can be download from my GitHub: ESP32_SSD1306_Test. Note that you must have the 2 files on your Arduino IDE if you use a modified font.. Let's now display on the OLED, the temperature, and humidity captured by the DHT22 sensor. In our loop() function, we will have:. The function getDHT() is the one used before. The new function here is the displayData(), that is shown below:. The above photo shows the final result, You can download the complete file from my GitHub: ESP32_DHT22_SSD1306. Usually, it is very important when capturing data with sensors, to also register the time, when it was collected. Let's use the NTPClient library for that:. Change the line:. by: . Enter with your WiFi network credentials. At Serial monitor, you must see the actual time. At basic version, a European time will be shown. At advanced version, you can change it.. Now, let's merge this TimeStamp code with the one developed before. The result is shown in above photos.. The complete code can be downloaded from my GitHub: ESP32_Time_Stamp_DHT22_SSD1306. On last step we put all together, having a fixed display with 3 information:. But, how we can have each one of that information be shown one at a time at the display?. We will need a ""page selection"" mechanism. There are several different mechanisms to be used. Usually with multiple buttons, selecting menus. Just for fun, let's try something not usual here. The potentiometer!. We will turn the potentiometer like we do with a radio dial, and depending on the value read, we will define one specific ""display"" to be shown at OLED. Let's define 4 possible displays:. The Analog Input can read 4,095 different values. We need only 5, so let's define ranges for that:. Let's define a int variable that will receive as content: 0, 1, 2, 3, 4 5, depending of screen to be shown:. Now we need to create a function, getDisplay(), that will read the value of potentiometer, returning the correct display number (displayNum will be a local variable inside this function). The function will look like:. And the displayData() function, will display the selected display (or screen):. Both functions will be included in our loop() function:. There is a lot left to be explored with this great IoT device. We will return soon with new tutorials! Keep following MJRoBot tutorials! As always, I hope this project can help others find their way in the exciting world of electronics, robotics, and IoT!. Please visit my GitHub for updated files: ESP32 SSD1306. For more projects, please visit my blog: MJRoBot.org.. Saludos from the south of the world! See you at my next tutorial!. Thank you,. Marcelo.",1
"Build a beautiful Holiday Shadow Theater and control the animated scene with your phone.. Read up about this project on . Build a beautiful Holiday Shadow Theater and control the animated scene with your phone.. This project uses an Arduino 101, a strip of addressable LEDs, foam-core and cardstock paper to create a phone-controllable animated Shadow Theater. The electronics are used non-destructively, so you can easily use them later for another project. Here's a handy Sparkfun wishlist with 99% of the electronics.. How it works: . One strip of addressable LEDs is wrapped over a piece of foam-core in the middle of the Shadow Theater. The lights near the bottom are slowly fired in sequence and shine through pinholes to create an animated shadow. Lights further up are channeled into the buildings on top, and the last LED on the strip is used to shine on the whole scene, creating the main shadow. . The Arduino 101 has a Bluetooth radio built-in, and I use a quick prototyping app called Blynk to remotely control the scene. In the example code you can control the colors in the buildings, turn on a flickering fire, and control the brightness of the main shadow light.. . Step 1. Collect the end harness from your LED strip by cutting about 1 cm from the end of the lights. Strip the wire ends.. Step 2. Break apart the bent header pins that came with your voltage regulator, and solder two of them to the ends of the green and yellow wires. This will let you easily plug them into the pins of the Arduino 101. . Step 3. Next solder the red wire to the VIN terminal on the Voltage Regulator, and solder two straight headers into the GND and VOUT pins as shown.. Step 4. Now connect the barrel jack adapters. First strip the ends of the wires coming from your battery case, then mount them in the terminals of the male barrel jack and tighten with a screwdriver. RED goes to the (+) terminal, BLACK goes to the (-) terminal.. Next connect the female barrel jack adapter onto to the loose wires coming from the beginning of the LED strip. YELLOW goes to the (-) terminal, and RED goes to the (+). . Step 5. Now connect your harness to the Arduino 101. The GREEN wire goes to PIN 6, the YELLOW wire goes to the GND pin near #13. . With the two header pins on the voltage regulator, GND goes to GND and VOUT goes to the ""Vin"" pin on the Arduino 101. Don't get this wrong! Plugging in backwards leads to smells and burns. I know this. . Print the foam-core pattern on regular printer paper (4 sheets) and print out the cardstock pattern on cardstock paper (4 sheets.) . Step 1 . Take the printed foam-core pattern pages and use them to cut out your foam-core pieces. You can lay a pattern on the foam-core, then lightly trace the outline with a hobby knife to transfer the lines through.. Step 2. Once you have the pieces cut, start by assembling the LED strip holder like so:. Now take your LED strip and attach the first LED to the bottom with tape or hot glue, and wrap your LEDs as shown. The idea is to keep the LED strip intact. It doesn't need to be a super tight wrap. . Once you've made three wraps, leave the tail end free and secure the top with tape or hot glue.. Step 3. This LED strip has addressable LEDs, meaning you can more or less say, ""hey, you in the middle, turn red!"" But they don't answer to ""hey you,"" so you need to know their numbers. . The LEDs below the crease will shine out the back of the Shadow Theater and be used for animation. In the example below, my animation lights are 0, 1, 2, 20, 21, 22, 40, 41, 42. Two LEDs in the top section will shine up into the houses. I use LED 23 to shine up into the back house, and 25 to simulate firelight in the front houses. . Count out your LEDs and draw a simple reference map that makes sense to you so you can enter appropriate LED numbers into the code later. Remember to start your count at the beginning of the strip starting with zero, because computers.. Step 4. Glue the LED holder down onto the foam-core bottom piece. Position it as shown and so the wide stripe of lights is roughly centered lengthwise with the base.. Now add the curved foam-core side pieces on the ends with hot glue as shown.. Step 5. Now add the light dividers and the foam-core top piece. The light dividers keep the animation lights from spilling up into the houses, and vice-versa. Position the largest divider close to the crease in the LED holder, and position the smaller divider above it so at least one LED is between them (see photos below.) Position the top piece so it's square with the base as shown in the slideshow below and secure with hot glue.. Step 6. Attach the end of the LED strip to the front top edge with hot glue so the last LED in the string can shine on the scene. This is the main shadow LED.. Connect a USB programming cable to the Arduino 101, and connect the LED strip, battery pack and Arduino 101 all together (leave the power switch on the battery pack to ""off.""). You'll need the Arduino IDE installed on your computer, with the Intel Curie Core (see Arduino 101 getting started.) You'll also need to install the Adafruit Neopixel library, and the Blynk library. . If you're new to Arduino, it's a good idea to run some basic example sketches to be sure everything's working OK. . Step 1. Install the Blynk app on your phone. . Blynk is a great tool for rapid proof-of-concept building and remote controlling your Arduino 101. BLE support still has some bugs, but Blynk is by far the fastest way I've found to control any Arduino 101 project from a phone.. Step 2. Load the example code in your Arduino IDE and change the LED pixel numbers if necessary using the map you made earlier. . The program animates through the LED numbers in the ""pos[ ]"" array to create the illusion of falling snow. Change these numbers if needed to match your setup, (the animation LEDs are the ones below the crease on your LED holder.) Arrange the numbers in the order you want them to fire. The lights project through pinholes to make the ""snow,"" so lighting from the bottom to top will make snow appear to fall down, left to right will make snow appear to blow from right to left.. Next set how many pixels will animate. Then set the pixel that is at the end of the strand shining on the scene (on a 60 pixel strip, this is pixel #59.). Choose a pixel for the lights that will shine up into the rear house. This pixel should be between the two light dividers.. Finally, set the number of the pixel that will be shining up into the front houses to be the ""fire pixel."" This pixel should be just in front of the smaller light divider. . When the code above is changed as needed, you can compile and upload to your Arduino 101. Once the code is successfully uploaded, disconnect your USB cable and turn the power switch on the battery pack to ""on."" You should see the shadowPixel turn on, and the animation pixels will light in sequence. The house and fire pixels will be off until you control them with Blynk.. Step 3. Loading your Blynk app:. Open the Blynk app on your phone and press the ""scan"" button near the upper right. Scan this QR code and the controller interface should automatically load and you'll be all set.. When loaded, the interface should look like this:. If you prefer to build your Blynk interface manually instead of scanning the code above, start with with a BLE widget and 3 sliders set to output 0-100 to VO, V1 and V2. . Step 4. Connect over BLE to your Arduino 101. Tap the BLE widget and if your Arduino 101 is powered on, you should see ""ShadowTheater."" Connect, then hit the ""play"" arrow icon in the upper right to control your project. You may need to reconnect after your phone goes to sleep.. OK all done with the hard stuff, now on to crafting! You can turn everything off until the final reveal.. Step 1. Find your four printed card-stock sheets. Using a hobby knife and fresh blades, cut out the background silhouette. Change the blade frequently! Cutting with a dull blade is super frustrating. I changed the blade 3 times cutting out this silhouette. . Step 2. Cut out the house pieces and attach the backs with hot glue. The printed sides should face back, so you can't see any ink from the front. Scroll through the photos below.. . Step 3. Add the houses to the stage. You can use hot glue or tape. Try to close all gaps so the light goes into the houses but doesn't spill around the sides.. Step 4. Now fold the sides of the silhouette sheet and attach the bottom to the back edge of the stage with hot glue. (face the printed side away from the viewer.). Step 5. Cut out a snow scene to project on the wall behind the shadow theater. You can use pins or toothpicks, or cut out intricate shapes. Once the sheet is done, hot glue it to the curved edges to create a projection surface.. Step 6. Attach the left side and front sheets with hot glue. . Loosely attach the right side sheet with tape, so you can still get at the inside to turn the power on and off at the battery case.. All done! Find a dark area with a wall nearby to try it out! When you first turn the power on, the Shadow Theater should cast a scene shadow and falling snow. With the Blynk app, you can control the main light, and the lights in the buildings. .",1
"This project can add two 3-digit binary numbers to turn into a 4-digit binary number. Math homework solved!. Read up about this project on . This project can add two 3-digit binary numbers to turn into a 4-digit binary number. Math homework solved!. The first thing that came in to mind when I started learning about electronics is how do computers work? So I did some research and found out that computers do really simple things, just very, very fast. One of them is adding two numbers together, so I decided that I would make a calculator with an Arduino Uno.. The finished product worked very well, capable of adding two numbers nearly instantly.. If wired and coded correctly, this calculator should be able to add two numbers both up to 7 and produce a sum up to 14. Math homework solved!.",1
"The objective is to find an easy way to implement RS485 on an Arduino Uno, then to adapt it to an ESP8266.. Read up about this project on . The objective is to find an easy way to implement RS485 on an Arduino Uno, then to adapt it to an ESP8266.. The anemometer will be a part of a bench of measures that will be added to the wind turbine MPPT regulator. This bench of measures will work with a ESP8266, for its Wi-Fi availability.. For the moment, the objective is to find an easy way to implement RS485 on an Arduino Uno, then to adapt it to an ESP8266, the Wemos Lolin D1 mini for instance.. The code result seems very simple and cool, but I spent many and many hours to find a way to get something from this wind sensor.. So I think it will interest everyone that have to implement RS485..",1
"The Sump Level Monitor will determine sump levels, display them locally and send a 0-5vdc signal, relays output or I2c output.. Read up about this project on . The Sump Level Monitor will determine sump levels, display them locally and send a 0-5vdc signal, relays output or I2c output.. The sump level monitor was built to work with an Ecobee RSM-01 input board I have in my daughter's home or my Home Monitor project.  I added a relay to allow it to stand alone.  I wanted something I felt would be more reliable and easier to install than an ultrasonic sensor.  To this end, I started looking into pressure sensors and finally came across Freescale MPXV5010DP.  It has a 0-5vdc output for 0-10kPa, which would be about 1020mm of water head.. Since I wanted local indication, I chose an OLED module to use in the design.  Cheap, bright and this one had a two color screen.  To provide interface, I added a relay for a dry contact output.  I added a DAC (digital to analog converter) for a 0-5vdc output with more power than the MPXV5010DP sensor, this will also protect the sensor from possible wiring damage.  Since I am using I2C communication, all is need is software changes to supply data to another Arduino.. I designed and had built a custom board for ease of connections.  It provides enough flexibility for different configurations.. The sensor is connected by tygon tubing to a copper pipe that gets routed down into the sump.  This allows for some discretion as to where to mount the monitor and keeps it away from the water itself...",1
"In this project we show how we made a single-lead ECG monitor for heart-rate variability using the MAX30003 and an Arduino Uno. . Read up about this project on . In this project we show how we made a single-lead ECG monitor for heart-rate variability using the MAX30003 and an Arduino Uno. . Have you felt it when your heart ""skips a beat"" OR a ""flutter"" in your heart? If you're wondering what it was, its called an ""arrhythmia"". Not to worry, general heart-rate variability (HRV) is normal and dependent on emotional arousal, although some types of arrhythmias can indicate cardiac anomalies. . What we want to present in this article is a unique and easy way to measure ECG as well as R-R intervals with surprisingly high accuracy.. ECG/EKG (Electro-cardiogram) is an electrical signal taken from electrodes connected to the body and its an electrical signal. Compared to optical means of heart rate measurement, the ECG still provides the most accurate heart rhythm.. A single ECG waveform is made up of the P,Q,R,S,T points as shown in the picture below. Each of these is of significance in a detailed cardiac study and is not possible to explain everything here. Of particular interest to us relevant to this project is what is called the ""QRS"" complex. Part of this QRS complex is the ""R"" apex point which corresponds to the depolarization of the right and left ventricles of the heart.. What we are now interested in is the distance between two R peaks in a continuously displayed or recorded ECG measurement. The time it takes for the heart to produce two consecutive R peaks is known as the R-R interval and which is of significance for HRV studies.. The R-R interval is generally used to detect several different kinds of arrhythmias (which are quite a few) and not all of them will not be discussed here.. Besides the clinical significance of heart-rate variability, there is a physiological significance too. Reduced HRV is also an indicator of parasympathetic and sympathetic nervous system activity, which includes emotional arousal and other functions of the autonomous nervous system. This means that R-R intervals can be indirect ""markers"" for phycological activity.. There are several ECG AFE chips available including those from TI and Analog Devices. ProtoCentral also carries the popular ADS1292R-chip based breakout board. But the new features of the MAX30003 have us all excited:. We used the ProtoCentral Single-lead ECG monitor breakout board based on the MAX30003 single-channel AFE chip from Maxim Integrated to acquire ECG using two electrodes connected to the chest. This board is connected to an Arduino Uno using a standard SPI interface. Connections are made as given in the following table:. Unlike the traditional 3-electrode system which requires a driven right leg (DRL) electrode for common mode rejection, the MAX30003 is very unique in the fact that it works off of 2 electrodes only, making it easier to use.. The Arduino sketch for use with this hookup reads the real-time ECG and R-to-R interval data from the MAX30003 over SPI, puts it in a data packet and sends it over the Uno's USB-UART interface. This Arduino sketch is available in the links at the end of this article.. We also made a GUI with processing that takes this data from the serial port and plots the data in real-time with also the R-to-R interval time (in milliseconds) and the instantaneous heart rate *based on the current R-R value. . The R-to-R interval displayed here is the time between the last detected R peak and the previously detected R peak to get an instantaneous value of the R-R interval as well as heart rate. The instantaneous heart rate would be different from the regular heart-rate(if you would use a medical monitor) in the fact that generally heart-rate is calculated from a window of 5-10 secs of stored ECG data, rather that taking the immediate time.. Check out our video for the device in action. . We had a good experience interfacing with this board and assured that it can save the user a lot of time otherwise writing robust R-R detection algorithms. We have done testing to show that it is quite robust, although more testing has to be done to test the device for robustness. . We would like to see what can be made with this board, including internet-connected arrhythmia monitoring patches and even some kind of emotion monitor that uses the parasympathetic nervous system's correlation with R-R to detect change in emotions. We will soon post another Hackster article about the performance of this device in the presence of motion artifacts. Please leave your ides in the comments below. .",1
"Wearable for monitoring the health condition of patients who have suffered or are in risk of having a cardiac arrest.. Read up about this project on . Wearable for monitoring the health condition of patients who have suffered or are in risk of having a cardiac arrest.. PHA will help the city of Las Vegas to meet its Community Risk Reduction goal and increase survival from sudden cardiac arrest. . Each year, approximately 300,000 people in the United States experience an out-of-hospital cardiac arrest (OHCA). An OHCA is defined as cessation of cardiac mechanical activity that occurs outside of the hospital setting and is confirmed by the absence of signs of circulation. . Whereas an OHCA can occur from non-cardiac causes, the majority (70%--85%) of such events have a cardiac cause. Cardiac Arrest Registry to Enhance Survival (CARES) data confirm that patients who receive CPR from bystanders have a greater chance of surviving OHCA than those who do not. . The mean age at cardiac arrest is 64.0 years. On average:. Although 36.7% of OHCA events were witnessed by a bystander, only 43.8% of these arrests involved persons who received bystander CPR, and only 3.7% of those persons were treated with an AED before the arrival of 911. . Factors positively associated with short-term survival after OHCA are: . More than 65% unwitnessed arrest occur at home and probably without any person close by to help (bystander witness). . This personal assistant could stay close to potential cardiac arrest patients and provide guidance and/or execute the critical actions to improve chances of survival (chain of survival):. PHA is a wearable that can detect when people faint or fall (potentially due to a cardiac problem), record messages, and automatically call for 9-1-1 services providing the address, and send alerts to neighbors previously trained in CPR technique and or they can be guided through it with Alexa's assistance. . Alexa can also be activated using voice commands such as “Alexa, I need help, please call 911,” and a voice with a pre-recorded message will be made to both medical services and emergency contacts (neighbors and relatives).. PHA is a wearable based in Curie Intel processor that collaborates with the Amazon Echo Alexa to monitor people´s health.. Using a 6-axis accelerometer, PHA can detect when a person faints or falls, and automatically sends an alarm request to medical services and previously registered emergency contacts. The person can also request help using an Alexa skill which is activated with the command ""Alexa, help. Call emergency."". In case that the person is not injured when they fall, the emergency call could be cancelled within the first minute, using the command ""Alexa, I am OK."". Slideshow Presentation via Google Drive .",1
"This project is a platform for drinking water monitoring and analytics, consists of IoT device, cloud, and mobile and web app.. Read up about this project on . This project is a platform for drinking water monitoring and analytics, consists of IoT device, cloud, and mobile and web app.. This project focuses on one of the most vital nutrient for our body, drinking water. In Indonesia, the term ""gallon"" refers to an infrastructure for drinking water: water dispenser, and replaceable water bottle, as apparently the water bottle measurement is in gallon unit.. Detail background and thoughts behind this project are described in my project idea here, that I use for idea submission to World Largest Arduino Maker Challenge. The key objective of the project is building solution around the new Arduino MKR1000.. The project is a simplified version of my company’s real product called HomeX - Smart Gallon. Please note that the product itself is copyrighted.. We decide to share the project's source code and design, as an effort to share to the community, and it's intended to showcase:. Before telling much about what it's all about, let's take a look this video:. How It Looks Like. IoT Device. The device prototype case is made from clear acrylic for now to show the internals. It is bigger than it should be, as many components, especially MKR1000, are still put on board through female header.. Web-based Dashboard. For monitoring and controlling devices from web browser.. Live website: http://home-x.cloudapp.net:9000  . Test account:. *Please note that the device's dashboard may not show any data if the actual device is not turned on.. Windows 10 UWP App. An app installable on Windows 10 tablet, desktop, and phone, used to manage Gallon devices, monitor water level and other data, and also set actions to perform upon triggered low water level. . For signing-in to the app, you can use the same test account as dashboard.. System Architecture. Such a simple use case doesn't mean it is simple under the hood. . IoT Device. Key components:. Capacitive Sensor. I want to highlight the capacitive sensor. It's used to measure water level inside the bottle by measuring capacitance value at the sensor electrode upon water existence. For measuring capacitance, we leverage MPR121 module, that supports up to 12 electrodes. By using this kind of sensor, it means that the sensor doesn't have to be physically in touch with water like the one with floating mechanism, or tube-based.. Software. Developing software for the IoT device means developing firmware for Arduino MKR1000. It's developed using Arduino framework for specific platform target: ""hackster.io - MKR1000 build"". . All source code is published on GitHub at this link. For coding it, I don't use official Arduino IDE, instead I use Arduino Eclipse IDE. To properly open and build the code project, make sure to download and install the Arduino Eclipse IDE V3.. Used 3rd parties libraries:. Azure Services. Azure is the heart of the platform. Beside for ingestion device-to-cloud telemetry data, it's also used for sending cloud-to-device messages (or commands), and later for further analysis (hot or cold path) of ingested data stream. Following Azure services are used:. a. Azure IoT Hub. It's crucial component that's front-facing of IoT devices, as it's used for ingesting data stream from IoT devices and sending command to them.. Communications between Azure IoT Hub and IoT devices are done entirely with native MQTT protocol over secure communication based on TLS/SSL. At the time of developing this project, Azure IoT Hub already supported MQTT v3.1.1. More on MQTT support in Azure Iot Hub is here.. Azure IoT Hub publishes Event Hub compatible endpoint that's later used by Azure Stream Analytics for further analysis. The endpoint is also used by Node.js-based backend for telemetry data storage and relay to client apps (UWP and web app) through web socket.. b. Azure Stream Analytics Job. In this project, Azure Stream Analytics is used to process data stream received by Azure IoT Hub in realtime. One of processing that's currently performed is for knowing the rate of water level changes.. Fortunately, Azure Stream Analytics Job already supported input directly from IoT Hub. As for output, currently Azure Table Storage is used for now, but you can use another, Power BI for example. . As for analysis query, for now, I use this query:. It seems that the query still can be improved. . For reference, here's the payload sample ingested by IoT Hub:. Applying that query and using that input data sample, we can get the output something like this:. From that output, now we know how fast the water level change from one percentage to another. Further analysis will reveal how soon the water in the bottle will be fully empty.. c. Azure Storage Account. For current project, Azure Storage Account, especially table storage, is used as the output of Azure Stream Analytics Job.. d. Azure Virtual Machine. Virtual Machine is used to host:. Initially it's considered to deploy those on Azure Websites. But for simplicity and reducing cost, we use VM for now.. Please refer to attached project repositories:. And read the README file inside them to properly deploy the software.. Web-based Dashboard App. We leverage Freeboard for creating the dashboard. It's open source project that provides ready-to-use and customizable framework for creating dashboards.. As Freeboard only provides HTML-based frontend framework, we still need to create the backend based on Node.js for:. Some key Node.js modules used:. One thing to note that the data displayed on dashboard doesn't directly coming from Azure IoT Hub. Although Freeboard supports data source from MQTT broker and Azure IoT Hub does support MQTT, but that requires us to set the MQTT password which is device's SAS token on dashboard itself! So instead, data from IoT Hub relayed to dashboard via web socket by Gallon Watcher backend, and that's why data source on Freeboard dashboard is socket.io.. Windows 10 UWP App. As its premise, Universal Windows Platform allows to develop app targeted for Windows 10 tablet, desktop, and phone based on one codebase. Apparently, we can achieve that by creating this Visual Studio project.. Similar to web-based dashboard, UWP app doesn't receive data directly from Azure IoT Hub, but instead from Gallon Watcher backend via web socket.. Used libraries that you can install using NuGet:. To properly replicate the system in your own environment, especially from software-side, please refer to README file inside each repositories.. As for deploying used Azure services, please follow deployment guideline for each services. No special consideration needed. Some needed parameters:. Initial state of IoT device, after the first time MKR1000 is flashed, is not connected to internet. We can setup the device's WiFi connection by using UWP app provided. To sign-in to UWP app and Web-based dashboard, use the provided test account.. Few areas to improve:. This project has successfully implemented water level monitoring solution, that leverages Arduino MKR1000, Microsoft Azure services, Microsoft Universal Windows Platform, and Node.js. There are some areas of improvement as noted above.. This project also shows the proper development technique and toolset for developing Arduino software, for the perspective of software developer. My 19 years coding experience really plays much here :). That's it. Enjoy..",1
"Real-time visibility and control of water, process farming, weather & wells - from anywhere.. Read up about this project on . Real-time visibility and control of water, process farming, weather & wells - from anywhere.. . . Sensor Messages. Message received from client. Info/Sensor/state?hum=80.30&temp=23.40&soil_humidity=25&water_level=19.74&total_mili_litres=0.26&ferti_level=18.73&total_ferti=1.27&watering_status=0&ferti_status=0. {""MessageTime"":""20190611T17:55:32.1632024+00:00"",. ""Temperature"":23.4, ""Humidity"":80.3, ""WaterLevel"":19.74, ""SoilHumidity"":25, ""TotalMiliLitres"":0.26, ""FertiLevel"":18.73, ""TotalFerti"":1.27, ""FertiStatus"":0, ""RelayStatus"":0,. ""MessageType"":1, ""ControllerType"":1, ""Action"":""state"", ""Args"":[{""Key"":""hum"", ""Value"":""80.30""}, {""Key"":""temp"", ""Value"":""23.40""}, {""Key"":""soil_humidity"", ""Value"":""25""}, {""Key"":""water_level"", ""Value"":""19.74""}, {""Key"":""total_mili_litres"", ""Value"":""0.26""}, {""Key"":""ferti_level"", ""Value"":""18.73""}, {""Key"":""total_ferti"", ""Value"":""1.27""}, {""Key"":""watering_status"", ""Value"":""0""}, {""Key"":""ferti_status"", ""Value"":""0""}]} . Client Messages. Command/watering?state=true\n. Command/watering?state=false\n. Command/watering?state=true&amount=3\n. Command/fertilization?state=true\n. Command/fertilization?state=false\n. Command/fertilization?state=true&amount=4\n. Command/autoFarmer?state=true&min='+minHumidity+'&max='+maxHumidity+'\n. . . . .",1
"This tutorial shows how to control an array of 8x8 LED matrices using an Arduino Uno, to create the face of a robot.. Read up about this project on . This tutorial shows how to control an array of 8x8 LED matrices using an Arduino Uno, to create the face of a robot.. . This project shows how to control an array of 8x8 LED matrices using an Arduino Uno. This guide might be used to create a simple (and relatively cheap display) for your own projects. This way you might display letters, numbers or custom animations.. A 5 matrix array used in one of our robot projects (""Robô da Alegria"") is used as an example to illustrate this technology. You might be interested in learning more about this project in the following links:. . Notice that you'll need two types of jumpers: female-to-female for the connection between the matrices and a male-to-female for the connection of the first matrix to the Arduino.. The number of components may vary according to the structure you have in mind.. Connect all the components according to the schematic. You'll need some jumper wires to connect the first matrix to the Arduino, and each matrix to the next one on the array.. Arduino Pinout:. You might also want to arrange each display in a given position. For that you might use the acrylic sheet, some screws and nuts (four for each display) and place each component in position. No tool is needed to assemble the circuit, but you will need a screwdriver if you wish attach the displays to a surface. In our example, five displays were placed in a face pattern (two eyes and a mouth). Plug the USB cable to the Arduino Uno board and proceed to the next step.. With the latest Arduino IDE version installed, add the LedControl.h library, which is used to control the LEDs. Download, compile and upload Arduino the code, which is divided in 4 parts:. setIntensity was used to limit LEDs brightness. It was set as 1 (in a scale from 0 to 15) in order to reduce the power consumption of the modules to a level acceptable by the USB port.. After the upload keep the Arduino connected to the USB port of your computer and open the Serial Monitor. The code is programmed to display a set of emoticons on the LED face, depending on the message received by the serial port. The following commands were configured:. For the eyes. For the mouth:. Type a pair of characters (on for the eyes and other for the mouth) in the serial monitor, press enter and the displays will be updated according to your command.. You might change the drawings (add new faces for instance) or change the control method (including a Bluetooth or Wi-Fi interface), according to your needs.. Have fun!.",1
"Let us predict the changes around us with Arduino. Read up about this project on . Let us predict the changes around us with Arduino. Recently my college had a small science exhibition .So i was requested by my teacher to present a project in the college to teach young students about electronics so basically i had two days to make some thing.. As the climatic conditions over here are varies a lot and recently the temperature is somewhere around 34-40 degree Celsius. So i decided to make a weather station.. So what does a weather station do ?. A weather station is a device that collects data related to the weather and environment using many different sensors. Sensors like . The aim is to make a portable weather station. Features it should have. So here is the thing we will need for the project. I actually started the project on My UNO but then i decide to switch to compact solution.. I had the nano with me at that moment so had to go with it , would love to use micro,because it is the smallest.. Anyways leaving those things,talking about budget and parts here is the list .. For tool end you will need. And Also some time. Measuring the temperature can be made using different sensor.. The popular ones are DHT22,DHT11,SHT1x. So basically, lets understand how this sensor are different from each other and why i have used DHT22 in the first place.. AM2302 output calibrated digital signal. It applys exclusive digital-signal-collecting-technique and humidity sensing technology, assuring its reliability and stability. Its sensing elements is connected with 8-bit single-chip computer.. Every sensor of this model is temperature compensated and calibrated in accurate calibration chamber and the calibration-coefficient is saved in type of programme in OTP memory, when the sensor is detecting, it will cite coefficientfrommemory. Smallsize&lowconsumption&longtransmissiondistance(100m)enableAM2302tobesuitedinallkindsof harshapplicationoccasions.Single-rowpackagedwithfourpins,makingtheconnectionveryconvenient.. Lets see some pros and cons of the three.. DHT11. Pros：No soldering needed. Cheapest among three. Get stable output quickly. Transmission over 20m. Strong interference. . Cons：Library! No resolution option. Errors: Temp+/-2°C; Humid+/-5%RH. Inadequate measuring range(0-50°C). Applications：Gardening, Agriculture. . DHT22. Pros：No soldering needed. Adding a few bucks to DHT11 and get an upgrade. Smooth curve. Smallest error. Large range. Transmission over 20m. Strong interference.. Cons：Can be more sensitive. Slow temperature tracking. Library needed. Applications：Environmental Monitoring. SHT1x. Pros：No soldering. Smooth curve. Small error. Quick response. Low power consumption. Auto sleep. Extraordinary long term stability and consistency. . Cons：Two digital interfaces. Humidity error. Same measuring range with DHT11. Library needed. Applications：Heavy duties and longtime installations. Following are three relatively cheap choices.. Connection. Vcc to 5V or 3.3V. Gnd to Gnd. Data to pin 2 of arduino. The bmp180 a barometric pressure sensor with an I2C (“Wire”) interface.. Barometric pressure sensors measure the absolute pressure of the air around them. This pressure varies with both the weather and altitude.. this bmp180 module came with a 3.3 v regulator 662k which i blew up to some stupidity so i attached a wire to by pass the whole vcc directly to the chip.. Note : On Doing so i restrict myself from using only 3.3 v ,using voltages above it will ruin the device.. Other model may not have the 662k voltage regulator. so check thoroughly .. Ok coming back lets connect the sensor to the arduino .. The sensor connects to the i2c bus of the arduino which of nano and Uno are . SDA==>A4. SCL==>A5. VCC==>3.3V. GND ==> GND. Lets talk about pressure a little and how does pressure measure altitude and temperature.. The atmospheric pressure at any position is not constant.The complex interaction between the earth’s spin, axis tilt, and many other factors result in moving areas of higher and lower pressure, which in turn cause the variations in weather we see every day. By watching for changes in pressure, you can predict short-term changes in the weather.. For example, dropping pressure usually means wet weather or a storm is approaching (a low-pressure system is moving in). Rising pressure usually means that clear weather is approaching (a high-pressure system is moving through).. Atmospheric pressure also varies with altitude. The absolute pressure in Mt .everest base camp (5,400 )is lower than Delhi(216). Since Abosolute pressure is difficult to directly compare pressure measurements from one location to another.we use the relative pressure .that is sea level pressure.. Measuring altitude . The average pressure of the atmosphere at sea level is 1013.25 hPa (or mbar). This drops off to zero as you climb towards the vacuum of space. Because the curve of this drop-off is well understood, you can compute the altitude difference between two pressure measurements (p and p0) by using this equation:. alti=44330*[1-(p/p0)^(1/5.255)]. If you use sea level pressure (1013.25 hPa) as the baseline pressure (p0), the output of the equation will be your current altitude above sea level.. Precautions. Give it air: Remember that the BMP180 needs access to ambient air to measure its pressure, so don’t put it in a sealed case. Providing a small vent hole should be adequate.But not too much air: On the other hand, exposure to fast-moving air or wind can cause momentary pressure variations that will affect your readings. Shield the device from strong air currents.. Keep it cool: Because an accurate temperature reading is needed to measure the pressure, try not to expose the device to rapid temperature changes, and keep it away from nearby hot parts and other heat sources. . Keep it dry: The BMP180 is sensitive to moisture. Don’t submerge it or allow it to contact liquid water. . Don’t blind it: Surprisingly, the silicon within the BMP180 is sensitive to light, which can enter the device through the hole on the top of the chip. For maximum accuracy, shield the chip from ambient light.. So we start by making the header for the nano. we actually cut the female headers and then file them to make them look as if they were originally that size.we then solder it. then we made the headers for DHT22 sensor. . it needed a 10k resistance to be connected from the data to ground. we then soldered everything.Then it was time for the bmp180 we added the header in a similar manner.We used 3.3 V as the power .We connected all the i2c bus. . We added lastly the display we are using i2c lcd so w used the same bus we used for the bmp180 module.. (There is a fourth slot in which i wanted to add rtc module later to also incoperate clock in the machine ). Wait ..................... Download the libraries. bmp180 . https://github.com/sparkfun/BMP180_Breakout_Arduin.... Dht22 library. https://github.com/adafruit/DHT-sensor-library. To install a library in arduino check this link. https://www.arduino.cc/en/Guide/Libraries. I have used arduino 1.6.5 so the code will work for this version for sure , also may be for higher if any case it does n't work do use 1.6.5 as the base version.. .",1
"A cheap version of an Arduboy clone with which you can play a number of original Arduboy games.. Read up about this project on . A cheap version of an Arduboy clone with which you can play a number of original Arduboy games.. . Arduboy is a miniature game system the size of a credit card. It comes installed with a classic 8-bit game and can be reprogrammed from a library of open source games available online. Arduboy is open source so you can learn to code and create your own games. The original version is based on ATmega32U4 microcontroller and 128x64 Pixels serial OLED display.. The console whose construction is represented below is made up of Arduino Nano and the I2C version of the OLED display which can be much easier to find at a lower price. You can download the necessary libraries and code at:. https://github.com/harbaum/Arduboy2. If you own a 3D printer, you can also download .STL files of a possible box option in which the console is installed. A detailed installation guide is available on the same site. It is powered by an Arduino Nano with one lithium-ion battery of 3.7v and it works quite well.. I tested many games on this console, all of which function great:. - ArduBreakout. - Pinball. - Shadow-Runner. - Snake. - VIRUS-LQP-79. - Nineteen43. and many more.... The schematic is shown below. . As an example, I am presenting the code to ArduBreakout game, but you can download any other game on the Arduboy's site compatible with this version of console..",1
"MoveThisWay is an autonomous robot that transports heavy payloads on programmable paths with obstacle detection capability.. Read up about this project on . MoveThisWay is an autonomous robot that transports heavy payloads on programmable paths with obstacle detection capability.. Purdue ECE Senior Design Fall 2019. MoveThisWay is an autonomous robot that can carry heavy payloads. Its main use case is in a varying office or industrial environment where there are clear paths for this robot to take. The robot is remotely programmed by the user and stores paths into its memory, making its routes autonomous and repeatable. MoveThisWay features sensors to avoid collisions and keep itself and its environment safe. It also has indicators to display the robot’s current movements, errors, and the battery level.. The goal of our team project was to create an affordable solution for businesses where robotic assistance is desired but out of reach. All parts used in the project are both easily attainable and relatively affordable. . . . .",1
"If you plan on a vacation, here is a great project to track the temperature and soil moisture of your Plant using dweet.io and AWS IoT. . Read up about this project on . If you plan on a vacation, here is a great project to track the temperature and soil moisture of your Plant using dweet.io and AWS IoT. . Picture this you are going on a vacation for a week or so and are worried about your house plant at home.Here is a great project to under take a week before you head out for your vacation.. Build yourself a plant monitoring and notification system with the following feature. In addition, I have designed a 3D printed enclosure, to house the Arduino Yun , grove shield and sensors.. If you are interested to check out how my plant is doing here is the link . http://dweet.io/follow/PlantMonitorTorontoON. . . Here are the steps you will need to perform to complete the build . #1 Build the circuit  using the Grove connector shield as shown in the schematic section of the project, basically connect the . #2 3D print the STL files , attached in the custom part and enclosure section , here you have 3 STL files to print , set your slicing software to 0.3 mm layer height and a fill density of at-least 25% or higher. 3D printing should take about 2 hours , so download the STL files and fir up your 3D printer while you complete the other steps below. .  #3 Determining the Soil Moisture Value. Upload the code attached below(soil moisture value) to your Arduino Yun and determine the tooDryValue in the code below.Basically if the value of the soil moisture falls below tooDryValue you need to water the plant.(and this value is the value that you will use in AWS-SNS condition to send an email). Here is the video of showing the method I used to determine the toodryvalue  . #4 Upload Arduino code to Yun to  post data to dweet.io. Now once you have decide on the toodryvalue , upload the ArduinoYunDweetIO.ino file to the Yun, And as part of the code also replace ""PlantMonitorTorontoON"" to something more meaning full for you. . Here is video testing the Upload of sensor data to dweet.io. . #5 Setting up AWS CLI on your computer (here I am using a Mac). Now to log data using AWS IoT in DyanamoDB , you will have to create an account at https://aws.amazon.com/free, here you will also have to provide your credit card details, but for the tutorial below you should not incur any cost (again this depends on the region of AWS setup)  . Once done create a folder ""AWS"" on your mac and follow the link below to download and install AWS CLI. http://docs.aws.amazon.com/iot/latest/developerguide/installing-aws-cli.html . I am using a mac , here are the instructions I followed. Note: at the terminal you need to be in the AWS folder you just created. #6 Creating a thing using the CLI which should show in the AWS IoT  console. Now we will create a thing in AWS IoT using the following command . For more info refer to the link. http://docs.aws.amazon.com/iot/latest/developerguide/create-thing.html . . #7 Creating Certs . To create and activate the certificates that you will need , give the following command  . this command will create the certificates(3 pem files) for you in the AWS folder as shown in the screen shot below. . . #8 Create and Attach an AWS IoT policy to your Certificates. Start of by creating a json file in the AWS folder, using you favorite text editor(i prefer sublime text 2) - name the file policy.json. Then copy paste the following command in your text editor. . #9 Attach policy to certificate followed by attaching certificate to device. Give the commands below one after another. Here an easy way to get your certificate arn if you have not noted it down is to go to the AWS IoT console click on you certificate and go to details on the right hand side of your screen. From here you can copy paste the arn to the teminal. . . For more info refer to the documentation on . http://docs.aws.amazon.com/iot/latest/developerguide/secure-communication.html. . . # 10 Verifying/testing your setup on your computer and test it using MQTT.fx. Now to claim that the setup is done on your computer , download and install MQTT.fx from link below to test if the setup is working and we are able to publish and suscribe for data via AWS IoT. http://mqttfx.jfx4ee.org/index.php/download. For more setup info and to download the root cert use the link below. http://docs.aws.amazon.com/iot/latest/developerguide/verify-pub-sub.html. - here in MQTT.fx you will have to setup your connection profile. - and link your certs which you downloaded as part of the steps above. Here is a quick video that show how you can test you setup on you computer which in my case is a MAC using MQTT.fx tool.. . . Once you have complete and tested that your setup is fine follow the steps below to upload the certificated to the Arduino Yun. #11 Setting up the Arduino Yun to communicate with AWS IoT cloud. Download  the latest version of the Arduino Yun SDK from github and unzip into your Arduino ""Libraries"" folder . https://github.com/aws/aws-iot-device-sdk-arduino-yun. If you are using the Arduino Yun for the first time follow the setup instructions at. https://www.arduino.cc/en/Guide/ArduinoYun . Basically using the link you will learn how to set up the Arduino Yun to connect to home WiFi network.. Then load the Process Example sketch Arduino IDE to your YUN (File->Examples->Bridge -> Process), this will confirm that the Yun has access to the internet . Put your rootCA file, private key and certificate into certs folder as shown in the screen shot below. . Next modify codebase_upload.sh and environment_setup.sh and replace [your_boards_IP] with your board’s IP address and [your_boards_IP] with your password. In the your terminal run the following commands to give permission to the .sh files ,this will take about 5-10 mins ,which moves the certs and installs distribute, python-openssl, pip, paho-mqtt on the Yun. These are the packages you need to communicate with the AWS cloud from your Yun(aka called the PlantSystem thing in our case). . . . For installation on Linux/Windows follow the link at . https://github.com/aws/aws-iot-device-sdk-arduino-yun#installation. . Now as part of the next couple using AWS CLI we are going create a table in DynamoDB to post sensor data. #12 Creating an IAM role and granting permisions. Basically to enter data into the DynamoDB sensor table which we are going to create as part of the next step , we need to create a IoT rule that will act upon the MQTT message received by AWS, for this we need to create a role and grant it necessary permisions. Create a json file rolePolicy.json. and to create the role run the following command in the terminal. Create another json file policy.json. . then call create-policy and specify the IAM policy document. And finally attach the policy to the role using - modify the policy-ARN to the ARN that you received as part of the previous step. . http://docs.aws.amazon.com/iot/latest/developerguide/config-and-test-rules.html. #13 Setting up table in DynamoDB in AWS console. As part of this step we are going to create a DynamoDB in the AWS console. Table Name : plantSensor. Partition key : key. Sort key : timestamp. and also set your Read capacity units and Write capacity to 1.. #14 Creating a rule to insert data into PlantSensor Table. Create a json file - plantdatarule.json (here modify the roleArn value in section below, go to IAM->Roles->iot-action-role to get the arn). . then run the following command on your terminal. Now if you go to the AWS IoT console you should see a rule created called ""PlantDataToDynamoDB""  as shown in the screen shot below('' ignore the email send rule this is coming as part of the steps below.). using MQTT.FX run a quick test to see if records are getting created in the table created.. . #15 Upload the Arduino sketch to publish data to AWS IoT from the Yun. Here first start of by downloading the ArduinoJSON  library from github at. https://github.com/bblanchon/ArduinoJson. Now download the YunAWSIoTDynamoDB,ino and aws_iot_config.h files from the  code section below and upload it to the Yun.. Open your Serial monitor and you should see the temperature, Light Value and soil moisture value posted to the DynamoDB.. If you have have been AWS you can do all kinds of awesome stuff by setting up Lambda function and posting data kinesis .... Note: If you plan on making this a permanent setup, don't forget to increase the delay at the end of the loop , to increase the time interval of posting to DynamoDB so that you do not incur addition cost . For more on pricing refer to https://aws.amazon.com/iot/pricing/. . #16 Setting up a AWS-IoT SNS rule to receive and email if your soil moisture value fall below a threshold. . Basically this step includes setting up a simple SNS notification base on AWS IoT rule.. Start of by assigning the following policies to the AWS role (iot-action-role) that you created in the previous step in the IAM console. -AmazonSNSRole. -AmazonSNSFullAccess. Once done in the SNS console create a Topic called sendMail and create a subscription and give your email configure on you phone to get notified when the soil moisture value is LOW.. Now head back to the AWS IoT console and using the +Create Resource button create a rule called Email Send and provide the following info. Once done you console should look like the screen shot below. Here is an sample email I recived when I removed the soil moisture sensor from a glass of water. . . . To read more about AWS-SNS. https://aws.amazon.com/sns/faqs/ . #15 Putting the 3D printed parts together and adding it to the pot.. You will need a 4x40 screw and nut to attach the black soil poker 3D printed part to the base part of the Arduino Yun. The top part just snap fits , here remember to point the top opening toward you window and poke the Soil moisture in the pot.And power the Yun with a micro usb cable plug to a wall outlet.. Please note, I am still exploring and learning about the awesome world of AWS, and awe'd by the features on the AWS console,so if you have been using AWS for quite some time, post a comment or suggestion for feature you would have liked to see/applicable to the plant monitoring project.Thanks ... .",1
"In this IoT project, an LED light can be controlled wirelessly from a simple html page. This project is for all students, doers or makers.. Read up about this project on . In this IoT project, an LED light can be controlled wirelessly from a simple html page. This project is for all students, doers or makers.. Let's get started by live demo to get you all motivated :-). . https://randomnerdtutorials.com/how-to-install-esp.... Recommend to install version 1.8.3 or higher Arduino IDE. Note: After completing above step you should be able to see ""Wemos D1 R & mini"".. Refer attached images.. Connect the 10mm LED +ve to D3 of board and LED -ve to Boards Gnd pin. You can either use 1.5v x 2 AA baterry to power the board in non debug mode/production or use type 'c' USB data cable to connect to computer/laptop USB cable to debug or re-program.. AA battery +ve and -ve source is connected to Boards 3.3v and Gnd respectively.. Compile and Upload the code.. Go to WiFi in task bar -> connect to hot spot name: esphotspot. Password is embedded in code.. Open index.html. 1. In case you want to update SSID, then need to refer to this WiFi Manager library examples how to go about as the board stores this details in EEPROM and merry change in Arduino code won't allow the board to update previously successfully connected hot spot SSID details. SO for beginners dont expect to change SSID or password to start with.. 2. When operating from external power source here 2 AA baterry might not last very long as wifi connectivity drains the battery quite fast. Better option would be use mobile power bank say 10 or 20000 MAH and connect to boards 'c' type USB.. 3. In case board is not detected there could be chances you are not running or logged in as Administrator account in OS and/or may not have USB port enabled..",1
"A lock that can be controlled from a smartphone using an app.. Read up about this project on . A lock that can be controlled from a smartphone using an app.. This smart lock is the secure, simple, and easy to manage your home’s lock. This lock needs no keys and the lock is attached inside the door and you can control it from outside the door using Bluetooth. As the lock is inside the door there is no way to break the door by a thief. An android application is required to open and close the lock and I will explain the details how you can develop an android app in the later part of the tutorial. A password is sent to the lock using Android app and if the password is matched to your preset-lock password then the lock will be open and sent a feedback to your phone like the lock is open.. All the parts of the lock are 3D printed. I would like to thanks, Thingiverse user ridercz for his nice design. He designed and published this servo based door lock in thingiverse.com. All the files except Rack_Holder.stl are taken from his design. You can download the files from below or from Thingiverse.com. . Some files have LT version. Light version required less PLA compare to normal version and has less strength. I printed LT version and working good. I used Anet A8 for printing all the parts. Photos of the printed parts are attached... Assemble all the printed parts one by one as shown in the photos. You may also follow the video instruction attached in the first step. After assembling use four screws to tightly fix all the parts. . The code for bluetooth control smart door lock is very simple. I have designed android application in such that it sent a command with the password. Actually I set two command, one is ""OPEN="" and another is ""CLOSE="" and password may contain any digit, later or symbol or combination of them as you like. In the app I used two buttons one for open the door and another for closing the door. When password is given to password box and open button is clicked than app joint the ""OPEN="" command with the password and sent it to arduino. I add '=' sign with command for that I will separate command and password by using this '=' . After receiving the string from phone arduino program separates command and password from the receive string and save them into two separate variables. Then check the password first, if password matched with saved password then open the door for ""OPEN"" command, and close the door for ""CLOSE"" command. ""="" helps to separate command and password. Complete arduino sketch is given below.. The connection between the components is very simple. First, connect Bluetooth module HC-05 to the Arduino. Note the schematic. TX pin of the Arduino board is connected to the RX pin of Bluetooth module and RX pin of the Arduino is connected to the TX pin of the Bluetooth module.. I hope you programmed your Arduino board with the sketch attached in the previous step and you already tested all the connection according to the schematic. If you completed all the steps then it is the high time to place the lock in the appropriate place of the door. First, place the lock with four screws. Then, fix the Bluetooth module at the right place of the lock and add some hot glue to tightly adjust the module with the lock. After that, place the Arduino board to the bottom side of the lock and connect all the wires according to the schematic. After placing the lock and making the connections you should power up the lock. I used a 5V, 1A wall adapter to provide the power to the circuit. . I will show you how to develop an Bluetooth android application using MIT App Inventor. I am using App Inventor because it does't required any coding and no software installation. You only need a google account. Go to http://ai2.appinventor.mit.edu/, you will ask to log in using google account.. Log in to App Inventor using gmail and follow the steps below:. You are now in the Designer, where you lay out the ""user interface"" of your app (image 6). The Designer Window is where you lay out look and feel of your app, and specify what functionalities it should have. You choose things for the user interface things like Buttons, Image, Label, Text boxes, and functionalities like Text-to-Speech, Bluetooth, Sensors, and GPS.. Now, follow the figure 7 and add a List Picker to the viewer. Rename it to ""Connect to Bluetooth Device"" (image 8). Add one Label, one Password Text Box, and two buttons shown in figure 10. Change the text properties of the components as ""Enter Password"", ""Open Door"", and ""Close Door"" respectively. Final User Interface should look like as figure 11. Now add a Bluetooth Client to the viewer. It is an invisible component and it has no UI. See Image 12.. Switch over to the Blocks Editor. It's time to tell your app what to do! Click ""Blocks"" to move over to the Blocks Editor (image 13). Think of the Designer and Blocks buttons like tabs- you use them to move back and forth between the two areas of App Inventor. The Blocks Editor is where you program the behavior of your app. There are Built-in block that handle things like math, logic, and text. Below that are the blocks that go with each of the components in your app. In order to get the blocks for a certain component to show up in the Blocks Editor, you first have to add that component to your app through the Designer.. Let us, design blocks for List Picker. List Picker is a UI element when clicked it shows a list of corresponding elements here is the paired Bluetooth device. We have to add two blocks ListPicker.BeforePicking and ListPicker.AfterPicking (image 14). Complete Blocks are shown in figure 18 & 19. . Make apk file. Our design is complete, now we need to build the apk file for our android phone. Click to build menu and select ""App(save .apk to my computer)"". Wait for a minute. An apk file will download to your default download folder. Install and use it. . In previous step I have showed you how to develop a basic bluetooth app in App Inventor. But that app is not so user friendly. It will not show you any message either your door is open or closed or bluetooth can not connected for any error. I have attached here a more advanced app for our project. . When you run you app this app check either your bluetooth radio is enable or not, if not enable a bluetooth enabling dialog will appear. Click yes to turn on your bluetooth radio. Then pair the device using pair device button. Then click to connect button, if successfully connected to any device the application shows the connected device's MAC address and name. Enter password to the password box then click the open door button, if you entered correct password door will be open and application will show you a message that your door is now open. Then enter password again if you want to close the door. If you give the wrong password, then app will show wrong password message. . Complete App Inventor source file (BTcontrol.aia) is attached herewith. If you did not like to make your own app or modify it, just download the BTcontrol.apk and install it to your android pone. . You can also download it from Google Play Store using the link: . https://play.google.com/store/apps/details?id=appinventor.ai_khairul_uapstu.BTcontrol&hl=en. For modifying the source click the ""Projects"" menu and select ""Import project (.aia) from my computer"" shown in figure 24 and browse the BTcontrol.aia file from your computer. After importing you can modify it easily.. If you want to know more about android app developing using App Inventor browse: http://appinventor.mit.edu/explore/ai2/tutorials.html. You can also try http://meta-guide.com/videography/100-best-appinventor-videos/.",1
"Take a Raspberry Pi Zero and a webcam cram it into a Coke bottle while making it continue to appear like a normal Coke bottle!. Read up about this project on . Take a Raspberry Pi Zero and a webcam cram it into a Coke bottle while making it continue to appear like a normal Coke bottle!. . For this project, the inspiration started when I came across a mini Pi Zero camera online. The obvious application for such a camera is to make a ""Spy Cam"". A spy cam is normally a camera that's disguised as something else. Then the question became: ""what should I disguise my camera as?"" I've seen cameras hidden in Coke cans before, but I thought it'd be cool to hide one behind the label of a Coke Bottle, while making it look like liquid was still in it. So in a nutshell, that's the journey of this project.. This project hinges upon being able to make a Raspberry Pi Zero W and a Raspberry Pi camera fit behind the label of a Coke Bottle. There are a lot of different Coke bottle shapes and sizes, but the US version of a 20 oz Coke bottle was the perfect size to house the Pi. The results may differ depending on your country, so be sure to do proper measurements before attempting this.. The camera I chose is a very small form factor camera intended for the Raspberry Pi Zero. It's perfect for fitting everything into a tight space.. Now it's just the standard matter of setting up the Pi. So taking a 4gb or larger micro SD card, download the Raspbian operating system and burn it to the SD card using Etcher.io. Insert the SD card into the Pi zero, and connect the camera, keyboard, mouse, monitor, and finally the power.. Once you see the Raspbian desktop, the first thing you want to do is connect to your wireless network. Then if you right-click on the wireless icon, you can select ""Wired and Wireless settings"", and give your Pi a static IP address so that you know how to connect to it later. After that, click on the menu and go to Settings > Raspberr Pi configuration. Under the ""Interfaces"" tab, make sure both Camera and SSH are enabled. Then you can save it and restart your Pi.. Now you can hop over to a different computer and connect to your Pi through an SSH client such as Putty.. What we want to do is create a script that activates the camera and serves it to a web page so that we can access it from any web browser. There are plenty of different ways to do this (Motion, Raspivid, etc), but I found a simple Python script that does everything I need it to do and doesn't require any extra software or libraries to install. The best thing about it is that the lag time is practically unnoticeable.. spi_cam.py. Save the file, and run it by typing. Then on your browser you can go to http://[your pi's IP address]:8000 to view your webcam.. Assuming that it's working, the next step is to make it executable.. Then add it to your rc.local file to make it auto-start everytime the Pi starts up.. Now every time the Pi boots up, the spy camera should auto-launch and you should be able to view it from your browser!. Since the camera is intended to be ""in"" a Coke bottle, having wires coming out of would kind of ruin the effect. The only wire that it requires at the moment is power, so what we need to do is set it up to run off of battery power.. For this task, I used a 1500maH Lithium Polymer battery, an Adafruit Lithium Polymer charger, and a simple slide switch. I connected the battery to the charger, and soldered some wires from the charger, to the switch, and then on to the back of the Pi, using the PP1 (+) and PP6 (-) connector pads on the back of the Pi.. With our Pi camera set up, working, and portable, we can now work on how we're going to work it into the Coke bottle. My idea is to cut out the middle of the bottle and replace it with a 3D printed container that the Pi is housed in. This container will have a hole for the camera, and a lid so that you can easily separate the bottle to charge the battery and switch it on and off.. What I did was measure the height of the label and the width of the middle of the bottle. Taking those measurements and subtracting 2 mm from each, I created a cylinder which I then cut the top off of and hollowed out so that it could house the Pi and it's required components.. I modeled everything in Tinkercad, which was super simple, but the end result was less than stellar. You can see that the cylinder is very jagged and not smooth. The model required subdivision, which Tinkercad currently isn't capable of doing. If I did a version 2 (or if you want to make your own), I would use Fusion 360 instead.. For this project to be successful, it has to look like the Coke bottle is still filled with liquid. To achieve this, I decided to turn the Coke into gelatin. I started by pouring a Coke Zero into a bowl and combining it with 4 small packets of gelatin mixed with water (just followed the directions on the back of the gelatin box). I opted to go with Coke Zero because it had a black label that blended in more with the camera.. Now that the bottle was empty, I washed it out and filled it with hot water and let it sit for a minute. This made it easy to peel the label with minimal tearing. Dumping out the water, I cut the bottle in half. The portion of the bottle where the label was located was smooth compared to the rest of the bottle. Of this smooth area, I cut away all of it except for 10 mm from the bottom and 10 mm from the top.. Taking the top part of the bottle, I hot glued the lid of our camera container to the bottom of it. It's important to make sure that the hot glue makes a full seal completely between the lid and the bottle to prevent in leaking from the gelatin mix. Speaking of which, I then poured some of the gelatin mix into the bottom of the bottle filling nearly to the top. Then I poured some in the top of the bottle (and lid) and set everything in the refrigerator to solidify.. Finally I inserted the camera container cylinder to the bottom part of the bottle, flipped the switch to turn the Pi on, and then put the lid on. To finish the effect of the full bottle, I took the label and punched a whole in it for the camera, and then reattached it to the bottle, surrounding the camera container! All that's left is to put it in an a place where you want to keep an eye on things. Then just pull up the web interface on a computer, tablet, or phone and watch the video feed. At first (and second) glance, it appears to just be a regular Coke bottle! . .",1
"An easy way to know if someone is at the door and take picture of that person. . Read up about this project on . An easy way to know if someone is at the door and take picture of that person. . I am using Cayenne to send me notifications every time someone is at the door and to take a picture at the same time. It will save the picture and it allows remote access through Cayenne to take a look at it. . Because in Cayenne you can add more sensors without a need to pay. Also, you can Remote Access through your phone or any PC and be able to see the picture. As well, you can turn on/off anything in the house, lock/unlock the door with a motor, and add more sensors to it such as a temperature sensor. . PIR motion sensor will turn on the light and take a picture at the same time. When the light is on, Cayenne will send you a notification saying ""Someone At Door."". Step 1: Connect the camera and make sure it’s working. Refer to the following link to setup the camera: https://projects.raspberrypi.org/en/projects/getting-started-with-picamera. Step 2: Connect the PIR motion sensor, LED and 220 ohm resistor. We will use the same code to get notifications via Cayenne. I will add steps for Cayenne below. . This is the website from where I got the code: https://diyhacking.com/raspberry-pi-gpio-control/. Step 3: Now install Cayenne for the Raspberry Pi. . First create an account with Cayenne: https://mydevices.com/cayenne/signin/. Click on Add new > Device/Widget: now add Raspberry Pi. Now copy and paste the 2 line code in Raspberry Pi Terminal:. Follow this video: . Step 4: Cayenne LED setup. Left top: Go to Add new > Device/Widget > Actuators > Light > Add Actuator . Why Channel 5: for LED GPIO3 which is Pin (5) in Raspberry Pi; look at the Raspberry Pi pinout on Google.. Step 5: Notification setup for Cayenne and phone . Go to Add new > Trigger > follow picture below: add your number . After you've setup to this point: you can go to the Raspberry Pi Terminal and run this Pirtest.py code, and when the PIR motion sensor turns on the LED, you will get a notification sent to your phone number. . Now let's take a picture at the same time you are notified:. Step 6: Camera & PIR motion sensor setup . The good thing is that you only need code for this, which I have attached in a file: “campir.py”. I added time in the code to just preview for a few seconds, adding a display to the Raspberry Pi. . For reference only: https://projects.raspberrypi.org/en/projects/parent-detector.",1
"Ever wanted to block all WiFi signals, or just want to kick someone out from your WiFi or a neighbor's WiFi? Well, this is it. . Read up about this project on . Ever wanted to block all WiFi signals, or just want to kick someone out from your WiFi or a neighbor's WiFi? Well, this is it. . . Hey friends, it's Kedar here. Have you ever wanted to block all WiFi signals, or just want to kick someone out from WiFi or a neighbor's WiFi? Well, this is it. Guys, your wait is over. Here is the $8 DIY WiFi Jammer to try for yourself. To see how effective this WiFi jammer works, I suggest you to check my video above.. This jammer is so tiny you can fit into pocket and carry it anywhere. It can be powered through your power bank or 3.7v LiPo battery. You can select which WiFi network you want to jam and attack on it. But be sure this is just for educational purposes; do not use this for the wrong purposes.. The 802.11 WiFi protocol contains a so-called deauthentication frame. It is used to disconnect clients safely from a wireless network. Because these packets are unencrypted, you just need the MAC address of the WiFi router and of the client device which you want to disconnect from the network. You don’t need to be in the network or know the password; it’s enough to be in its range.. You can perform multiple attacks on this device such as you can jam any particular WiFi network or you can do beacon spam or random beacon spam. or you can simple deauth all. Let's start making it.. You can use this ANDROID app to control this WiFi Jammer: https://rebrand.ly/wifijammer . To make this WiFi jammer, mainly you will need only one part: ESP8266.. You can buy the particular version of ESP8266 that has a NodeMCU firmware on it, and it is easy to program without any programmer. This ESP8266 has a built-in programmer. You can buy it here: . Download the latest Arduino compiler from the Arduino website here: . 1. Install Arduino and open it.. 2. Go to File > Preferences. 3. Add http://arduino.esp8266.com/stable/package_esp8266com_index.json to the Additional Boards Manager URLs. . 4. Go to Tools > Board > Boards Manager . 5. Type in 'esp8266'. 6. Select version 2.0.0 and click on Install (must be version 2.0.0).. 7. Go to File > Preferences. 8. Open the folder path under More; preferences can be edited directly in the file. Don't forget to save!. 9. Go to packages > esp8266 > hardware > esp8266 > 2.0.0 > tools > sdk > include. 10. Open user_interface.h file with your favourite text editor or just Wordpad.. 11. Scroll down and, before #endif, add following lines: . Don't forget to save! . 1. Download project files from here: https://rebrand.ly/wifijammercode (credit goes to the original creator: spacehuhn). 2. Open WiFi Jammer > esp8266_deauther > esp8266_deauther.ino
 in Arduino.. 3. Select your ESP8266 board at Tools > Board. I used NodeMCU 0.9 but you can try NodeMCU 1.0 or the generic ESP8266 module.. 4. Select your programmer at Tools > Programmer > ArduinoISP. 5. Select the right port no. at Tools > Port. If there aren't any ports that show up, you may have to reinstall the drivers.. 6. Upload! . Your WiFi Jammer is now ready!. 1. First power up your ESP8266. You can use your smartphone if you have a USB OTG cable or micro USB cable with a power bank or USB wall adapter.. 2. Now you can control your jammer using any smartphone or PC, just connect to the ESP8266 Module so you can scan for WiFi networks from your mobile or PC or MAC and connect to AndroidAP. The password is 'killwifi'. You can change this SSID and password from the code you uploaded. Once connected, you can use this Android app to control this WiFi Jammer: http://geni.us/PQhB OR you can open up your browser and go to 192.168.4.1. 3. You can now scan for networks. Note: while scanning, the ESP8266 will shut down its access point, so you may have to go to your settings and reconnect to the WiFi network manually and start different attacks.. 4. Click on the attack tab, choose deauth all
. Boom! Everyone on the WiFi should be disconnected. Now you can try other attacks as well. Happy hacking. .",1
"Poseidon is a cheap wireless water level controller for overhead tanks made using Arduino UNO and HC-12 wireless communication module. . Read up about this project on . Poseidon is a cheap wireless water level controller for overhead tanks made using Arduino UNO and HC-12 wireless communication module. . Water is such an important resource in our life that a human being cannot even live a day without water. But still we humans cause so much wastage of this precious resource. We waste more than we save! Now its time we try to save the life giving resource. . Many times it happens that we forget to turn off the water pump after the water tank gets filled. This leads to wastage of a great amount of water. Poseidon is an easy to make wireless Water Overflow control system which automatically switches off the water pump when the water in the tank reaches a certain level and switches on the water pump when the tank gets empty. Controlling of the motor is done wirelessly using the HC-12 module which has a range of about 1km. . Not only this, it also gives you call as a notification after the work is done. . .",1
"This project will show you how to make a DIY 4-wheel robot that can be controlled using a smartphone via Dabble, a mobile application.. Read up about this project on . This project will show you how to make a DIY 4-wheel robot that can be controlled using a smartphone via Dabble, a mobile application.. Another project, another out-of-the-box gifting idea! Presenting to you the Dabble controlled 4-wheel robot - an simple-and-fun to build and easy-to-control robot that can be controlled via Bluetooth using Dabble, a mobile application indigenously developed us. All you need to make your robot is an Arduino Uno board, chassis, wheels, motor shafts, and other accesories and tools. To control it, you need to install Dabble from Google Play and pair it with Bluetooth; and your robot’s ready to go places!. What better way to end the year with the same DIYing spirit that it began with, right? So what are you waiting for! . So, Let’s get started!. Firstly, we will start making the body of the 4 Wheel Robot.. Take the chassis and turn it upside down.. Onto this chassis mount 4 motor mounts using M3 Bolts and nuts.. Fix the DC Motors and fix them on the motor mounts using M2 Nuts and Bolts.. Attach wheels on each shaft of the DC Motor.. Flip the assembly, thus your body is created.. The microcontroller that we are going to use is Arduino Uno.. We are going to make all the connections on it, but we are also going to use a breadboard to make the connections. . Make the connection as shown in the below figure.. We are going to make use of the motor drivers because Arduino Uno does not provide sufficient power to run 4 Motors. Thus, we will be adding the motor driver, we will be able to give the robot needed energy.. The left two motors are connected in parallel. Similarly, the right two motors are too connected in parallel.The connections are made as follows: . We need to add a module that will make the connection between your robot and Dabble App on Smartphone.. We are taking Bluetooth HC05 Module. Connect it as shown in the connection figure.. We will need to add an extra power source to our robot. Also, to connect Arduino Uno with the battery we are going to use DC Terminal Block or DC Jack.. Upload the following code:. We can easily connect our robot to our Smartphone using Dabble.. Before working with any of the modules, you need to connect the Bluetooth that you are working on.. There are many modules available in the App for other functionalities.. . Today we will be working with the Gamepad Module.. And we will be using the Left Set of buttons:. With this, you DIYDabble-controlled 4wheel robot is ready for action!. Psst! Just so you know, Dabble can do much more than just wirelessly controlling robots. You can explore more about it here!. .",1
"Light show synchronized to music? Automatic lighting? Earthquake analysis? Just use a Curie!. Read up about this project on . Light show synchronized to music? Automatic lighting? Earthquake analysis? Just use a Curie!. https://github.com/ckuzma/arduino-101-sketches. TapFlashTest. TapBeatMatch. . SeismicReader + Python Visualization Script. VibrationLighting. A conversation with Bogdan made me realize that it'd be very easy to modify the Arduino sketch to work with standalone accelerometer + gyroscope sensors connected to nearly any Arduino device, and then use CurieGraph.py
to visualize the data. Seeing as the goal of collecting seismic readings is to prove that it's possible to massively crowd-source data without complicated or specialized equipment, I rummaged in my desk for the ""ITG-MTU"" / ""GY-521"" / ""MPU-6050"" sensor board, and wrote the following Sketch for it. CurieGraph.py might fail to start a couple of times, but usually it catches on properly by the third attempt.. ExternalGyroscope .",1
"It's a basic 4-wheel drive car which can be controlled by Android phones.. Read up about this project on . It's a basic 4-wheel drive car which can be controlled by Android phones.. Hello! In this project I will show you how to make a Bluetooth-controlled car which can be controlled through your Android smartphone! . Before starting, make sure that you have:. Optionally, you will need:. For power, you can use the existing batteries (4x 1.5V AA), or replace them with a LiOn rechargeable battery pack.. At the time I build mine LiPo batteries were not available so I used 12V lead acid batteries. It was just an explanatory Model which can be modified in many ways it's up to your creativity. So best of luck for the project.. Ι suggest you build your circuit on a (small) breadboard first. Then after checking the circuit, you can make your own PCB. I have attached my PCB layout (it can be improved very much).. To control your new Bluetooth car, download and install this Android application from the play store named Bluetooth car.. My first video! So forgive me for the little mistakes. . Please share your innovative ideas.. ""Learning and innovation go hand in hand. The arrogance of success is to think that what you did yesterday will be sufficient for tomorrow."".",1
"Announce your presence at a venue with your travel card. Read up about this project on . Announce your presence at a venue with your travel card. One issue we have frequently at the Taipei Hackerspace is that people don't know when we are open. Our  basic rule is simple: whenever a keyholder member is in the Hackerspace, anyone/everyone can come in. In practice, though people never really know if anyone's there.. They could give a call to the space, or even send an email to the mailing list, while the people I know usually end up asking me directly - hey, anyone's at the space at the moment? Since I don't always know the answer, the search was on for a better - maybe more technological or hackish solution: let's build an electronic check-in/out system that will show the current status on out website.. The main idea is that in Taipei pretty much everyone has an EasyCard, an 13.56MHz RFID card that is used for all public transport in the city and a lot more. The RC522 card-antenna module seems to be able to read the card pretty well, and all I need to get off it is the the ID number which is pretty straightforward (after digging the Arduino forums for source code).. The project in a nutshell is:. Now let me dig into the different parts in detail.. The RC522 module has 8 pins, and Arduino can use the SPI library to communicate with it. I used Arduino Mega ADK, because the SPI pins are conveniently accessible, unlike e.g. the Leonardo, for which I would have had to make some new cables or headers. The RC522(pin number)->Mega(pin number) connections are done such that:. The source code to talk to the card is from a blog, and originally from a tech shop in China, I guess (based on the big bunch of Simplified Chinese comments).. I wanted to make as simple interface for the card reader as possible. Added this pair of switches and LEDs (the D1 being green, and D2 being red). After the Arduino received a card ID from the reader, the LEDs are blinked to prompt people to press either the Check In or Check Out buttons. If they press either of them, the corresponding LED is blinked very brightly for a bit, and the card ID and check-in/out event is sent to the connected computer via serial connection. The (very basic) circuit for the check-in/out buttons and visual feedback LEDs. ""Pins"" refer to the Arduino pins used in the current version. . If no button press occurs within 10 seconds or so, the reading is discarded and the card reader goes back to listening mode.. Node.js is very useful to make quick web services, and its library support is not too bad at all, although it's not all smooth sailing: their documentation is often scarce at best. Nevertheless it was the fastest one to get things up and running, since I have used before almost all required components.. The server communicates with Arduino via the serialport library. I'm more used to Python's pyserial, though in this case it was very handy that serialport can emit read events, thus the server can just wait until there's something to read and run some functions on the incoming data. In my experience, serialport wouldn't be good for every corner case I came across in serial-land, but in this setup works beautifully.. I chose SQLite3 to store the data, using the sqlite3 library. There are a bunch of others, had to look around which one is still being developed. This particular library is not too bad, though I found myself fighting the lack of documentation and asynchronicity quite a bit. The resulting code is pretty ugly I'm sure, in some places inefficient because I didn't know how to get to the result I wanted in a less roundabout way, still it seems to work and that is what matters for a prototype.. First I made a simple REST API to query the currently checked-in people, and later added (real-time) push updates via socket.io, to make it nicer. It's brilliant that without any polling, all clients can be updated once someone signs in or out.. Since this code is running on a different computer than our main web server, had to play around with the Access-Control-Allow-Origin header, and adjusting the settings of our  router to make it accessible for the web correctly.. Tried to add a pretty-much self-contained script that the front-end can load, and it handles everything, just need an appropriate HTML span or div element to display the information.. The result is pretty good, as long as the card-reader does not crash. Originally the results were displayed in a table, but wanted to make it more human, so here's the format I ended up with:. There can also be people with no name, they just show up something like ""Right now there are three people checked in the Hackerspace: Greg, and two other people."". There's also a project called Space API for an unified specification to expose information regarding the space itself (. This check-in gadget is integrated with our the Taipei Hackerspace's Space API endpoint to, showing our opening status, so can be used with e.g. the My Hackerspaces Android app, or with the other applications listed on the Space API site.. Here's a quick demonstration video of how does it work:. So you can check out our website at https://taipeihack.org/#open for the live results, and drop in if you are in the neighbourhood if there's anyone in the 'space. . The whole source code is shared in a Github repository: the Arduino sketch, the server script, and any additional files. I'm sure there are a lot of things that could be improved about it.... Original writeup: Electronic check-in at the Taipei Hackerspace.",1
"Quickly build a wifi-enabled clock that keeps accurate time via the internet.. Read up about this project on . Quickly build a wifi-enabled clock that keeps accurate time via the internet.. I accidentally ordered the 1.2"" 7-segment display with I2C backpack this week. It's entirely too big for my original purpose, so I decided to make a quick clock out of it. Although it took me about an hour to get it to where it is now, it could easily be built in 5 minutes from start to finish if you have the components in front of you and the code at the ready.. In order to complete this project in 5 minutes, there are a few liberties taken. Just like a recipe might say ""cook for 30 minutes"", there's usually at least a few minutes of prep time not factored into that. The prep-time liberties taken in this project are that you have removed all the devices from their packaging, already have a Particle account set up, have the Particle app installed on your phone, and are familiar with the Particle CLI. Oh, and pre-heat your soldering iron. Do some stretches to get loose and ready while the soldering iron heats up.. Align the display to the backpack PCB and solder the 5 pins per the instructions at Adafruit.. (To be totally fair, it would have taken MUCH less time if I didn't have a stubborn breadboard with incredibly tight pins.). Use the Particle app on your phone to claim your Photon. Use the add device wizard and follow the on-screen instructions. If you need help, visit https://docs.particle.io/guide/getting-started/start/photon/#connect-your-photon for more detailed instructions.. Most of the tiny breadboards come with double-stick tape on the bottom. If your breadboard does, peel off the cover of the tape and stick the breadboard to the back of the display. I placed mine on the right center which allows it to sit at a slight angle for better readability on my desk.. If you made this clock in less than 5 minutes, spend the remaining time patting yourself on the back for a job well done. But, really, spend all the time you need here. You deserve it!. I also created a wooden box so this can be used as a real clock in a bedroom/office environment. SketchUp plans for a box similar to the one pictured below have been added to the project.. Cherry Segment Clock imgur Album. Another box! This time made out of bamboo.. Bamboo Segment Clock imgur Album. MOAR BOXES! This time made out of purple heart.. Purple Heart Segment Clock imgur Album. .",1
"Connect a rotary dial telephone from the 80s to a cheap cellphone with an Arduino.. Read up about this project on . Connect a rotary dial telephone from the 80s to a cheap cellphone with an Arduino.. I was digging in my box of random electronic things that I don't use anymore and hope to find a way to recycle, one day and found this cute little cellphone. . And I thought ""What if I took the cute little phone, tore it apart, ripped its entrails out and attached it to another older less cute phone!"" And so I went and bought an old rotary dial telephone and started my adventure.... FYI, old rotary dial phones aren't easy to come by these days. . Unfortunately, for this project, I can only show you a few pictures and share the code with you. I have no idea how much changes are going to be required in the code if you use another cellphone than the one I used. . But let's start on the easy piece. The dial itself.. When I started this project, this was my biggest worry. How was I going to read the dial? And the answer was... disappointingly easy. . The back of the dial is actually super simple. I'm guessing that the technology didn't vary that much from one phone to the other back then so you'll probably find a similar configuration when taking your old telephone apart.... The colors of the wires on the prototyping board below match the colors on the dial above. (The pink wire on my dial is connected to the brown. That's why there's no pink on the diagram). In the code, this is what does the work:. On my dial, when nothing is happening on the dial, the orange wire reads 0v because the switch is open on that side, the grey one is closed so it reads 3.3v (But we don't care). When the dial is wound, the orange wire gets connected. This causes activeState to be true (sort of). Then when the dial unwinds, the other switch will start pulsing and the myPulseIn function counts the amount of time between on and off states. Everytime the switch is off for between MIN_VALID_PULSE (50000) and MAX_VALID_PULSE (150000 units of time - those aren't human units), digit is incremented. For a 1 this happens only once, for a 3, three times,... you get the idea :D. The values are defined at the top of the code. As I realised with the help of JKF, my dial was really old and slow. His pulses are a lot faster and didn't fit in the 50000 - 150000 bracket. By using some of the Serial debug lines provided, you'll be able to get values and find a bracket that works for you. . Now we have a digit to dial, so we dial it. The dialCellDigit does this and it's explained in the code.. Next we connect this to the cellphone:. The keypad of my little phone works on the same principle as the keypad on the Arduino tutorial. The left side of the prototype board shows the circuit needed to connect one button. On my cellphone, the green wire is connected to a point on the keyboard that corresponds to a row and the blue one to a column. This is easy to figure out once the phone is open by connecting a wire between various points on the naked keypad and checking what it does. . The little black ICs are Opto-Isolators. They work more or less like relays so the Arduino circuit stays independent from the phone one. . Once you have figured out your rows and columns, you just have to connect them to one another correctly. 1,2,3 on the keypad will have the same row (green) but different columns (blue), 4 has the same column as 1 (blue) but a different row (green) .. The ""Call"" and ""Hang Up"" buttons were weird because they both had their own special green and blue. . Once you have the dial talking to the keypad, the rest becomes assembly. You'll need to take apart the receiver to figure out which wires are for the microphone and which are for the speaker. I couldn't figure out the positive and negative for each set on my receiver. It doesn't seem to really matter.. They just need to get connected to their counterpart on the cellphone. The speaker was easy because the poles on the circuit board were about 3mm x 3mm. The microphone on the other hand, is located at the bottom of the keypad somewhere. The connection poles are minuscule and less than a millimeter apart. . And at this point, I have to take a second to officially thank Chantal for her help with the soldering. She did 80% of the soldering onto the 2 circuit boards and she did the microphone one! Without her, I don't think my phone would have had a microphone at all.. On the chassis of the old telephone, we need to add wiring to connect the 'hang-up' lever button of the old telephone to our Arduino. I used pin 18 (A4) for this. My phone had 3 of those lever switches. I used the one that was normally closed so the current would only flow when the phone is off the hook (Which is less often than on hook) . In the casing of the telephone, I drilled a small hole to squeeze a push button that I then connected directly to the green-blue wire combination for the 'Dial' button on the cellphone.. Finally, we squeeze everything back into the casing of the old telephone . And we put the case back on. . I use a standard mini USB cable to connect the Arduino Nano (red circuit board above) to the power and run my phone from a portable cellphone charger. There's already a gap to let the wire out because this phone used to connect to a land line. . On a final note, . This defines the number of digits the cellphone will dial before calling automatically. In SA, we have 10 digit numers. You might have to change this value for your country.. The push button that I added on the case is for international numbers. Here they start with 00 ('+' on your cellphone is the shortcut for this but good luck getting a '+' out of the rotary dialer :) . This is the code in charge of preventing automatic dialing at PHONE_NUMBER_LENGTH digits. . It only checks that the second digit is a 0 (that's because in SA, all numbers start with 0. You will have to modify this also to get the international calling working if your country works differently.. If you need explanations on the code or additional details, please feel free to ask. I can't however help you with technical questions. I don't know cellphones, nor do I know old telephones. This is one specific cellphone connecting to one specific telephone and a lot of trial and error. . I hope you got this far and got excited about building one of those! . If you do, please drop me a message or leave a comment and we can make a plan for me to call you OldArduiPhone to OldArduiPhone! .",1
"This project aims to provide insight into the workings of a digital oscilloscope. This project is designed to be an education tool.. Read up about this project on . This project aims to provide insight into the workings of a digital oscilloscope. This project is designed to be an education tool.. Arduino Oscilloscope . . Arduino-based oscilloscope with advanced features and two channels. It is a DIY Oscilloscope based on popular Arduino platform.. Arduino-Oscilloscope (here-after referred to as Osciduino). There is another project with the same name that is why the title name is changed here, after I saw the another project with the same name ie OsciDuino) is an Arduino-based oscilloscope (tried and tested on Arduino Uno R3 and Mega 2560). Though I would recommend using Mega if you can.. It is an educational project to get the insight into the internal workings of a buffered digital oscilloscope (DSO) Tthis version includes advanced functionality to the setup, by including features like dual channel, offset, trigger, time/div, volts/div, and likewise.. The inputs are taken from 2 analog input pins on Arduino. The pins however support only voltage range of 0 to +5 volts. so ths oscilloscope works well only if the signal being viewed is +5 volts peak to peak maximum and doesn't have any negative halfs. to view negative halfs, the oscilloscope has to be operated in a +2.5 volts peak mode. this is accomplished externally by scaling the voltage and then offsetting it by +2.5 volts.. An additional display library is included in the master for SPFD5408, if required.Also the schematics for the setup are included in the ""arduino files"" folder. This is really simple to do just follow the following steps and you are up-and-running.. First and foremost plug in the Display to Arduino. For this see How to assemble the hardware. /!\ Make sure that 'CH1' and or 'CH2' is set to 'ON'. The following is a ""hello world"" example for the Osciduino. . Observing charging and Discharging of a capacitor. Setup. Power up the Osciduino, as mentioned above in the quick start. Now on a breadboard connect an electrolytic capacitor in series with a resistor to a square wave generator.Place the probe on the resistor capacitor node. Add a common reference ground between Osciduino and the RC circuit. . And you should start seeing the characteristic rise and fall slopes associated with charging and discharging of the capacitor.. See. The setup requires an external resistive control interface. Which requires callibration on every boot. As resistance changes easily with temperature and long durations of running. This can be mitigated in a lot of ways, for example by replacing the resistive divider switchconfiguration by a touch based scheme or a push button scheme encoded into the free GPIO pins on the Arduino Mega.. Starting version 1.5, the hardware extension support will be addedto the project - release v1.5.0. The code is originally based on the one by Mr. Noriaki Mitsunaga http://n.mtng.org/ele/index.html.",1
"A WiFi capable smart clock and notification system (inspired by LaMetric Time) consisting of a 32x8 LED matrix and ESP8266.. Read up about this project on . A WiFi capable smart clock and notification system (inspired by LaMetric Time) consisting of a 32x8 LED matrix and ESP8266.. Make your own IoT smart clock that can:. . Easy to build just need a Wemos D1 Mini and MAX7219 LED Dot Matrix Panel. No need programming skill no need Laptop/PC to program Wemos ESP8266 microcontroller, just need Android phone to upload sketch/firmware to Wemos via USB OTG.. It runs completely autonomously and be configured and controlled via an Android app, with the app you can configure and setting IoT Smart Clock (ESP Matrix) device very easy with a simple interface.. Here are the things that you will need to make ESP Matrix:. 1) Remove the LED Dot matrix component in the first column that have the soldered header pin on pcb.. 2) Twisted all male pin headers 180° using long-nose pliers, so that they point inward. . 1) Cut half of the existing dupont cable, so it becomes around 10cm.. 2) Connect female header on dupont cable with male header on LED Dot matrix panel, see picture.. 3) Separate the cable into two parts, 2 cables for VCC & GND, 3 cables for CLK DS & DIN. then enter into the hole on the pcb, see picture.. 1) Peel the end of the cable using a wire stripper tools.. 2) Then cover all ends of the cable with tin.. 1) Solder to connect CLK to D5, CS to D6 & DIN to D7.. 2) Solder to connect VCC to 5V & GND to G.. You can use double sided tape, to glue between the Wemos and the LED Dot matrix panel, see the picture. Also reinstall the LED Dot matrix component which is in first step removed. This 3D-printed case is design more slim and pressing to make it look solid and robust, so to install it is not so easy need a little pressed.. ESP matrix can be made in two sizes, a short 32x8 pixel of LED use 1 panel LED Dot matrix and a long 64x8 pixels of LED use 2 panel LED dot matrix, so to make a 3D-printed case depends on your choice.. To make the light of the LEDs be more clear and diffused, on the LED surface add black transparent colored acrylic.. There are two sizes of acrylic:. 1) To program the Wemos ESP8266 (ESP Matrix) very simple, you only need to connect Wemos (ESP Matrix) to an Android phone via a micro usb cable and OTG adapter, see picture.. 2) Then install the ESP Matrix app from Google Playstore. https://goo.gl/b9YAth. 3) In the first welcome screen tap UPLOAD button.. After programming is complete then it is necessary to set some parameters of the devices:. 1) Connect ESP Matrix device to network internet using app.. 2) You need Sign-up to get an API key from openweathermap.org, then copy the your API key to the weather option in app.. 3) You need City ID from openweathermap.org, eg.2643743 for London, then copy the your City ID to the weather option in app.. If you feel dissatisfied with the short type because you can only see short messages, so you can make the long type the length of the size two times longer. For more details you can follow the tutorial in this video.. Hopefully you enjoy your ESP Matrix. If you do, please share your makes, share the link, like and subscribe. As always, if you have any questions please let me know! . . . . . . . .",1
"Bluz powered probe thermometer to stream temperature data to your smartphone. Never dry out your steaks or chicken again!. Read up about this project on . Bluz powered probe thermometer to stream temperature data to your smartphone. Never dry out your steaks or chicken again!. With summer arriving, and the fear of dried out chicken looming, we wanted a more high tech way to track the temperature of items we are grilling outside. There are wireless probe thermometers, but they require carrying around a separate readout. We wanted a way to read the termperature from our smartphone, so we took the just the thermometer and hooked it to bluz!. . Getting the thermometer to work was a bit of an experiment. The thermometer itself is a thermistor, which means the resistance changes with temperature, but not in a linear way. To get around this, we followed some advice in this article and added a second resistor in parallel. We had to measure the thermistor without the parallel resistor first to find the proper range. Then we added the resistor and measured various temperature points to create a linear function to determine the temperature based on the measured voltage.. . Once we had the proper resistance, we hooked one end to 3.3V and the other to a pull-down resistor and measured the voltage in the middle. We managed to calibrate it further by experimenting with the provided digital read-out.. . To make the circuit for the probe thermometer, we used the bluz Proto Mini shield. We soldered on a 2.5mm stereo headphone jack as that is what the probe thermometer used. Then we just soldered the rest of the resistors in place. The Proto Mini shield made this super easy.. Once everything is hooked up, just start the node.js server and open the webpage. The temperature is published every 1 second and will be updated on the webpage.. Next step is to add a notification for when the temperature exceeds a pre-set limit!.",1
"Fully programmable, WiFi connected, small and customizable, Linux based webcam with web configuration/access. Read up about this project on . Fully programmable, WiFi connected, small and customizable, Linux based webcam with web configuration/access. I always wanted to build a wireless security camera with full control on its programmability / features and the possibility to hide it inside a very small, anonymous box.. Few weeks ago I started building it using the Arietta G25 board.The base elements of the project came from a sample application to stream video. I've built on top of that example using a specific HW configuration and different SW.. Please note: this is my first project publishing and I hopefully wrote enough detail. Also, it is the first delivery and I will later update it with some access control details and IoT integration steps. Please read it once before starting so that you are aware of the small issues and workarounds that I've found.. I will list first the HW instructions to assemble the device and then move to the SW configuration.. The board is based on a ARM 9 (Atmel AT91SAM9G25) at 400 MHz with 256MB of RAM and microSD for the OS (see picture below). You can add a WiFi module just on top to add network connectivity.  It runs Debian Linux and has a good number of I/O ports.. I've used a Microsoft Lifecam webcam but you can use any USB based webcam that has drivers on Linux distributions and is compatible with Motion. . See the HW section for the components list.. The webcam is very simple and can be easily opened to grab its board and sensor without breaking the whole thing:. You start by unscrewing the two small screws on the back of the camera to get rid of the front side. It has a small plastic clip but it will come away easily with the help of a small screwdriver.. Once opened you will see two more little screws on the sides of the sensor board. Removing those will allow you to lift the board. Be slow and careful here. You will see this:. You will see that the USB cable is locked probably with glue to the center of the back. If you succeed in unlocking it from the case you can try and pull some more cable (10 cm) from the case before cutting it. Ever since I was not able to unlock the cable I decided to simply cut it at the level of the case just to extract the sensor. I then soldered the cable back to the proper board pins. The board will look like this:. There was some white and hard glue close to the wires, I didn't remove it completely to avoid the risk of stripping away components.... You will notice that there are two black wires soldered to the cable shield. One is for the metal shield for the microphone: you can cut it away. A second one is connected to the board on the pin marked C in this picture. Apparently, it is not needed by the webcam, so I just unsoldered that (you can just cut it away if you prefer).. Ever since I've cut the wires so short inside the case, I took a longer piece of shielded cable from the original USB cable and replaced the wires on the board one by one, soldering them to the corresponding pinout. Be patient and use a small soldering tip here.. There was also a small piece of scotch tape around the sensor: I actually removed that, but I think I will place something similar again when mounting the whole device in the final box.. So now you have the 4 USB wires to be connected to a USB port on the Arietta. First look at this picture for the webcam pinout:. I decided to power the whole thing using a simple 5V - 700 mA cell phone charger. So the 2 wires (+5V and GND) coming from the charger will power both the Arietta and the webcam. This is the wiring diagram for USB and power:  . Next thing to wire is the antenna coaxial cable, using its tiny plug. Be careful: I've used a magnifying glass in order to avoid destroying the whole thing with my BIG fingers... :-). On the opposite side of the coax cable there's a small golden SMA female: you will attach the WiFi antenna to this plug.  See following pictures: . In order to connect, work and debug in a easier way I decided to use a serial debug cable.. The Arietta has 6 pins available for a serial debug port and ACME Systems sells a complete debug port adapter.   Ever since I already had a USB to TTL cable adapter with proper chip and voltage levels that I used for the Raspberry PI, I decided to reuse that soldering a 4 pins male header to the board.. It is really useful since you can follow the whole Linux boot sequence and also connect and work using a simple terminal client like Putty.  . See the pictures below for the correct header placement:. You can purchase a microSD with the OS ready to use. OR. You can download an image file of the OS from the manufacturer website at http://www.acmesystems.it/binary_repository On that page you will find full instructions and links. But here is a quick recap:. . The Arietta has 3 USB ports:. This means that if one wants to use the webcam at full resolution (1280x720 in this case), he will need to use port A with this configuration that includes the WiFi module. Fortunately this conflict can be solved.. In order to use port A, we will need to avoid using the g_ether driver that is configured by default to get network connection via the microUSB connector. You will see how in the steps below.. . Arietta, just like the Arduino is accessible and programmable using a micro USB connector. Since we will disable the config to use the microUSB for networking, I strongly suggest to start and continue using the USB to TTL debug cable, connected as described in the HW steps, for the first 4 steps at least.  . On this page http://www.acmesystems.it/tutorials you will find several ways to connect to the Arietta depending on your OS and the preferred channel (serial or network). Please refer to the links in this page for the suggested SW and methods. . . Plug the USB to TTL debug cable in a usb port of your laptop/PC a driver should be activated automatically. . Here I've found an issue: I'm using Windows 8.1 and the ""Prolific"" driver for my R-PI USB to TTL debug cable seems to be no longer supported. I tried some workarounds but with no success unfortunately.  I also have an Ubuntu Virtual Machine running on VirtualBox, so I've run that VM and enabled the Ubuntu driver for the USB to TTL cable from the VirtualBox VM menu .  This one worked immediately.. On the Ubuntu desktop, open a Terminal window and start a connection with Arietta using this command:.     sudo screen /dev/ttyUSB0 115200. where /dev/ttyUSB0 is the device id assigned to the debug cable by default.. . Double check all your wiring, prepare the cell phone charger and power-on the device you just wired. Hopefully, you will not see smoke and you will be very happy about this :-). You will notice that a small red LED will start blinking on the Arietta board and you will see lots of Linux messages, boot related, appearing in the terminal connection window on your laptop.. Wait for the boot sequence to complete.  A login prompt will appear.. . Enter the following default credentials:.     username:  root.     password:  acmesystems. You are now connected as the root user, so you will have all the permissions needed to perform the next steps.  You will also have the permissions to create issues :-) so be careful.. I've published on github a set of configuration files copied from my Arietta.  I kept the same folder structure so you will know where they have to be copied, replacing the existing ones.. Download the zip file on you drive and open it to your preferred folder.. . Using a text editor on you laptop open the file /etc/network/interfaces . You will notice a block of lines commented out with asterisks.  I did this in order to disable usage of network through the microUSB port. This way the g_ether driver will not use the USB port A  that we want free for the webcam.. Now you will have to customize some of the parameters in order to connect to your WiFi.. Ever since most of the home networks should have at least wpa security enabled, I've copied the configuration for my one, changing my real security and config details (IPs, wpa-ssid and wpa-psk).. I wanted to have a static address assigned to this device. I've chosen 192.168.0.24 (within my network address range) and specified this and my network gateway 192.168.0.1 in the file. You can/should customize these for your network and preferences.. Enter your WiFi network SSID (network name) in place of YourNetworkSSID. The value to be specified for wpa-psk has to be generated starting from your wpa pass phrase.  Enter this command in your terminal session to be executed on the Arietta:. the program will answer with few lines similar to these ones:. copy your long exadecimal string and enter it in the editor on the laptop replacing the value for wpa-psk:. Save the file on your laptop for backup and reference.  Then select and copy its whole content to the clipboard.. Now inside the terminal session enter this command to edit the Arietta network configuration file:.     nano /etc/network/interfaces. the editor window will open, hit F9 (delete line) until you have deleted all the file content.. Now paste what you copied to the clipboard from the corresponding file (right-mouse button options, depending on the client you are using):. Hit CTRL-O to save overwriting the file. Hit CTRL-X to exit nano (the text editor). . At this point you can power-off the Arietta. Wait few seconds and then power-up again.. Debian Linux will reboot and the WiFi network connection should be established. Depending on your overall network configuration the time taken by the Arietta to get a network link up will be shorter or longer. In my case it is usually up in less than 1 minute from boot. You will see a specific message about this at the end of the boot sequence messages coming through the debug cable:. I plan to investigate how to improve this timing, any suggestion is welcome :-). . The Arietta has a small web server (lighttpd) installed to allow first check of setup and to give access to the Codiad web based IDE and Shellinabox (a web based terminal emulator).. Open your browser and enter a url based on the IP address you configured ( 192.168.0.24 in this example):    http://192.168.0.24/ . You will get the following page content:. From now on, you have various connection options to work on the Arietta: keep using the debug cable+terminal session OR connect via network to the configured IP address using the PuTTY client on windows OR using the web based Linux shell.. Please note that, when using the web based shell, you will connect using the acme/acmesystems default credentials. In order to work with root permissions you will need to run this first command after the login:. and enter the acmesystems password when requested.. Once connected through a terminal session you will now perform some sw installations:. Install HTOP for easier management of processes and memory usage checks (if needed):. Install Motion , a powerful open source sw that allows the creation of this security camera. During my first tests I realized that, should the power go away you would lose the correct date/time unless you add a backup battery. I didn't want to add a battery to this project since I want to keep it small. . It's important to get the video frames stamped with correct date/time and also to have Motion creating the video folders with correct/current date.. So I decided to install the NTP daemon because it will set and keep synchronized the Arietta clock with network time servers: . In a later step we will customize a bit the NTP configuration.. Motion will store images and videos in sub-folders named with the current date. During my tests I've seen that Motion was still creating some folders with OLD/WRONG dates.. That was happening because during the boot sequence Motion was starting his work before NTP had completed his own.  In order to avoid this issue I did the following changes:. - disable the motion daemon. - launch Motion execution using a custom shell script. - in that script: check for internet connection availability in a loop for up to 25 times, if internet is available then set the date/time directly with the NTPDATE command and then launch Motion.  Please note that, if no internet is available, then the script will launch Motion anyway so that you get it running and taking pictures (this has still some priority).. That script is ready for you between the files I placed on github. We will copy them at a later stage.. Please enter the following command to disable the Motion daemon:. Please note that there could be other better approaches to solve this, but I did not get working suggestions during that time frame. If anyone has good advice about configuring a boot sequence... it's very welcome.. . WinSCP is free utility to explore a remote Linux file systems using the SCP protocol. . You can download and install WinSCP from this link   http://www.winscp.net. You will find more instructions here:   http://www.acmesystems.it/winscp. The program is very easy to use and is based on two windows placed side by side, representing your laptop file system and the Arietta file system. You can easily copy files from one side to the other and create/delete/rename files and folders.. . Using WinSCP go to this Arietta folder /var/www/ and create a new folder named motion. Please note that the the folder names are case sensitive, so do not change them.. After creating the folder, I've setup its permissions like you see in the following screenshot. You can open this Properties window using the right mouse button on the newly created folder. I will probably review the permissions at a later stage.. go to this folder /var/run/ and create a new folder named motion. On your laptop open this file with a text editor:. \etc\ntp.conf  . and ensure you specify your preferred time server in place of the current one ( ntp1.inrim.it ). . I've selected that one because is the official Italian one. You can search on the web for your one and use its name here.. Save the file and exit the editor.. Always on your laptop open this file with a text editor:  . \etc\init.d\lanciamotion.sh  . do the same change also in this file from  ntp1.inrim.it  to your preferred server name.. Save the file and exit the editor.  . . Copy the following files from the exisitng path on your PC to the corresponding path on the Arietta:. . \etc\ntp.conf. \etc\resolv.conf. \etc\init.d\lanciamotion.sh. \etc\lighttpd\lighttpd.conf. \etc\motion\motion.conf. . Within the Terminal session:. give the execution permissions to the script:. activate the motion startup script entering this command:. update-rc.d lanciamotion.sh defaults. . Reboot again your Arietta powering off and on after some seconds.. Follow the boot sequence on the debug port Terminal session.. You will notice that at the end of the sequence the network connection will become available. the date/time will be set by the ntpdate command. and Motion will be launched:. nohup is a command used to launch Motion detaching its process from the current shell session. This will hide all the Motion startup messages. If you need to debug, you will find all Motion messages stored in the file  /etc/init.d/nohup.out. The webcam board blue LED will stay on signalling that Motion is using the webcam.. . At this point the Arietta will offer you two web interfaces interfaces, see screenshots below.. The motion web admin interface (  http://yourAriettaIPaddress:8080/  ) will allow you to change the configuration on the fly and control motion status:. To see the video and images captured by Motion, open your browser at http://yourAriettaIPaddress/motion  this will show you a web folder with links to folders (one per day) and some .avi files (one per 

movement event detected by Motion).. Inside the daily folders you will see images related to movement detection events plus an .mpeg video condensing all the event frames for the whole day (sort of time lapse video).. It is also possible to watch video frames flowing through Motion during its processing. You can open the stream using for example VLC or similar video player.. Please note that the framerate is low since Motion is using 1-2 frames per second to perform its processing and detect movement in the scene monitored by the webcam.. Point the video player to this URL:    yourAriettaIPaddress:8081. Here is an example of the video showing the number of changed pixels (I placed a book in front of the webcam so it is very high), the rectangle highlighting the area with changes and the date/time stamped on the frames:. I think I wrote a lot, probably too much, Please let me know your feedbacks, really appreciated.. I already have a to-do list here for the next steps.. If you use these build notes and find issues, errors or missing info just let me know and I will be happy to do my best to support.. Please note that I'm based in Italy so GMT+1 ... consider this when waiting for an answer :-). TO-DO list: . .",1
"Here's an introduction to control a Nema 17 stepper motor with the help of the Adafruit TB6612 OR A4988 Stepstick OR PHPoC PES-2405 R2. Read up about this project on . Here's an introduction to control a Nema 17 stepper motor with the help of the Adafruit TB6612 OR A4988 Stepstick OR PHPoC PES-2405 R2. I was struggling with the wiring of a stepper motor and so I hope I can take the fear out of you with this article: I use the same PINs to illustrate two different devices driving the Nema 17 stepper motor using an Adafruit TB6612.. In the beginning, a short test with an LED is worthwhile to find out the correct cable routing of the two coils in the stepper: pick up an LED and insert the two feet into the adapter: move the motor with your hand.. If the LED is lit you have identified the two cable for connection to the MOTORA or MOTORB breakout board.. The same structure works with the given library ""Stepper"" examples for both the Uno and the Photon (here only the PINs in the original example have to be replaced by 4, 5, 6 and 7). . Adafruit offers a good step-by-step guide to their break-out board.. Now we are ready to face ambitious projects as well. We already have the right breakout board in our hands: this can up to operate four solenoids, spin two DC motors or step one bi-polar or uni-polar stepper with 1.2A per channel.. I found in my component box an alternative Stepper Motor Driver, which I can also recommend: the Stepstick A4988 by Elegoo.. You can read the technical features on the website of the manufacturer.. A nice explanation by video you can find here.. With the knowledge from above, should the adaptation of the wire loop for the A4988 be equally possible? And so it behaves:. ... using the example of the photon:. Direction <> Device A0. Step <> Device A1. Sleep <> Reset - mandatory!. MS3, MS2, MS1, Enable <> without connection. GND, VDC <> 5V (from Device). 1B, 1A <> coil1. 2A, 2B <> coil2. GND, VMOtor <> 12V (from external PowerSupply). To ensure a drop in performance is still a 47 nF Capacitator when supplying the 12 volts necessary.. . Datasheet from Pololu here.. Now when I had the structure in front of me, it was now to influence the rotational speed to take: it offers a potentiometer. In the picture you see a blue ""U 103"" which can be addressed at the side of the notches with GND, signal and 5V. In addition, a black potentiometer, which can be rotated better thanks to its large rotary lever. The wiring is identical and so I have passed the signal to the photon at A2.. The necessary code can be found below.. If you do not have any potentiometers at your disposal, you can also use software-based potentiometers: for this purpose, we integrate the library from Blynk. Blynk offers us several predefined components: I chose a slider and connected it to ""virtual 0"" in the Blynk app. . The value scale is restricted from 0 to 1023, where 1023 means ""slow"".. The slightly changed code can be found as usual below. Two additional variables were added and instead of reading out A2, the values arriving from the slider are now linked with ""virtual 0"".. Pay attention to the use of the function abs (), otherwise it will not work as expected.. Has the map function noticed? Here he is explained:. Mapping is a way to translate a value from one range of numbers to another. It can be used to create a direct relationship between an input and an output. For instance, the value provide by a potentiometer could control the stepper-rotation. To accomplish this, there is a very useful function called map(). It looks like this: . value is the value that you would like to map. fromLow and fromHigh is the low and high end of the original data set. toLow and toHigh are the low and high values of the mapped data set. If you were to map the full range of analog input (0 to 1023) to the full range of analog output (0 to 255), you’d use the following line of code. Arduino Map-Reference and Particle Map-Reference. If you are unfamiliar with PHPoC, I recommend getting familiar with the preparation/introduction first. . Within the product family you will also find an ""smart extension board"" to use as a shield on the PHPoC Blue/Black (but not for the PHPoC Shield for Arduino). The PES-2405 R2 is piggy-backed onto the PHPoC board with its PINs and the stepper motor is already under the control of PHP. This is possible with a separate library SD_SPC.php via include_once ""/lib/sd_spc.php"";. I have detailed command usage here and is quite extensive.Here move and goto are demonstrated.. The examples are set via DIP switch on port 1 (1,2,3 below, 4 above). More information in chapter 3 - Slave ID Switch.. If you have added the library with the help of the PHPoCD application, then the familiar wiring of the motor is sufficient with the aid of a screwdriver on the green terminal (A +, A-, B +, B- and separate voltage of 12 V in GND and VM).. The PHPoC is powered by 5V from the power bank.. Now add the PHP files to the root directory and call the URL to the PHPoC in the browser - like http://192.168.178.55/goto.php.Already the stepper should move - done.. . .",1
"The company that toys with your emotions introduces its newest product: Nostalgia.. Read up about this project on . The company that toys with your emotions introduces its newest product: Nostalgia.. lostplayground: Toy with your emotions.. Nostalgia: Swing back to your childhood.. In its first iteration, Nostalgia is a swing that plays songs (mostly TV show themes) from the swinger's childhood. Nostalgia in its current form is aimed at college-aged students, with the sounds hailing from the 90s. The goal of Nostalgia is that the higher and longer a person swings, the farther back in time they are transported through their memories and nostalgia for childhood. In this way, we aim to remind people to find time for playfulness in their lives (just like stumbling across Nostalgia) and to change the meaning of old playground toys to people who think they've simply grown up and grown out of their youth.. In the future, we hope to create a Nostalgia experience that fits the Experiential Overview at the top of this page: an experience that is tailored to each swinger, combining not only TV show themes but music, old advertisements, and other sounds that are reminders of the specific person's past. Nostalgia is just one of many products lostplayground hopes to perfect in order to get people's emotions going and people's brains thinking.. lostplayground: Toy with your emotions.. Lost Playground Keynote PresentationNote that the typography is incorrect in this version of the presentation.. It's a cold spring night, with a gibbous moon lighting the night and you're walking through the redwood groves to get home. Little do you know, your presence causes a beam of light to your right in the groves. You glance over and see a mysterious swing that begins to oddly sing as its chain links chime in unison and the metal grinds the tree giving it support. The allure of this life-like swing has stopped you stone-still and the green seat reminds you of a once loved thrill.. You walk over and sit down when the beam disappears and a familiar sound starts to sing. The music that plays can't help but bring you to reminisce of that first kiss. It changes and is from that TV show you'd never miss when you were in middle school. And again to that painful diss he'll never rescind. Swaying back and forth nothing else matters because you're fully present but completely lost in some form of past. The higher you swing the further you're taken back.. Each song is an emotional snack. The feeling of speed and cold wind sway your hair like the leaves of the tree as your heart feels a tease. Your hands feel smaller. The world around you looks bigger. You reach the peak and start feeling weak just as you reach that understood self. You want to go higher but you can't. You want to bring back more but only the sound unlocks the thought. You want to be a kid again in a playground of life's time. Suddenly you're back where you started, the swing is gone, and you continue on the path as time ticks on. . LogoFor the logo, we were inspired by abandoned amusement parks especially like the horse here. Usually, horses are in a large group on a carousel. We created a logo with a solitary horse to emphasize the emotions brought about by our product line.. Typeface>We went with a round, friendly typeface which seems very child-like and playful.. Colors>Our colors are bright, fun and youthful. We want them to entice people to interact with our products. The color names are purposely ironic to display the true feelings brought about by our brand.. The Swing>Green is the color of new beginnings and fresh starts. Thus, we chose it to represent the Nostalgia. We wanted the brightness of the green seat to be contrasted by the rusty, grotesque chains. The aesthetic of the swing was inspired highly by abandoned playgrounds and parks. . For the swing itself, we were very lucky. Originally, we wanted to build our own swing from scratch using wood and rope. One of our teammates, however, happened to find a free swing on the side of the street. We used this to our advantage and spent time cleaning it up and incorporating hardware onto it.. You can either build a swing using a blank of wood and ropes, or happen to come across a plastic swing with chains like we did. Make sure that the chains/rope is at least over 12 feet long, because you will want to wrap it around when the swing is hanging.. If the swing is found on the sidewalk, definitely wash it with soap and water for a very long time. Wash the chains as well. Then, for any swing, you will want to paint it so that it is more enticing to the audience. We spray-painted our swing green to fit our branding colors.. Our company, lostplayground, was branded onto the swing seat using white vinyl. This way, the swing would be unique to us, and not just any old swing. We let this sit and made sure not to bend the seat of the swing overnight so that the vinyl wouldn't tear or move.. For Nostalgia, the swing that takes you through your past, we needed a circuit that utilized an accelerometer, a flex sensor, and sound. The flex sensor would know when someone was sitting on the seat, and then turn on the accelerometer. The accelerometer would changes what sounds played based on the acceleration of the person swinging. . . We divided this task up between people and each worked on a smaller part of the circuit. By doing this, you get to understand better how the input or output functions, but it is much more challenging to find out how to connect all the circuits together.. We attached the Arduino and breadboard to the bottom of the swing using heavy-duty tape, and attached the speaker (in a cardboard tube resonance chamber) low on the chain handles using ties. The speaker was soldered to a longer wire so that it could still attach to the breadboard. In the case of our project, the flex sensor and Arduino did not work with the sound circuit, so we added a button that could turn on the sound for us..",1
"Make beautiful music with Adafruit, SparkFun, Arduino and ProtoStax! Create an RGB matrix audio visualizer with Arduino.. Read up about this project on . Make beautiful music with Adafruit, SparkFun, Arduino and ProtoStax! Create an RGB matrix audio visualizer with Arduino.. . . In this article, I explain how to build an RGB LED matrix audio visualizer, using an Arduino, an RGB LED Matrix Shield, and an Audio Spectrum Analyzer Shield, then put it in an enclosure so that you can have a finished project that you can display by your music system to have a nice light show of your music! . For the Audio Spectrum Analysis, I use SparkFun's Spectrum Shield, that uses two MSGEQ7 graphic equalizer display filters, that split a stereo audio input into 7-bands (per channel) and read the amplitude of each using the ADC on your Arduino. It comes with Arduino sample sketches to get started. . For the RGB LED Matrix, I use Adafruit's NeoPixel Shield for Arduino, that consists of 40 RGB NeoPixels (Adafruit's terminology for their WS2812 light source). Red, green and blue LEDs are integrated alongside a driver chip into a tiny surface-mount package controlled through a single wire. They can be used individually, chained into longer strings or assembled into still more interesting form-factors. In the case of the Shield, they are chained together. The Shield also comes with the Adafruit_NeoMatrix library, that simplifies access to the RGB LED Matrix and controlling the LEDs. . Lastly comes the enclosure. Some of you may be aware that I've created a new stackable, modular enclosure system called ProtoStax. It was a personal itch that I had to scratch - I wanted an enclosure that supported different stages of prototyping, offering protection and open access when starting out, with the ability to add side walls and the top later, but also have the ability to stack multiple units either side-by-side or one on top of the other, thereby having the ability to expand with prototyping needs and the addition of other boards and components.. In this example I use ProtoStax for Arduino, a clear acrylic enclosure for the Arduino -- it fits both the Uno/Leonardo footprint as well as the larger Mega/Due footprint -- that is also stackable and modular and has room comfortably for the two Shields (with some minor modifications, that I will outline). It is clear and sturdy and also has rubber feet to slightly elevate it and protect the surface of your table, so you can display your Audio Visualizer and its light show along with your music system! 😊. Ok, let's get started, shall we? 😊. Let us first mount the Arduino (Uno in our example) to the enclosure's base plate. This gives it protection while offering full open access to it to configure and setup the Arduino and play around with it. When you are ready to close it up, It is easy to add the side walls and top plate and secure everything with screws.. Mount the Arduino to the base plate, and add feet and other hardware to prepare the enclosure in Platform Configuration. See steps below in the slideshow - the caption for each image is numbered and gives additional explanation for each step.. . Here are all the steps as an animated gif:. . . The SparkFun Spectrum Shield does not come with headers. Fortunately for us, Adafruit NeoPixel Shield for Arduino comes with both stacking headers and plain headers. Since I want the NeoPixel Shield to be at the top, I want to use plain headers with it so that it will be flush, and this leaves the stacking headers for use with the Spectrum Shield, which is just what I want! 😉. However, the Spectrum Shield with stacking headers does not fit snugly - the USB and Power ports on the Arduino Uno get in the way, as shown in the picture below. . . . I made the following two modifications - . . Now it fits snugly!. . . . The Adafruit NeoPixel Shield goes on top of the Spectrum Shield. You will first need to solder in the regular headers (that it came with). I also soldered in the terminal connector that it came with, though in this example, I'm powering it using the Arduino, as all the LEDs will not be turning on simultaneously, so the power consumption is within the amounts that the Arduino can provide. . Message from Adafruit's NeoPixel Shield for Arduino page:. Let us take a look at the Demo Code and see what it is doing. To do that, we can split it into two main parts: . You can quickly reference the demo code here:. https://github.com/protostax/ProtoStax_Audio_Visualizer_Demo/blob/master/ProtoStax_Audio_Visualizer_Demo.ino. . You can refer to the Spectrum Shield Hookup Guide for additional information pertaining to the Spectrum Shield. I've summarized the information here. . By writing a digital sequence to the STROBE and RESET pins of the Spectrum Shield, you initialize the MSGEQ7 chips used by the Shield. You can then proceed to read the magnitude of each of the 7 different frequency bands that the spectrum is split into. Each band is read followed by pulsing of the STROBE pin to initiate reading of the next band. The values are stored in Frequencies_One[7] and Frequencies_Two[7] for the two channels of the stereo input. The values are read by using the 10-bit ADCs of the Arduino, and the output value can thus be 0 - 1023 - they provide a representation of the amplitude of each frequency band.. The 7 bands of the frequency spectrum are: . I split these up into 3 ranges - BASS, MID_RANGE and TREBLE. Typical Bass range is 60 to 250 Hz, so the first two bands are in the BASS range. Mid-range frequencies are typically 500 Hz to 2 kHz, so I group the next 3 bands into MID_RANGE. I group the remaining 2 bands into TREBLE. . [Note: I also note the max reading of each of the bands into a separate variable. This can possibly be used for automatically scaling the readings to the level represented by the RGB matrix columns - this is useful in the case where the input signal is low - otherwise only very few of the RGB matrix would light up in that case. ]. You can refer to the Adafruit NeoPixel Überguide for additional information pertaining the NeoPixel Shield and NeoPixels in general. I've summarized the information pertaining to our use here. . The main point I will try to clarify, which I found a little confusing at first, is the direction and orientation of the NeoPixel Shield and the numbering of the coordinate system. The Überguide explains it, but I think I can make it a little easier. . First thing to note is that in the coordinate system, [0, 0] ALWAYS refers to the top left, regardless of the orientation. . Next is to note the WIDTH, followed by HEIGHT, of whatever orientation you are interested in (i.e. 5 x 8 vs 8 x 5 in the case of our Shield). Third is to note the position of the PHYSICAL LED #0 (marked by the cute Adafruit logo). TOP-RIGHT, TOP-LEFT, BOTTOM-LEFT and BOTTOM-RIGHT as the case may be. Also note the orientation of the progression of the physical LEDS. The layout is PROGRESSIVE in our board (the next physical led after the end of one row starts at the beginning of the next row as indicated by the YELLOW line). The orientation of the progression is along the ROWS for when the width is broader (horizontal orientation) (as indicated by the short GREEN arrows), and COLUMNS with the width is narrower (vertical orientation) (again, as indicated by the short GREEN arrows). . These are illustrated by the 4 images below in the slideshow. The captions include the pertinent settings in each case!. . . In our example, we have 7 bands of frequency, and an 8 x 5 (or 5 x 8, depending on which way you look at it!) matrix. I chose to display the 7 bands along the 8 dimension (leaving one unused). I would then display the amplitude representation of each frequency band along the 5 dimension. In other words, I want my progression to be as follows: . . I want my origin to start at the lower left corner (representing the lowest level of the lowest frequency band) and work its way upwards. But since the first thing to note in the coordinate system is that [0, 0] always refers to TOP-LEFT, you should tilt your head to the left and look at the image below, to understand the choice of values for initializing the NeoMatrix! 😊(WIDTH = 5, HEIGHT = 8, TOP-RIGHT, COLUMNS PROGRESSIVE). . . Let's delve a little in the demo code pertaining to the NeoMatrix and graphing the frequencies. Firstly, we have determined that our NeoPixel has WIDTH=5, HEIGHT=8, and the orientation we like is TOP-RIGHT, and COLUMNS PROGRESSIVE. Follow the setup required for the matrix in the setup() function. . In the loop(), we read any Serial input to select the color scheme - I've defined 3 different color schemes. I then call Graph_Frequencies with that color scheme choice. Note also the first parameter that can select the range of frequencies to display (BASS, MID-RANGE or TREBLE). For now, I'm selecting all the ranges to show - it is left as an exercise to the reader to implement selection of ranges to display - either via Serial input or by including a momentary press button to toggle the display between BASS, MID_RANGE, TREBLE or ALL. The selection of the RANGE determines the ""from"" and ""to"" range of the rows to be displayed. . For each row (frequency band), we pick the larger of the two frequency magnitudes (right channel and left channel of the stereo input). That value lies between 0 and 1023 as we have already discussed. We need to map that into 5 distinct columns of the display, so we divide the frequency by the FREQ_DIV_FACTOR which is defined as 204 (1023/204 = 5, which will map an output of 1023 to 5). Just to be safe, we also make sure the numCol to display is not larger than 5. This determines the number of columns to display for each frequency band. . I then use matrix.drawPixel() to display the appropriate pixel at the appropriate color. . I use the HSV color wheel in my graphical display. This posed some extra wrinkles to overcome. . Typically, the usage is matrix.drawPixel(column, row, Color(r, g, b)), where Color(r, g, b) represents a color as specified by RED, GREEN and BLUE values. However, using HSV allows for some nice smooth color transitions. . NeoMatrix provides the matrix.ColorHSV(uint16_t hue) method that takes a single uint16_t hue value and returns a uint32_t HSV color. . However matrix.Color(r, g, b) returns a uint16_t color. matrix.drawPixel also expects a 16 bit color. . The way around this is to use matrix.setPassThruColor(32 bit color value). This sets a flag in matrix that causes drawPixel to ignore its color argument and instead use the 32 bit color already set by the above method. Just remember to call matrix.setPassThruColor() to reset the flag in question. Not super elegant, but it works. For example, . With HSV, it is possible to increment the 16 bit hue and generate the HSV color code, thereby getting nice smooth transitions in color. . Here are the different code pieces for reference: . Next is the color scheme selection. Note that I have made provisions to be able to select colors for different frequency ranges (bassHue, midHue, trebleHue). I have created 3 different color schemes - one that uses green to red/pink range for display from lowest amplitude to highest, and the other that uses a more pink/blue shifted range. The 3rd scheme uses the same color for all pixels, but cycles through the whole color wheel as it goes along. I'll show you a video of all 3 color schemes. . . . Here is a video of testing everything out . . . . . Install the top bracing elements, side walls, audio cables and top. See steps below in the slideshow - the caption for each image is numbered and gives additional explanation for each step.. . . . Here are all the steps in a single animated gif:. . . You can now have a fun audio visualizer that you can display alongside your music system and have some cool homemade light action augment your music!. . . Here are some ideas to take the project even further!. 1. Currently, the audio cables (input and output) are plugged into the Spectrum Shield in the enclosure, and thereby you have this enclosures with these wires connected and dangling outside. Instead, you can add a couple of panel mount stereo jacks (listed in the list of ""things"" used) to the side wall near the stereo jacks of the Spectrum Shield, and then solder an audio cable with a 3.5mm male stereo audio jack to each, and then plug those instead to the audio jacks of the Spectrum Shield. In this case, your enclosure becomes very neat and all the wiring is self-contained with only audio jacks on the enclosure for external systems to plug into. . 2. You can add more even more light schemes to your Audio Visualizer - different color ranges, different patterns. . 3. Add the option to enable/disable frequency ranges using the Serial input - currently only color schemes can be changed but not the frequency ranges to display. . 4. Add a switch to toggle between different color schemes instead of using Serial input. Modify the enclosure to add a hole to one of the long Side Walls to accommodate a panel mount momentary push button switch (listed in the list of ""things"" used). . 5. Add a second switch to toggle between different frequency ranges displayed (BASS, MID_RANGE, TREBLE, ALL) and mount that switch to the enclosure's side wall. . 6. Because the enclosure is made of acrylic, you can use some blue painter's tape over it to protect the surface, and a drill to drill a hole of the requisite side to mount the panel mount stereo jacks and/or switches. It is recommended to use a step drill, or start with a smaller hole and then expand the hole until it is of the size you desire. The stereo jacks listed need a mounting hole of 5/16"", and the Switches need a mounting hole of 0.47"".. 7. Sand the top surface of the top plate lightly and uniformly. This will act as a light diffuser and give you a more diffused and gentler light effect. . If there is sufficient interest, I will update the project to show it with the Audio Jacks and Switches and an Opaque light diffuser top - please send me a message if you would like to see the updated project! 😊. Can you think of any more? Write a comment below to let us know! 😊 Feel free to also ask any questions you may have! 😊. Happy making! 😊. . .",1
"Do you want to controls your TV, DVR and more using RaspberryPi?. Read up about this project on . Do you want to controls your TV, DVR and more using RaspberryPi?. In this chapter I will explain how can we control a TV or almost everything that uses an infrared remote control using Raspberry. This is part of my Home Automation project.. LIRC is a software that allows you to decode and send infra-red signals of many (but not all) commonly used remote controls. Thanks to Ar0n now we can use lirc with RaspberryPi.. But before that, we need to connect some parts that are capable to send and receive/decode IR signals.. If you want to send IR data then you will need a IR Led.. First install Lirc:. sudo apt-get install lirc. Then edit /etc/modules and add the following (if you use another GPIO pin then change the lines):. lirc_dev. lirc_rpi gpio_in_pin=23 gpio_out_pin=22. Edit /etc/lirc/hardware.conf and change it to:. LIRCD_ARGS=""--uinput"". LOAD_MODULES=true. DRIVER=""default"". DEVICE=""/dev/lirc0"". MODULES=""lirc_rpi"". LIRCD_CONF="""". LIRCMD_CONF="""". If you run an older 3.18 kernel change the /boot/config.txt file and add the following line: . dtoverlay=lirc-rpi,gpio_in_pin=23,gpio_out_pin=22. Reboot Raspberry Pi in order to apply changes.. Connect the IR Led. I used the following schema:. After you have installed and configured Lirc for RaspberryPi, the first thing to check is if your TV is in Lirc Database. In my case I am able to control: My LG TV, Microlab Audio system. For starting TV and then MUTE I created a small script:. #!/bin/bash. 	/usr/bin/irsend SEND_ONCE lg_tv KEY_POWER. 	sleep 10. 	/usr/bin/irsend SEND_ONCE lg_tv KEY_MUTE. Then I created in RController a new command. This way when I get home, I can turn on TV from my phone, dim lights and set an ambient atmosphere to enjoy my movie.. I created a small script that runs via cron on my RaspberryPi and checks if current time is past 7 PM and if I am at home (it will search for my phone by ping). If it is past 7PM and I am arriving home, it  will turn on lights and TV.. .",1
"How to make a cable that can connect your Arduino board to a TV RCA video jack. Put your Arduino on the big screen!. Read up about this project on . How to make a cable that can connect your Arduino board to a TV RCA video jack. Put your Arduino on the big screen!. Arduino with TV! Yup, it is possible only with two resistors. Let's see the video first:. Arduino boards are pretty useful, but lack an output screen. This project let you allow to write sketches that will output onto a TV screen via an AV Video cable. This is very much a beginner project that just about anyone can do!. First off, you need to add the resistors inline to some hookup wire, according to this diagram:. Your RCA cable will have 2 wires in it, a ground wire and a vid (Video) wire. Generally the vid (Video) wire is sheathed in plastic and the ground wire is not.. Depending on your setup and what you want to achieve (audio or video etc) refer to the following hookup guide:. I used heat-shrinkable tubing to make sure that everything was electrically insulated and to provide a little more strength in the solder joints:. You can then plug your new Arduino TV out cable into a TV or monitor and then plug the hookup wires to the Arduino.. Different Arduino boards have different setups with the Sync/Video, but you can rest assured that Ground will always go to the Arduino GND pin.. Step 1: Arduino-TVout Library . Download Arduino-TVout library.. Step 2: Install Library. Open Arduino and goto ""Sketch"" menu / ""Include Library"" / ""Add .ZIP Library..."" and select the library downloaded in Step 1. . Step 3: Compile & Upload Sketch. From ""File"" menu / ""Examples"" / ""Arduino-TVout"" and select ""DemoPAL"" and upload it.. Done!. Now, connect up the Arduino and give it a go!.",1
"Combine Arduino with Bluetooth and relay, and control your AC appliance with a smartphone app.. Read up about this project on . Combine Arduino with Bluetooth and relay, and control your AC appliance with a smartphone app.. I want to control my room ac appliances with my smartphone so I made this minimal setup which uses HC05 to trigger the relay.. watch the video for tutorial. . .",1
"An easy-to-build and low-cost water quality monitor.. Read up about this project on . An easy-to-build and low-cost water quality monitor.. After I saw TDS measure circuit I am thinking if it possible use few parts to complete measure. . Here I try as below.. See pictures and caption below.. Here I have one bottle clean water and one bottle non-pure water.. I collected three different data comparisons. 1. Gold plated pin is out of water. 2. Pin in clean water. 3. Pin in non-pure water. . When pin in clean water, data is. ""159, 434, 874, 601"". ""163, 433, 873, 600"". ""165, 436, 871, 598"". When pin in non-pure water data is. ""159, 462, 876, 566"". ""159, 465, 878, 564"". ""158, 463, 878, 565"". Here the 1st and 3rd are close at each sample, 2nd and 4th have 25~30 count gap.. It is exactly what I want ""can be used to distinguish water quality."". Next step I need a TDS meter as standard reference.. =================================================================. Today I increase the number of ADC sampling and use my home's 4 different water test again.. Bottle 1 is RO water.. Bottle 2 is groundwater.. Bottle 3 is tap water.. Bottle 4 is water outdoor.. Test video as below. it seems that RO water ADC value have very different with other.. I also add WiFi-web-server function to show data on explorer.. Here the sensorValue number mean. sensorValue0 port voltage is Low Low. sensorValue1 port voltage is Low High. sensorValue2 port voltage is High High. sensorValue3 port voltage is High Low. But since I change the pin the value order ( 2nd and 4th ) are not the same with first time test..",1
"My broken chicken coop door opener now has manual control and LED indicators so I can see from the house if the chickens are safe at night.. Read up about this project on . My broken chicken coop door opener now has manual control and LED indicators so I can see from the house if the chickens are safe at night.. After 12 months of use, the system is working flawlessly! On one or two occasions, something was blocking the door when closing but the system detected it and I saw the red LED blink fast so I could solve the problem (an obstruction under the door) easily.. I'm very glad with this Arduino solution!. With a minor change to the code, you can also use this project for a 'generic' Coop Door Opener system.. From the original VSB Coop Door Opener I only use the motor and switches. . One of my two (excellent) VSB chicken coop door openers was broken. This was caused by wood expanding due to moisture, preventing the door from opening.. If the door get jammed at closing, the motor simply stops but not so when opening! In that case the motor keeps on running for ever, destroying the Mosfet H-bridge chips I suspect.. So I sent an Email to AXT Electronics in Germany and they advised me to sent the unit for repair. But I decided not to spent the 60-80 euro's and first look if I could repair it myself.. So at first I stripped the plastic from the backside of the PCB to see if I could exchange some components. But later I decided to forget about the repair and to add an Arduino controller which is much more fun :). This way I could add manual control and some LED's with Fresnel lens holders to see from our home if the door was closed at night and open at daytime.. I used a 30 x 30 hole piece of stripboard to mount my home-brew Arduino clone, an Adafruit motor driver and some other components. . Be sure to use the right motor driver chip/board! Some do not work at certain motor voltages. This board did so I could use one 9V 100mA power supply, regulated to 5V for the Arduino and motor.. The motor driver PCB is removable by using some high quality female headers so if it burns up due to a jamming door (like the orginal VSB PCB), I can easily exchange it. But maybe this motor driver is protected so probably this was not necessary.. To connect the wires for the reed switches, the push buttons for the manual control and LED's I used male and (high quality) female headers. For the remote switch and light sensor I used some el cheapo chinese removable screw terminals.... Some other pictures of the build.... Dutch spoken but English subtitles available.... I use fishing line to lift the chicken coop door but because fishing line is so smooth, a normal flat knot can possibly slip so I use the Albright Knot.... . .",1
"How to make Arduino based Automatic Door Opening Using HC SR 04. Read up about this project on . How to make Arduino based Automatic Door Opening Using HC SR 04. The project concerns about automatic door opening and closing system. An automatic door control system includes a sensor for sensing person or object approaching door. Systems and methods are very common in the art for opening and closing doors to enter and exit buildings, facilities etc. Automatic doors are commonly found in retail stores, supermarkets, and the like.. The project generally relates to an automatic opening and closing of door which will sense person or object approaching door and open automatically. This system is controlled by Arduino micro controller. The system includes DC motor which makes door to slides during opening or closing by rack and pinion gearing, a LCD to display information state of door, an audio buzzer to make sound through the duration of opened door and a controller for controlling the opening and closing of the door as a person or object detected by sensor.. The whole system is mechatronic system which is designed using seven steps of mechatronic system design.. To starts making such mechatronic system following elements and tools are required.... . . . Gather all hardware required to assemble system. LCD and Piezo Buzzer is not a mandatory requirement of this system. These are added just only for Visual and Audio identification to user for status of door whether it is open or closed.. To starts making such mechatronic system following elements and
tools are required.... Materials -. 1. A computer to program instruction, must installed arduino IDE.. 2. Arduino controller ( Any of UNO, MEGA etc.) but i took low cost UNO R3 for learning purpose and making this project for my academic partial fulfillment.. ATMEL : ATmega328-PU. 3. HRSC04 Ultrasonic sensor (Used as proximity sensor to sens person or object arrived at door).. Ultrasonic ranging module HC - SR04 provides 2cm-400cm non-contact measurement function, the ranging accuracy can reach to 3mm. The modules includes ultrasonic transmitters, receiver and control circuit. The basic principle of work:. Using IO trigger for at least 10us high level signal. The Module automatically sends eight 40 kHz and detect whether there is a pulse signal back. IF the signal back, through high level , time of high output IO duration is the time from sending ultrasonic to returning. Test distance = (high level time X velocity of sound (340M/S) / 2. 4. 12V DC Motor. Load current: 70mA (250mA MAX) (3V pm). Operating voltage: 3V ~ 12V DC. Torque: 1.9 Kgf.cm. Speed without load: 170RMP (3V). Reduction ratio: 1:48. Weight : 30gm. No-load current = 60 mA,. Stall current = 700 mA. 5. LCD : 16 X 2 DOT MATRIX.. 6. Piezo Buzzer. 7. Motor Shield : L293D. The L293 and L293D devices are quadruple high current half-H drivers.. Reason to use Motor shield :. You can run motor directly connect to 9-12 V DC supply. The motor will draw current as much it requites from 12V DC supply. But In this project we have to control motor with program instruction so we have to connect motor through the arduino controller which output voltage and current is limited. So when you connect motor to arduino controller it it will draw more current at 5V. So there will be chances to burn controller.. To prevent micro-controller to burn, i used motor shield. which is simply acts as amplifier.. 8. Mechanical elements : To make a prototype i used plastic acrylic sheet and cut them into peaces to make a house type model having sliding door.. 9. Jumper Wires. 10 Power Supply. Tools-. 1. Multi-meter. 2. Soldering Iron. The tools are not required, but if you have then you will be good.. . Step 2: ​Arduino Program:-.. You can also down load attached .ino file and directly complie and upload.. . . . . Connects all hardware to arduino controller. The attached schematics are just for the reference only. You may use pins as per available at controller board.. The best way you can use my program for pin information. Also you raise me request to share.. . . Upload arduino sketch provided in this tutorial to controller.. Watch video to view working system..",1
"Arduino Uno and Visuino: GPS Location display with GPS and TFT Touchscreen Display Shields - Quick and Easy!. Read up about this project on . Arduino Uno and Visuino: GPS Location display with GPS and TFT Touchscreen Display Shields - Quick and Easy!. . Recently the great people from Makerfabs sent me an Arduino GPS Shield to support the Visuino development and allow me to make more Tutorials. I also wanted to make more tutorials with my ILI9341 TFT Touchscreen Display Shield, and I decided to make a Tutorial using the 2 shields together.. In this Tutorial, I will show you how easy it is, to connect the Shields to Arduino, and program it with Visuino to display GPS Location information on the Display.. After I posted this Tutorial, the great people form Makerfabs made a Special Combo containing all the components for this project! . Since the Arduino UNO has only one Serial port, and it is needed to program the Arduino, you will need to program the Arduino UNO before the GPS is connected.. To start programming the Arduino, you will need to have the Arduino IDE installed from here: http://www.arduino.cc/.. Make sure that you install 1.6.7 or higher, otherwise this tutorial will not work!. The Visuino: https://www.visuino.com also needs to be installed.. Next we need to add Graphics elements to display the Latitude, Longitude, and Altitude from the GPS:. To decode the GPS information from the GPS Shield, we need to add and connect a GPS component in Visuino:. Now that the Arduino UNO is programmed, we can install the shields.. The Maketfabs GPS Shield has jumpers that allow you to configure the pins used for serial communication with the GPS Chip (Picture 1). We will configure them to use the Hardware Serial on pins 0, and 1 of the Arduino UNO:. Plug the TFT Shield on top of the Arduino Uno as shown on the pictures.. Congratulations! You have completed the project.. Pictures 2, 3, 4 and 5 and the Video show the connected and powered up project. . Depending on the location, it can take up to few minutes to show the location data. If after few minutes the data is still not shown, power down the project wait about a minute and power it again to reset the GPS.. On Picture 1 you can see the complete Visuino diagram. You can download and open it in Visuino: https://www.visuino.com. If you don't have the necessary components, the great people form Makerfabs made a Special Combo containing all the components for this project! . .",1
"How to make projects more robust and reliable using drivers ULN2803, UDN2981 and PNP transistors.. Read up about this project on . How to make projects more robust and reliable using drivers ULN2803, UDN2981 and PNP transistors.. . In some situations using Arduino and microcontrollers, it is necessary to use a shift register such as the 74HC595 to directly trigger LEDs, LED arrays or displays, but if you check the datasheet, you will see that you need to be careful with the maximum current in each output and also with the total current so as not to damage any device.. This information is important for designing more reliable and robust solutions and this post will help you better apply some components such as the 74HC595, ULN2803, UDN2981 and transistors PNP.. . . . According to the datasheet of 74HC595, this component contain an 8-bit, serial-in, parallel-out that feeds an 8-bit D-type storage register.. This device is very popular for applications on LED arrays, for example, but my intention here is to just discuss your power consumption limit and not all of its functionality. . Its Maximum Ratings are:. What this means:. Due to these technical limitations it is necessary to apply other interface components to have a more robust and reliable design, protecting the components.. The ULN2803 is an array of Darlington transistors that can be charged 500 mA in a single output with voltage up to 50V. There are many applications for it, such as solenoids, relays, LED display drivers, and light bulbs, as well as inductive loads such as small motors. . Note that in the pin configuration you only find the GND but no Vs pin. At first glance, it is strange because we hope to see both pins! In fact, you do not need any specific Vs pin because the ULN2803 is used as a drain for the current. . When you apply a signal to an input port, the corresponding output port will be able to drain the current from a positive source. . You can see an example of this in the schematic shown in the attached image. Note that the LEDs are connected in a common anode configuration and the ULN2803 is used to drain the current at its output ports according to the input signals driven by the 74HC595. . In this case, you can drain up to 500 mA at each output port and keep the 74HC595 in safe working condition.. The UDN2981 is an 8-channel source drivers.. It is similar to the ULN2803 but with an opposite function and you can use it as an interface between 74HC595 and a device that needs a higher current supply for the job. Typical applications include: relays, solenoids, lamps, step motors, servos and LEDs. . UDN2981 can also work with 500 mA (Output Source Current Capacity) up to 80V. Note that in this case you have the Vs and GND pins because you must be connected to the power supply. Now, when you apply a signal to an input port, the corresponding output port will be able to provide a higher current to the next device. . You can see an example in the schematic shown in the attached image. Note that the LEDs are connected in the common cathode configuration and the UDN2981 is used to supply the current at its output ports according to the input signals driven by the 74HC595. Again, in this case, you can drain a larger current at the output ports and keep the 74HC595 in safe working condition. . In the datasheet, you can also find interesting information about the duty cycle versus the output current.. The attached chart shows the number of outputs simultaneously, and if you consider a 50% duty cycle with 8 outputs, the maximum recommended output current is about 220 mA. . In the same configuration, if the duty cycle is increased to 100%, the recommended output current will be 120 mA and, of course, the current can be higher if you decrease the number of outgoing ports that are being used.. This shows us how important it is to consider the number of outputs you run simultaneously; the duty cycle you are using in your application (e.g., the LED refresh rate) and the maximum current supported by the devices.. As example, the amplifier PNP silicon bipolar transistor BC327 can work with collector currents up to 800 mA (maximum ratings) and up to 45V. . In some applications this transistor can be used as switch for higher currents, e.g., LED actuation, in place of UDN2981.. Note: BC327 is shown here as an example, but of course there are many other equivalent transistors for this type of application. . Pros. Cons. . To work properly as a switch, the PNP transistor must be in the saturation region and you can calculate the resistor of its base as follows: . For example, if you need to direct a current of 160 mA to the collector and the gain of the transistor is 100, this means that the current required at the base is only 1.6 mA. . Rb = (5 - 1.2) / 0.0016 = 2.4 K (Ohms). Note: The hFE gain of the transistors produced can vary within a specified range according to the datasheet and due this you should test some resistors with values close to the calculated one. . This presentation shows some ways to improve the robustness and reliability of some devices by preventing them from working beyond design limits. . In the next photos you can see a project of mine where I applied all these concepts.. .",1
"Use an Arduino NeoPixel matrix to create a simple 1 player pong game!. Read up about this project on . Use an Arduino NeoPixel matrix to create a simple 1 player pong game!. No, not the movie, the NeoPixel matrix! To make a matrix, just buy one strip of individually addressable NeoPixel LEDs. Uncoil the strip, and take note of the arrows on it. You can only attach them in ONE DIRECTION, you could ruin them if the orientation is wrong. . I used a 30 led/m 5m strip and cut them into strips of ten LEDs each. I then started laying down the strips on a piece of cardstock, alternating orientations. I then cut wires to the correct lengths and soldered them to the NeoPixel terminals. After doing that 14 times, my matrix was finally done! Next, I checked with a multimeter to ensure that there were no short-circuits, as a short-circuit will fry the Nano, the matrix, and maybe your USB port (I know from experience). Upload the neomatrix test sketch with the ""NEO_BOTTOM + NEO_LEFT + NEO_COLUMNS + NEO_ZIGZAG"" parameters. If it scroll ""howdy"" across the display, you're done with the display part!. A pong game has several objects: the paddle, walls, and the ball. The code has ball X and ball Y variables, which keep track of the ball's position. The ball's direction is handled by either a 1 or -1 being assigned to the direction variables. The paddle is a rectangle that is controlled via a potentiometer being mapped to 0 through 15. The paddle's Y won't change, so a variable for mapping it isn't needed. At the start of a game, the ball starts at 1,1 and the player must allow the ball to bounce once to begin. The physics take into account the ball's direction and where it hit on the paddle. . Now, just hook up the NeoPixel matrix your Arduino Nano, the +5V on the joystick to 5v, the GND to Arduino GND, and finally the X axis to A0. Have fun with your new pong game! Try adding more players and better physics for a challenge!. .",1
Leds activated by a PIR module. Placed under the bed it's quite effective . This device assists people waking up night-time.. Read up about this project on . Leds activated by a PIR module. Placed under the bed it's quite effective . This device assists people waking up night-time.. . I have developed this project mainly for fun. It has a useful purpose too: help those who wake up night time to see things around them with a soft and filling light. Who needs to go to the bathroom or any other home-room can successfully use my device. For my own one I implemented blue LEDs but you can choose any color on your own! Have fun! . . . .,1
"This tutorial shows how to control some servomotors remotely in a Wi-Fi network, using an ordinary internet browser.. Read up about this project on . This tutorial shows how to control some servomotors remotely in a Wi-Fi network, using an ordinary internet browser.. . This project shows how to control some servomotors remotely in a Wi-Fi network, using an ordinary internet browser (Firefox, for instance). This might be used in several applications: toys, robots, drones, camera pan/tilt, etc.. The motors were attached to an Arduino Uno, which connects the Wi-Fi network through a ESP-8266 module. The control interface was designed with HTML and jQuery.. Miguel's tutorial (http://allaboutee.com/2015/01/02/esp8266-arduino-led-control-from-webpage/), which shows how to turn LEDs on/off using ESP-8266, served as inspiration for this post.. The technique shown here is used in one of my projects: ""Robô da Alegria"". You might found more about this in one of the following links:. https://hackaday.io/project/12873-rob-da-alegria-joy-robot. https://www.facebook.com/robodaalegria/. https://github.com/ferauche/RoboAlegria. For this project you'll need the following components:. You won't need specific tools for the assembly of this project. All the components can be found online on your favorite e-commerce store. The circuit is powered by the USB port (connected to a computer or a ordinary phone charger), but you may also add an external DC power supply or a battery connected to the Arduino power jack.. Connect all components according to the schematic. You'll need some jumper wires to connect the ESP-8266 module and the servomotors. You might use a proto-shield (for a more compact circuit), an ordinary breadboard, or design you own Arduino shield.. Plug the USB cable to the Arduino Uno board and proceed to the next step.. Install the latest Arduino IDE. In this project servo.h library was used for the control of the servos. In order to avoid conflict between the Wi-Fi module and computer's USB port during the upload of the code, softserial library was used. No additional library was needed for communication with ESP-8266 module. Please check the baud rate of your ESP8266 and set it properly in the code.. Some servomotors start to jitter and make strange noises when its position is close to the limits (0 and 180 degrees). To avoid that, the angle was limited between 10 and 170 degrees both in the Arduino code and in the control interface (later).. Unfortunately, servo.h library and softserial.h library use the same timer of the microcontroller. This might cause jitter in the servos whenever the Arduino communicates with the ESP-8266. To avoid that, the servos are detached from the Arduino after each command. You might also connect the module to the standard serial pins. In this case, remember to disconnect the module before each upload.. Download Arduino code (wi-servo.ino) and replace the XXXXX by your Wi-Fi router SSID and YYYYY by router password. Connect the Arduino board to your computer USB port and upload the code.. An HTML interface was designed for the control of the servomotors. In this example, two servos were used, but more can be added to the Arduino Uno (I tested up to four motors).. A textbox form is used to enter IP address of the ESP module. Download Wi-servo.html and jquery.js files and save both in the same folder.. When the Arduino is restarted, it will try to connect your Wi-Fi network automatically. Use the Serial Monitor to check if the connection was successful, and to obtain which IP was assigned to your ESP-8266 by your router.. Open the html file in an internet browser (Firefox).. Inform the IP address of your ESP-8266 in the textbox and you'll be ready to go. Select the angle desired for each servo using the sliders. The browser will automatically send a request to the Arduino when you release mouse button, and move each servo..",1
"Sending sun light indoor with tracking mirror during day, logging lux level on the Cloud, BLE app controlled LED lamp for nighttime lighting. Read up about this project on . Sending sun light indoor with tracking mirror during day, logging lux level on the Cloud, BLE app controlled LED lamp for nighttime lighting. This project is a miniature prototype application for active sunlight harvesting with tracking mirror. This is not a replacement for solar panel and battery storage but it has its niche applications. For example: lighting up a greenhouse in Arctic regions or sending natural light to the center part of a large house that has no windows. I am using RSL10 Sense development board as hardware and Atmosphere IoT for development of firmware, mobile app and cloud dashboard. RSL10 is an ultra low power BLE microcontroller for sensor and IoT applications. The development board is equipped with all kinds of environment sensors for prototyping and testing different applications ideas.. The solution will have following features :-. The first demo shows how the mirror is trying to reflect sunlight near the RSL10-SENSE-DB-GEVK board. RSL10 uses the on-board Ambient Light Sensor NOA1305 to detect illuminance level.. The custom BLE app shown above can control external White LED lamp.. Here is another demo of the tracking mirror operation -. Here is a quick overview of all the hardware for this project:-. The CR2032 was running out during flashing/debugging. So I did some modifications like this to power the board from 2x AAA batteries. Also connected some bright White LEDs for controlling from BLE app.. The biggest problem was just 1 GPIO exposed, which connects to Arduino Uno for motors control. So, I did this via hack for another GPIO pin to drive the external LEDs.. A mirror is mounted with pan-tilt frame, 1 stepper motor, 1 servo motor on a breadboard holder plastic base. Self tapper screws and hot glue puts these together.. The firmware running on RSL10 mcu works like this:-. -----------------------------------------------------------------------------------------------------------. Atmosphere IoT is an all in one embedded firmware, mobile app and cloud storage & dashboard solution. RSL10 SENSE board is officially supported by Atmosphere IoT and browser based IDE (Atmosphere Studio) enables creation of IoT projects very easy.. Setup Configuration. Before programming the RSL10-SENSE board, following setup configuration must be completed :-. Pin Mapping. All the sensors are connected to RSL10 with I2C bus and few GPIO pins are connected to RGB LEDs, user buttons and an extra GPIO pin available for interfacing with external hardware.. The best part about developing a BLE/IoT solution for RSL10 with Atmosphere IoT is the ease of integration of complex parts like mobile app and cloud connectivity with little effort.. These are drag and drop c code block as visual icons called elements. Which only requires little configuration for doing things like reading sensors periodically or flipping a GPIO or sending sensor data over BLE to mobile app.. There are 3 tabs/parts to develop a complete solution, first part is the firmware part. Where sensor elements and interval (timer) elements can read sensor data. Data flows from one element to the next element, like one function passing a value to another function. One element can also trigger an action to the following element. BLE element connects the hardware to the mobile app and it can transfer both command and data back and forth between hardware and app.. Elements are dragged from the ""Element Toolbox"" to the development canvas by clicking on the white background.. Each element has its little configuration box called properties, which is accessible by clicking on each element. Most of the time default configuration works. The important part is to make sure the right data types like float, unsigned integer otherwise no data will go to app.. If you need to write your own c code, you can always use function element, use global variables to pass values and do what needs to be done.. Next tab is the BLE app development tab. Where the app layout, app inputs (buttons/sliders/dials) and outputs (label) etc can be configured. BLE element created from firmware tab will have an exact copy. This element will fetch data sent from hardware and pass it to the app and cloud with the help of other elements.. Sensor data sent from BLE app to cloud over Wifi or Cellular will be stored to the cloud storage if needed. This part is configured on the Cloud tab. Data stored to the cloud will be available for viewing for dashboard. If needed, data can be sent to other web services like AWS too. These things are configured here :-. Once the setup is completed and the firmware is compiled, the RSL10-SENSE-GEVK is ready to be programmed/flashed.. The Arduino uno is programmed with Arduino IDE. The code is attached below in the code section is copied to Arduino IDE, appropriate board and serial port is selected, then code is compiled and uploaded.. Finally both the stepper motor and servo motor is connected according to the schematic attached in the schematic section.. Following video shows how to configure the BLE app :-. Sensor data from RSL10 board can be stored on Atmosphere Cloud storage. The Dashboard helps visualization of latest data and historical data in different configurable widgets like gauge/graph/glance/table etc.. Free developer accounts can store up to 10MB data. It may not sound much but 10 MB cloud storage equals to little more than 10000 individual data points. So, increasing data storage intervals to few minutes can provide few weeks worth of logging on the cloud. Sensor data can be downloaded or deleted to add new data.. This is how the BLE app looks like:-. Some images and logos to fill the app background, a light meter and a push button to control LED.. The app mainly does 3 things:. More details is added below about how the app is 'developed' and a video about how to use it !. Getting Started with RSL10 . https://atmosphereiot.com/blog/on-rsl10-support/. Here is the official tutorial from Atmosphere IoT team :-. This project didn't end up exactly the way I wanted to build it. Having only one exposed GPIO pin on RSL10 board was a bummer, that's why I had to use another microcontroller to control the stepper-servo mirror reflector. My ideal version of solution will utilize 2 RSL10 boards, one will connect to the app and cloud, other will connect to the first one over BLE which will control the reflector mirror. This project is a low cost basic prototype only. Development of a real solution will need Cloud Coverage Sensor, GPS, RTC and Compass data for optimum tracking and reflection of sunlight..",1
"Using two LDRs to get intensities in two direction and then comparing those intensities will rotate the servo motor.. Read up about this project on . Using two LDRs to get intensities in two direction and then comparing those intensities will rotate the servo motor.. NodeMCU based project : Rotating Solar Panel . In this project, we will see a simple Sun Tracking Solar Panel circuit which will track the Sun and position the solar panels accordingly.. As the non renewable energy resources are decreasing, use of renewable resources for producing electricity is increasing. Solar panels are becoming more popular day by day.. Solar panel absorbs the energy from the Sun, converts it into electrical energy and stores the energy in a battery.. This energy can be utilized when required or can be used as a direct alternative to the grid supply. Utilization of the energy stored in batteries is mentioned in below given applications.. The position of the Sun with respect to the solar panel is not fixed due to the rotation of the Earth. For an efficient usage of the solar energy, the Solar panels should absorb energy to a maximum extent.. This can be done only if the panels are continuously placed towards the direction of the Sun. So, solar panel should continuously rotate in the direction of Sun. This article describes about circuit that rotates solar panel.. The Sun tracking solar panel consists of two LDRs, solar panel and a servo motor and NodeMCU.. Two light dependent resistors are arranged on the edges of the solar panel. Light dependent resistors produce low resistance when light falls on them. The servo motor connected to the panel rotates the panel in the direction of Sun. Panel is arranged in such a way that light on two LDRs is compared and panel is rotated towards LDR which have high intensity i.e. low resistance compared to other. Servo motor rotates the panel at certain angle.. When the intensity of the light falling on right LDR is more, panel slowly moves towards right and if intensity on the left LDR is more, panel slowly moves towards left. In the noon time, Sun is ahead and intensity of light on both the panels is same. In such cases, panel is constant and there is no rotation.. before starting make sure, you have. 1. installed the arduino ide in your system (and check for com port for nodeMCU). 2. register yourself at http://thingsai.io/. 3. create and configure a new project. Setting Up Cloud Account on ThingsIO.AI. ThingsIO.AI is a IoT platform for developers. As a developer we understood the pain of not having a seamless place to connect, analyze and process device data. Many pure analytics platforms does not offer device management, which is core for the iot. That is the reason for ThingsIO.AI.. Some basic points(1-5) for analysing data on ThingsIO.AI. 1. Track your device’s special parameters here. This can be set in device configuration(default to null).. 2. You can see your real time and special parameter’s graph.. 3. You can see your all data points.. 4. You can see here your last 5 data points.. 5. You can see here all the list of created graphs.. Click on the “Send trial data” to send a trial data to the server:. make connections as instructed in schematic diagram for LDR and relay to nodeMCU. which is again shown below,. . . after making the proper connections, dump your program to nodemcu, which is illustrated here,. . . Go to your ThingsIO.AI account and go to your device ->. Click on the configuration device option:. https://app.thingsai.io/#/device/all-devices/61121696057 . here you can see the visualization for this project.. Thank you for taking your time to read my work. I hope you enjoy it as I enjoy making it and documenting it to show and tell to other fellow makers here.. .",1
"A programmable, portable, rechargeable power supply based on Arduino featuring an OLED display for viewing V.I.P. of projects/prototypes. . Read up about this project on . A programmable, portable, rechargeable power supply based on Arduino featuring an OLED display for viewing V.I.P. of projects/prototypes. . As hobbyist people, we frequently need to power our prototypes, check voltage, current, power limits of our projects, test a newly bought component. The need of a variable power supply is always there in this line of work. But unfortunately, not all of us have bench/lab power supplies. It's also expensive if bought, bulky if needed to carry. I was looking for a programmable power supply at a lower cost, with portability and productivity for powering my prototypes and testing components. So, I decided to make one.. It has the following features:. And most versatile power supply for low power electronics projects.. Check out this video demonstrating the device operation:. The device has following specification:. Please note that this device is a quick prototype. It is possible to make 0-30, even Negative Supply and more Output Current by using high capacity batteries, additional electronics and upgraded design.. The design itself is hardware intensive. Lots of stuffs happening here. A crude block diagram of the system is something like this:. Source of power is the 3.7 V Li-Po Battery which is USB rechargeable. Using a XL6009 DC-DC boost module first we make 15.6 volts from the Li-Po. To run the MCU we also make a 5 Volt using 7805 Regulator.. The Arduino UNO clone Atmega328P is connected with 2 Interrupt based User Input Switch, an Elegant OLED Output Display. Rx/Tx/DTR firmware (sketch) upload port through USB/Serial from PC. (module 1). The Heart of the project is the MCP4131 Digital Potentiometer (Digipot) + LM 358 OpAmp based Step Voltage Generator. This voltage is the Control Voltage of LM317 Adjustable Regulator. (module 2). Digipot is controlled from the Arduino through Pseudo-SPI like command. LM317 is designed such a way that the Output Pin Voltage is always 1.25 Volts higher than the Adjust Pin Voltage provided that the INPUT Pin's Voltage is high enough (here 15.6 volts). (module 3). The step voltage is fed to the Adjust Pin to create variable Output from the Arduino as needed by the User.. The ADC measures all the voltages associated with supervision and protection; battery voltage, boosted voltage, charging sense voltage and output voltage are conditioned through voltage divider network for feeding the ADC range, which is 0-1.1 volts here. I have used the INTERNAL REFERENCE of Arduino which creates an reference voltage of 1.1 volts.. For the current sensing, the return (Load Gnd) from the Output Load is connected in series with 1 Ohms Current Sense Resistor to the System Gnd. When current flows through the external loads, there is also a voltage drop in this sense resistor. This voltage is amplified through OP07 Precision Operation Amplifier and fed to one of the ADC pin.. Lastly, for the battery charging, 5 volts from the USB is connected in series with a 4007 diode and a 5 ohms current limiting resistor to the Li-Po Battery. This is a crude charging method, not the best for Li-Po charging.. Operation Summery: The MCP4131 Digital Potentiometer creates step voltages with in 0-5 Volts range in step of about 40mV (7-bit 10K Digipot has 129 steps 5V/128 = 0.40 mV), which is then 2.5 times amplified by the LM358 that gives 0-12.5 volts control voltage range with steps of 0.1 volt. This amplified step voltage signal is fed to the Adjust Pin of LM317. LM317 generates an output voltage of V_Step+1.25 Volts which is supplied to the external loads. The return/ground of the external load is connected to the internal ground through 1 Ohms Current Sense resistor. Suppose: x mA current is flowing to external load, it will create x mV drop (Ohms Law V=I*R) on the 1 Ohms Current Sense Resistor. This small voltage signal is fed to Low Offset (10uV) OpAmp OP07 configured with 2.5X gain, which will generate 2.5x mV Output. The Arduino ADC is configured with 1.1 Volts internal reference so that voltages form 0 -1100 mV can be sensed in step of about 1mV (1100/1023). Output of OP07 is connected to Arduino ADC for current sensing. This is why the current limit is 400mA. It can be increased/reduced by changing the gain of OP07. Similarly output voltage range can be changed by changing the boost voltage & gain of LM358. Other voltages are measured with resistive voltage divider network attenuating voltages to fit the ADC Range. The latch relay has 2 coils. By applying momentary power to any of the coil, relay contacts can be switched. Once switched it remains there, so the coil is powered off immediately.. First we start with a single switch socket box, and make necessary cuts and alignments for placing the battery, USB charging port, power switch, etc.. Next, heat sink is made with copper tape and coin for the DC-DC boost module.. The boost module is placed inside the socket box:. Using the above parts, the following 3 modules are made:. Finally the spider web connections among all the boards are connected and soldered.. After using the hot glue as a filler, finally we have it:. The firmware (Arduino Sketch) is right now 1.0.2 Beta. Not all features are available right now. But most important features like controlling voltage, connecting/disconnection relay, viewing information are enabled. In the void setup() there are few initialization functions to warm up the Arduino pins associated to different external hardware.. INPUT: There are 2 interrupt-based input button for increasing/decreasing output voltage, access menu (not available on this version). INT0 & INT1 on Arduino Pin 2 and 3 are coded for FALLING EDGE INTERRUPT. You will see 2 capacitors in parallel with mechanical switches for de-bouncing. Code is written to trigger interrupts when user presses these switches to turn on/off output through relay or increase/decrease voltage (Beta).. OUTPUT: The 1306 OLED shows output information acquiring data from ADC, internal timer (for device up time) and flag variables to inform user about Output enable/disable status. Based on U8G library the OLED prints info as text and numerical. I have plans for using graphical (Analog type) representation.. 5 digital pins of SSD1306 (OLED from Waveshare) clk,din,cs,d/c,res are connected to Arduino 10, 9, 11, 13, 12 pins and programmed accordingly. In the main loop update_display() function is called every time to update the info on the OLED.. Internal Timer 1 of Atmega328P in configured to periodically trigger every 1 sec to keep track of time.. CONTROL: The MCP 4131 Digital Potentiometer is controller with increment_digipot() & decrement_digipot() functions where data is shifted out with proper clocking and delay using Pin 6, 7, 8 as CS, Clk, Data Pins. It's like slow soft SPI. Since I have already used up Hardware SPI pins somewhere else, this was the only solution then.. Two digital pins 4 & 5 are used to control the latching relay. A short high pulse is fed to the relay driving transistors to energize the 2 coils to flip the relay. It happens both automatically (during overload/short circuit) or manually by the user .. ADC: The calc_VI() function in the main loop performs analogRead to get 20 times averaged Voltage and Current information and updated the variable for new information which is then printed on the display. The sketch is written in multiple tabs to organize code for different functions associated to different operations. There are ADC, Digipot, Display_Fn, Interrupt, Relay and Timer tabs arranging all the user defined functions. I will try too add more comments explaining all the functions, but you should not find it hard to understand because those functions are based on multiple Arduino functions doing certain tasks.. There are some serious limitations of this device:. . You can learn more about each components in these tutorials:. This programmable power supply will help me to make projects/prototypes more efficiently. Measurement of voltage current power without using multimeter.. .",1
"Universal Windows App that connects to an embedded Bluetooth device over the Bluetooth Serial Profile using a generic Bluetooth USB dongle.. Read up about this project on . Universal Windows App that connects to an embedded Bluetooth device over the Bluetooth Serial Profile using a generic Bluetooth USB dongle.. This project is discussed in detail in embedded101.com:. ""Win 10 IoT-Core: Bluetooth Universal Windows Serial App"". This project is a Universal Windows App that connects an IoT-Core device such as a Raspberry PI 2 to an embedded Bluetooth device over the Bluetooth Serial Profile using a genetic Bluetooth USB dongle. . .Bluetooth supports peer to peer networking over a short range. Unlike a Wi-Fi network, Bluetooth connectivity is one to one. Two devices can connect and interact. For example, two devices may connect in a symmetric manner using the serial profile and pas raw data between them. Generally though, Bluetooth connectivity is asymmetric with one end generating a specific data format to be consumed at the other end. For example a mobile phone can implement the A2DP (Advanced Audio Distribution Profile) Profile and stream audio to a head set that implements the HSP (Headset) Profile OBEX (Object Exchange) is a symmetric connection between two devices as they exchange data between them.. . The Microsoft IOT-Core Bluetooth Sample project uses the GATT (Generic Attribute Profile Profile). This provides profile discovery and description services for the Bluetooth Low Energy protocol. With this protocol simple low power devices can be connected at one end generating data to be consumed by a complex processor.. This is a far simpler project than the Microsoft sample. It is only concerned with the more generic SPP (Serial Port Profile) which is based upon the RFCOMM profile. It was developed with a very old USB Bluetooth dongle and so should work with any Bluetooth dongle.. This app is a simple Bluetooth Serial Universal Windows (Windows 10) test app. It starts by enumerating (as a list) all devices Bluetooth paired to the device where the app is running. One is selected by double clicking which initiates connection. Text to send is entered in a Textbox and sent when a button is pressed. The app automatically receives any text sent to it ( and displays it). Hence when the endpoint (as above) simply echoes the text its received, the sent text should reappear in the reception box on the UW app.. . For testing an Arduino Uno with a Bluetooth adapter is used. It has a simple shield that just echoes back any characters its receives over the Bluetooth connection:. The Shield Setup:. The Shield Loop:. Bluetooth is a peer to peer scenario. Before they can connect over Bluetooth they must be paired. This is not done within the app. Pairing with a passkey can be problematic between embedded devices as they are often headless and may not support popups (as IoT-Core does not). There is a IoT-Core web portal for doing this as well as a command line utility on the device that can be run over an SSH shell. The most recent version of the OS web portal  supports passkey pairing which was missing around the time of Windows 10 RTM. ""Win 10 IoT-Core: Bluetooth Universal Windows Serial App"" discusses pairing in this context in detail.. The app project is created using in Visual Studio 2015 using the  Universal Windows app template: . New Project-->Visual C#->Windows->Blank App (Universal Windows). The UI is implemented in XAML. Create the UI as per the layout as above (or similar):. The UI is quite straight forward and is created as follows: . You may prefer to layout the UI using Relative StackPanels or use Grid rows and columns etc.. The ConnectDevices is a ListBox with a Binding Source set to PairedDevices(see later) and an ItemTemplate consisting of a TextBlock bound to the Name property of PairedDevices (see later). . Modify the capabilities section (at the bottom) to:. The internetClient capability will already be there. Its not needed for this app so you may wish to remove it. I leave it in.. At the app start the paired devices are enumerated using:. DeviceInformationCollection DeviceInfoCollection . = await DeviceInformation.FindAllAsync(RfcommDeviceService.GetDeviceSelector(RfcommServiceId.SerialPort));. This collection is then turned into an ObservableCollection that it can be used in the ListBox:. _pairedDevices = new ObservableCollection<PairedDeviceInfo>();. The DeviceInfoCollection is iterated through creating a PairedDeviceInfo object for each item which is then added to the _pairedDevices collection.. . PairedDeviceInfo is a class with properties:. Name <string>. Id <string>. DeviceInfo <DeviceInformation>. The class has an appropriate constructor.. DeviceInformation is Windows.Devices.Enumeration.DeviceInformation . In the listbox of paired devices, the Name field is (bound) displayed.. When a device is selected (double clicked) the endpoint’s DeviceInformation is actually part of the selected menu item and so is used for establishing the  connection.. The DeviceInformation is used to get the RFCOMM service. The connection is then established as a StreamSocket using the Endpoint HostName (actually its Bluetooth Mac Address) and the ServiceName string.. If all is well then we have a connection .. the socket will be meaningful (not null).. Of course this is error trapped (try-catch). Send text and Receive text make use of the socket’s InputStream and OutputStream properties.. . Receiving text should be started first as it runs as a separate thread. It runs an async wait to get serial input, handles the input then runs another async serial receive .. all in a loop. This loops continuous until a cancellation is generated.. . . Whilst the received text is performed asynchronously as the arrival of text is nondeterministic from the app’s perspective, sent text is actioned from the app’s UI and so is essentially synchronous (although a await is used to free up the UI).. The command buttons are enabled and disabled depending upon the state of the app. For example Send and Start Recv buttons are disabled when the app isn’t connected but become enabled when the app is connected, etc..",1
"Ever wanted to add voice control to RoboSapien. How about connect it to Amazon Echo. I can say, 'Alexa, tell RoboSapien to do the Nae Nae'.. Read up about this project on . Ever wanted to add voice control to RoboSapien. How about connect it to Amazon Echo. I can say, 'Alexa, tell RoboSapien to do the Nae Nae'.. I wanted to add voice control to RoboSapien. At first, I was thinking, just create an app on the phone, but that's been done before! Then I saw the Amazon IOT Challenge. How about make an IOT Robosapien. The next generation - Internet of Toys! Connect RoboSapien to the Internet. That would be Awesome, don't you think?. . . That's what I did; I started looking into the Amazon IOT service, try their sample apps. Very interesting indeed. I like the way they presented the diagram. Here's what I want to do.... Replace RGB controller with Amazon Echo, Replace the LightBulb with RoboSapien... Amazon Echo sends the command, RoboSapien follows. That's it. . If you enjoy this project and want to see more, please add respect and follow me. . Amazon Echo ... echo ... echo ... Last year, I started looking at Amazon Echo. I got one because I attended a hackathon and worked on an Amazon Echo. It was my first introduction to the AWS Lambda, and I was hooked. I like the idea where I can focus on my code and not the infrastructure.. WowWee RoboSapien. I've always liked the RoboSapien, I'm amazed on it's engineering and it's capabilities. Last year also, I started to research how to expand it's capabilities. I have RoboSapien X which doesn't have any bluetooth capabilities. It communicates through it's IR Remote but they gave you this dongle to connect it to your phone so you can use the app. I found out that there's a way to control the robot by playing WAV files. I saw it on WowWeeLabs github page. Here's the link. https://github.com/WowWeeLabs/RoboRemote-IR-Dongle-SDK. So I downloaded the WAV files and started playing it on my phone connected with IR Dongle to audio jack. The RoboSapien is ALIVE!. That brings me to an idea. What if I can connect it to a Raspberry Pi? Raspberry Pi has Audio jack, then I can attach it to the back of the RoboSapien. That's great news! No more heart bypass operation for the poor Robot. No soldering!. . Back to Amazon IOT.. Here's a good tutorial how to connect AWS IOT to Raspberry Pi. https://github.com/sreid/aws-iot-raspberry-pi-how-to . . The sample app is very helpful. Here's the link. https://github.com/aws/aws-iot-device-sdk-js . I patterned my code with this thing example. https://github.com/aws/aws-iot-device-sdk-js/blob/master/examples/thing-example.js . . At first, I tried running the example on my laptop. I opened two shell window, one is acting as mobile app (value updater), the other acting as a device (update receiver). it worked! Send update RGB colors from one window, the other receives the updates. . Now I tried it on the Raspberry Pi with a Wifi connection.. It also worked!. The idea is, instead of RGB colors, how about send COMMANDS like Walk, High Five, Dance, etc... etc... . Then once the Command is received from Amazon IOT thru the ""delta"" event, play the correct WAV files.. . Playing WAV files on Raspberry Pi in NodeJS.. I am new to NodeJS, I was able to update node on my raspberry pi with this link. . https://github.com/rwaldron/johnny-five/wiki/Getting-started-with-Raspberry-Pi-node-red-and-IoT. I looked at some npm packages to play WAV files on raspberry pi, I am familiar with CylonJS. So I followed instructions on how to install CylonJS audio module.. http://cylonjs.com/documentation/platforms/audio/ . you have to install mpg123. CylonJS-Audio only plays mp3, so I had to convert all the WAV files to MP3. I used Lame. . to convert all mp3, I used this command.. . for f in *.wav; do lame -V 1 ""$f"" ""${f%.wav}.mp3""; done. . . Here's the sample code on how I played MP3 in NodeJS. . I connected the RoboSapien dongle to Raspberry Pi audio jack. I played the mp3, and it worked! Woohoo! I actually did High Five RoboSapien..  . Echo Thingy. Connecting Amazon Echo to Amazon IOT. . I couldn't find any sample code out there that connected Amazon Echo to Amazon IOT. Most of the examples are just connecting amazon Echo to a website. That's not going to work. I need to send MQTT messages to Amazon IOT.. At first, I tried going thru their sample app.. https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/developing-an-alexa-skill-as-a-lambda-function . then I modified it to use these schemas. . I added LIST_OF_COMMANDS. Then added Sample Utterances. . Ok, now that I have the commands set up in Alexa Skills Set. I followed the AWS Lambda instructions. I started playing with the  alexa-skills-kit-color-expert sample javascript code. I was able to test the utterances and the intent and receive the command, but how do I send it to Amazon IOT. . alexa-skills-kit-color-expert code and the thing-examples.js. At the end of the day, when I receive an intent, I need to connect to the thingymajigger. but the thingymajigger requires aws-iot-device-sdk library. How do I put things together?. I found out you can upload a zip file of all the stuff you need. OK, I zipped up the js file together with node_modules and certs. Then run it.. I got error left and right, up and down. It's complaining about certificates. I took it as a good sign because It's running index.js, that's a start.. I was stumped, don't know what to do, it's complaining that it can't read the certificates. AWS Lambda can't read a text file, it's a permissions thing. A-ha, so I copied the contents of the file and shove it into a variable.. At first, I wasn't including the BEGIN and END tags to the file, so I was getting frustrated. I looked at RoboSapien, he's dead. Battery's dead. I mean. Need to change batteries.. Then I realized, I need to include the BEGIN Key and END Key.. So I did all that to all the certs. I assigned the contents to a variable, instead of reading it from a file.. . That seemed to work. I used this test message to AWS Lambda. . I got this in the log. The most important thing is it connected to the thingymajigger. Cool! Then I looked at my device shadow, I got the value I expected!. Now What?. Next thing is to make the project in raspberry pi to receive messages from AWS IOT. I just reused the same template just to test if I'm going to receive data from Amazon Echo. . https://github.com/aws/aws-iot-device-sdk-js/blob/master/examples/thing-example.js . Wait for it... Wait for it... then got this message. I got the WALK command. I felt like walking in the clouds. . . That Cylon Thing.. Next stop, combining the thing-example.js code with cylon-audio js sample code.. Here's my idea. When I receive a Delta event, play the corresponding mp3 command, then acknowledge the command by sending ""NONE"" command AWS IOT. . I stored all the mp3 files to RoboSapien subfolder. Then, I created this audioFileName global variable. I detect if audioFileName is blank or not. If it has a filename then play that one. make it check every 500 ms.. . Then when I receive a Delta command, that means somethingy changed, I get the command and assign the audioFileName variable.. To start I just type in the raspberry pi. > node index.js. It listens to Amazon IOT for commands. I can actually update the Shadow, and it would send to all the listeners.. Then I'll say:. Alexa, tell RoboSapien to do the Nae Nae. . Here's the github repository. https://github.com/rlyle78/iot-echo-robosapien. . Let's let him do the Nae Nae again!. Few lessons from this approach:. 1. The IR Sensor must be pointed to RoboSapien. Line of Sight is important.. 2. Sometimes Alexa would timeout. The AWS Lambda is timing out getting connection and sending update to AWS IOT.  I'm not sure why? It works on the first update.... . It is still a work in progress. It's a journey but it's all good. . I enjoy trying to challenge myself how technology pieces can go together. Please add respect if you like these projects and follow me.. .",1
"A SparkFun Artemis powered urban quality monitoring system with IoT capability and TensorFlow Lite based machine learning implementation.. Read up about this project on . A SparkFun Artemis powered urban quality monitoring system with IoT capability and TensorFlow Lite based machine learning implementation.. The metro cities all around the world are facing a lot of problem because of the increasing population, which is resulting in an exponential pollution rise, which is a very serious problem and needs immediate attention.. But the problem is that there is no proper monitoring device for these urban environments, so we are unable to get any reliable data. Even if there are devices to monitor the conditions, they are in limited number due to the current cost - to - reliability and accuracy count.. The SparkUQM - designed specifically for urban environments. Please note that I have designed this device keeping in mind the Indian metro city conditions, as cities like Delhi are one of the most polluted cities in the world when it comes to air pollution. . So, let us get started!. So, the components are already mentioned in the project. But, let us have a look at each of them in brief:. 1) The Spark fun Artemis Contest Kit 1 - This kit contains. 2) Various Seeed Grove Sensors. Note that normal sensors will be just fine. I am using these as I have a lot of them lying around. The sensors I have used are:. 3) Particle Photon - This small WiFi powered development board will be used to add IoT capabilities to our project. This will fetch the sensor data serially and then send it to your desired cloud.. 4) Apart from this, just a USB power bank will be required to power the whole device. That's all!. So, let us get started with the project:. Now, I will show the hardware connections for this project with a image. For more details, just go and have a look at the code in my Git repo. The main file is very well written and with comments for easy understanding.. I am really sorry that I could not create a flow chart of schematic diagram due to the shortage of time. But be sure that I will add all the additional details later for sure.. Now after the Hardware connections are done, we will get all these things into a cardboard enclosure that I created for this project. So, after everything is attached are glued or taped in its place, the final Hardware would look something like this:. Now that this is done, let us move to the software part!. This part is divided into 3 parts, basically because I have developed my code like that. The first part is the normal code part in which I program the device to work with all the interfaced components.. In the part 2, I add machine learning functionality into the project.. In Part 3, I just describe the Particle Photon code. The code is a little complicated as I have used intensive commenting for easy understanding. So, let us start:. This is the basic Arduino IDE Code for the SparkFun Artemis ATP. The code is pretty much self explanatory if you see, so please just go through it. The name of the file is ""final_code.ino"".You can find the code in the Github repo of this project.. Sorry I will add detailed code explanation later for sure. The project shows all the sensor data on various pages created. These are displayed on the OLED screen. The pages are as follows:. Now that the basic code is all done, we can move on to the main part of this project, which is TensorFlow Lite implementation. I saw that there were just some speech and audio related examples given in Arduino TensorFlow Lite Library. But, they were quite complicated to start with and for some reason, I could not get them to work as expected.. Later, I did some tweaking with the parameters of the TensorFlow Micro speech example and it finally worked! So, I had 2 options now:. I figured that adding voice functionality to this project won't do much good in terms of application, so I decided to go with the 2nd option.. Firstly, I just focused on 2 of the simplest algorithms:. 1. Linear Regression. 2. Logistic Regression. But I couldn't get the desired accuracy on my Linear regression model for predicting air quality (eCO2) values based on past values and the features I used were:. To know more about Linear regression in TensorFlow Lite, just go on and follow this tutorial. Believe me, it is great! Thanks to Particle blogs.. To get some reference data, I used the NXP Rapid IoT prototyping kit.. https://blog.particle.io/particle-machine-learning-101/. The same process can be followed for Arduino IDE too.. But the Loss was too much and I had a time constraint, so Instead I decided to go with Logistic Regression and build a simple binary classifier. But do not worry, I will add the Linear regression Model implementation soon.. Now, training a Binary Classifier can be time consuming when we use a large dataset. So, for this project, I just took into consideration the CO2 and TVOC values, and added an additional parameter AQI to generate training data output. It is pretty simple logic, if the value of TVOC and CO2 is greater than a particular value (in my case, I kept it 1000 just for demo), the AQI value will become 1, else zero.. To get some data, I created a demo program to print the desired data in CSV friendly form on serial monitor and left it running for an hour or tow on any Serial console (I used Putty).. Then I stopped it and downloaded that data in CSV format. The final data will ook something like this:. I managed to get 540 data points, which were more than enough for me. After that, I uploaded this data to google colab Logistic Regression Demo, and then trained the classifier. The link to the google colab notebook is:. https://colab.research.google.com/notebooks/mlcc/logistic_regression.ipynb?hl=en. This is the basic example, just change it according to the data you use.. Now, just follow this process to convert the obtained model into.tflite format and finally into a C++ file with values of weights and biases stored in an array.. Once you have a trained model, the next step is to convert that model into something that TensorFlow Lite can work with. TensorFlow proper supports a number of different model file formats, while TensorFlow Lite supports only one, the tflite FlatBuffer format, which is optimized for size and thus perfect for constrained devices.. Once you have a TFLite model, you’ll need to convert it to a C array for use. Many MCU’s (including Particle devices) do not have native filesystem support, which means you’ll need to load your TFLite model into memory in order to use it. The recommended way to do this is to convert your model into a C array and compile it into your project.. On most operating systems, you can do this with the xxd command.. That will yield something that looks like this:. This completes the Machine Learning Part.. Now that everything is set in the SparkFun side of the project, let us move on to the particle photon side, which helps adding IoT capabilities to the project.. The Arduino code sends all the sensor data in JSON Format (using the Arduino JSON Library ) and so we will use the same library to parse this JSON and then we can do anything with this data.. Example: Send it to a database like Firebase so it can be accessed in an Android application. See my earlier project for documentation on this.. This completes our project. Please like if you like this project and follow me for more such content. Thanks to Sparkfun for this wonderful opportunity!.. Adios!.",1
"What? Program an Arduino from your Raspberry Pi? It's possible, and super easy! . Read up about this project on . What? Program an Arduino from your Raspberry Pi? It's possible, and super easy! . Can't find the right computer to program your Arduino? Or are you running short on available computers around the house to use?. Well, worry no more, my friends. This will take very little time and will get your Raspberry Pi to program your Arduino. . Connect your Raspberry Pi to a power source and a monitor. Once logged in, navigate to your browser. . Head to this link: https://www.arduino.cc/en/Main/Software. Scroll down a bit and click on ""Linux ARM 32 Bits"" on the right. . You will then be redirected to a ""Contribute"" page. If you want to donate money to Arduino, this is were you'll do that. If you don't want to donate, click ""Just Download"". A dialog box will pop up, asking where you want to save the file. Select Downloads and continue. . Now that the IDE is downloaded, you'll need to install it with Raspbian's Archiver. . Follow these steps to install and begin using the latest version of Arduino IDE:. 1. Go to the Raspbian Icon at the top left corner of the Raspbian desktop. Open the menu, go to Accessories and click Archiver.. 2.Go to Archive ----> Open ----> arduino-1.8.1-linuxarm.tar.xy. Wait for the red light to stop flashing at the bottom right corner. . 3. Once that's done, go to Action ----> Extract. A dialog box appears. Select ""All Files"" and""Extract files with full path"". It should be set like that as default. Click extract. . 4. Wait for the extraction to be complete, the move to the terminal. Type this:. Once that's done, you can start using the IDE!. When your Raspberry Pi finishes rebooting, open the Raspberry Pi menu on the desktop. There should be a new section called ""Electronics"". In that section, there should be the Arduino IDE! Plug in your Arduino into your Raspberry Pi, open the Arduino IDE. Select the correct port, which should be /dev/tty/USB0. . To test that it works, try coding the classic Blink program attached to this post into the Arduino IDE. It should upload correctly, and it works!.",1
"Using a blue laser and phosphorescent paper to illustrate what it means to sketch a sine wave around a circle.. Read up about this project on . Using a blue laser and phosphorescent paper to illustrate what it means to sketch a sine wave around a circle.. Have you ever wondered about how sound editing software can cut or boost the base in a recording? Or how sound-canceling headphones work? Or how civil engineers can design buildings and avoid the resonant frequencies of earthquakes? Well, the answer to all of those questions originates with one man: Joseph Fourier. Fourier figured out how to mathematically brake a complex wave down into its component sine waves, allowing each to be edited or observed individually. The general idea (without getting into the calculus behind it) is that you take the wave and wrap it around a circle so that it draws a type of flower. You then gradually increase the frequency at which you wind the wave around that circle, watching the shapes that the graph draws change. You do this until you find a frequency that draws something that looks like a heart shape. When you find that, it means that the frequency at which you are winding the wave around the circle is the same as the frequency of one of the component sine waves in the parent wave you are analyzing. I decided to make a physical representation of that process of finding the component sine waves. . . The idea that we (Henry Haggart and I) came up with is to have a rotating circle of phosphorescent paper which you can control the speed of under a linear actuator with a blue laser attached to it. The idea is that the linear actuator with the laser would trace a sine wave as you altered the speed at which the circle turned to try and find where they matched and you started to draw hearts instead of flowers. This could be easily achieved by driving two separate stepper motors and using the input from a rotary encoder to change the speed at which the base circle rotates. The rest of the physical design was relatively rudimentary, as we only needed a way to suspend the laser above the base circle on a custom fabricated linear actuator which we laser cut from acrylic. . . . Programming this device, while it wasn’t excessively hard, did present some unexpected challenges for me. Firstly, I had never worked with Arduino and steppers, and so did not think about the mechanics of the setSpeed function. What the speed does is just add a different delay between steps in the program. This was a problem for us, as every time the delay changed in the sine wave generator code, it would also change the speed of the base circle. As it was getting dangerously close to exhibition time, the quick fix was to simply run the two motors off of two different boards. This was a way to make the code much more readable and (more importantly) debuggable. Later on, however, I learned about a way to run the two codes together on the same Arduino without having the delay in the sine function effect the delay in the base circle. . Here is the code snippet that allowed us to do that: . The millis() function in the Arduino IDE is a timer function, so its value counts at a constant rate no matter the delays that you may have in your code. What this does is looks for when millis() has counted up a certain increment (value or your base circle speed) and when that condition is met, it takes one step forward with the base stepper motor..",1
"This is a project that aims to build an RGB LED P6 panel based LED Clock using RPi Zero W and Electrodragon interface board.. Read up about this project on . This is a project that aims to build an RGB LED P6 panel based LED Clock using RPi Zero W and Electrodragon interface board.. This project aims to create a RGM matrix based SMART clock using the RGB Matrix interface boards being sold by Electrodragon and the Raspberry Pi Zero W. . The software being used is Raspbian and the board will be interfaced directly in C. The ultimate goal would be to create an SDK for this board to create multiple apps for the P10/P6 display and finally create a nice 3d printed case for the same. The SDK will be capable of:. The project will host a number of sensors to which the ""App Modules"" can interface to:. Stay Tuned for more from this project. The repo for this project will be at: https://github.com/narioinc/PiClock . A quick sneak peek at the progress made so far:. .",1
"Controlling a robot via WiFi, using Arduino and Blynk application.. Read up about this project on . Controlling a robot via WiFi, using Arduino and Blynk application.. . ARDUINO  + BLYNK + WIFI MODULE = WIFI ROBOT.",1
"The Scent-terrific Smart Candle is made of wax, flickers like a real flame, emits scents though a wax warmer, and is controllable by Alexa! . Read up about this project on . The Scent-terrific Smart Candle is made of wax, flickers like a real flame, emits scents though a wax warmer, and is controllable by Alexa! . The Scent-terrific Smart Candle is a smart lighting and aromatherapy system for the home or office. . I love smart lighting. I've got seven wall switches, a smart bulb, and a smart plug (connected to a lamp) in my home. I've even built my own smart lamp.. Unfortunately, I haven't found the same innovation when it comes to other lighting apparatus. I haven't seen a smart night light on the market. I think smart lamps can be better. . Smart candles are the worse; most don't look like candles. They don't smell like candles. They aren't controllable by voice. . I've been thinking of building a smart candle system for a while; Hackster's ""Alexa and Arduino Smart Home Challenge"" seemed like a good reason to take my ideas and attempt to build something.. One of the interesting aspects of the contest was the notion of taking a idea ""from project to product"". Using that as my guiding principle, I chose components and a final design based on the following factors:. After heavy consideration, I landed on a solution that leveraged an Arduino Pro Mini, ESP8266 (S-12 module), Mongoose OS, and AWS IoT (more details in the appendix).. The main interaction model, using Alexa to provide voice control, is as follows:. Once I landed on a design, I started work on a prototype, with the following requirements:. Flame and Candles. I used yellow LEDs to simulate a flame (leveraging PWM pins to randomly vary the voltage to the LED, which causes the LED to ""flicker""). . I drilled 5/16 in. holes into 2 in. X 4 in. candles and inserted the LEDs inside to simulate a flame burning.. Wax Melter and Temperature Control. I used an electric heating pad and a ceramic ramekin to meet the scent requirements. . A ds18b20 temperature sensor is used to measure the heating pad temperature. A transistor is used (along with a PWM pin) in order to control the temperature.. Voltage Challenges. The heating pad needs at least 12V at 1.2A to (a) get hot quickly, (b) get hot enough to melt the wax, (c) deal with heat loss between the pad, insulation tiles, and ceramic ramekin. [See linked datasheet for more info]. The Huzzah can only accept 4-6 V. The Pro Mini can, in theory, take up to 12V input, but that stresses the voltage regulator on the device (I blew out a voltage regulator on one of my test devices).. Ultimately, I used a 5V 1.5A voltage regulator (7805) to get a safe input voltage for the microcontrollers. I used a TIP 120 Darlington Transistor to handle the voltage switching for the heating pad (using a PWM pin to get more precise temperature control).. Wiring Diagram. Notes/Comments:. The Smart Candle uses two microcontrollers to provide fuctionality. In order to build your own, you need to configure an ESP8266 to use Mongoose OS and AWS IoT.. Initial Set-up. Option 1 - Create your own AWS account and your own Alexa Skill. Option 2 - Leverage my Alexa skill. To do this, you will need to . Once you have the AWS CLI configured and have downloaded Mongoose OS:. At this point, your ESP8266 is now configured for use with the AWS IoT cloud. This is necessary in order for the candle to interact with Alexa (using my code below).. Notes/Comments:. The Pro Mini controls the functions of the smart candle. Building this is straight forward. . First, solder headers onto the Pro Mini (Sparkfun has a great getting started guide). From there, upload the code to the Pro Mini (check the code section for the Arduino code).. The wiring is documented in the Fritzing diagram. You can wire up to 5 ""candles"" with the code.. I decided to build a three candle holder for my second prototype. . Step 1 - Prepare the Candles. Step 2 - Create the Physical Candle Holder. I used 3D printing to create the candle holder (see section below for STL files):. Notes/Comments:. Step 3 - Final Soldering and Assembly. Step 3.1 - Solder the micro-controllers to a protoboard. Step 3.2 - Attache the heading pad to the base. Step 3.3 - Assemble the remaining components, but do not solder them to the protoboard yet. Step 3.4 - Assemble the LED holders. Step 3.5 - Assemble, then solder the remaining components to the protoboard. The final build, before adding the candles, looked like so:. Step 3.6 - Add the candles and test with the button. Step 3.7 - Test with Alexa. If you are using an account provided my me, then you will be able to control the device through Alexa. Note - See the next section if you plan to build your own Alexa skill.. An overview of building Alexa Smart Home skills can be found here: https://developer.amazon.com/docs/smarthome/understand-the-smart-home-skill-api.html. If this is your first smart home skill, then I suggest you first read the documentation and create a few ""hello world"" skills. Once you're ready, you can use my code to build your own Alexa Skill to control your smart candle.. The Alexa skill responds to the following directives:. Notes/Comments:. I used Login With Amazon for authentication. You can follow the example here: https://developer.amazon.com/docs/smarthome/authenticate-an-alexa-user-account-linking.html. I am in the process of building a ""Device Cloud"" for the Scent-terrific Smart Candle, so my code uses the user token to authenticate the user and retrieve the user_id. . The user_id is then used to either (a) discover devices or (b) confirm the user_id corresponds to the device_id.. If you are replicating this skill, you can skip some of the complexity and hard-code values instead. I've left the code as-is, with comments to where you can either hard-code or access a ""device cloud"" (a DynamoDB table). . Here are a few of the next steps needed to fully realize this project as a product.. Next Prototype (v3). Things to think about:. Path to Minimally Viable Product. Future Thinking. Note: This is a longer explanation of considered options. Added to the appendix for anyone who is interested.. One of the interesting aspects of the contest was the notion of taking a idea ""from project to product"". Using that as my guiding principle, I chose components and a final design based on the following factors:. I ultimately came down to two design ideas:. Option 1: Hub and Spoke. Components:. Pros: . Cons: . Option 2: Direct Wifi Connection to AWS IoT. Components: . Pros: . Cons: . Final Design. I ultimately decided on Option 2, for the following reasons;.",1
"This is a quick start guide on using the ESP8266 as an IoT device powered by PubNub. . Read up about this project on . This is a quick start guide on using the ESP8266 as an IoT device powered by PubNub. . This is a basic demonstration of how to use PubNub to handle the communication between an ESP8266 and any other PubNub enabled device. The ESP8266 is a remarkable little piece of hardware, and works perfectly as the controller for an embedded IoT project. Most projects using this module use an external controller like an Arduino to control it using the serial AT commands, but this is unnecessary. The ESP8266 is a programmable 32 bit MCU and can easily work as a standalone device.I have created a basic library demonstrating how to publish and subscribe to a PubNub channel. This channel can also be published or subscribed to from any other PubNub enabled device in the world. This makes setting up a network of IoT sensors or external actuator nodes incredibly simple! The demo shows how to read a button and blink an LED in accordance to data transmitted on the PubNub channel from a remote source.I also demonstrate how to use the PubNub debug console as well as printing debug information over the serial port. A full description of the project including in-depth instructions is available in the source code repository: https://github.com/Kurt-E-Clothier/pubnub-esp8266. As stated, this is a basic demo illustrating what is possible using an ESP8266 with PubNub. The provided code will work; however, it should be modified to best suit a particular application.. .",1
"Monitor if the door or the valve gas is open... or if someone opened the cookie jar!. Read up about this project on . Monitor if the door or the valve gas is open... or if someone opened the cookie jar!. the project is simple, a switch connected to the Artik Cloud. . The program running on the genuino MKR1000 check the status of the switch and collect every change for 15 minutes.. The battery must be 700mAh minimum. Algorithm . Every 15 minutes the mkr1000:. There are also another counter I missed in the diagram: failed attempt. This counter is increased everytime the device try to send the data over the cloud and it fails.. I imagined to use the device to monitor:. . All the project part are explained in the following video:. Part of the following tutorial are adapted from the artik.cloud tutorial, here: https://developer.artik.cloud/documentation/tutorials/ . Go to the Developer Dashboard to create a private device type. . Create a manifest for the ""Door Sensor"" device type. . Now a new ""Door Sensor"" Device is available. . Install a recent release of the arduino ide (I used the 1.6.8): www.arduino.org . . Launch the ide.. You now have an IOT device compatible with Artik.Cloud! . Note on Battery: Battery is optional for the project. The MKR1000 contains the circuit to charge the battery while it is connected to 5V Micro USB. Once you have finished you can power the project through battery.. I build the Web App adapting the ""Your First Web App"" tutorial on Artik Developer website. . The web app allows to get the last status of the device. I used an hosting (netsons) with support of PHP 5.4 and CURL. . Follow these instructions to create an application using the Developer Dashboard. . For this tutorial, select the following: . <p>Please <a href=""https://accounts.artik.cloud/authorize?response_type=token&client_id=xxxxx"">login</a></p> . Go to http://yourwebsite/door, you should see a page with a login link: click it and log in with your samsung account credential. . Once you complete authentication, you will be redirected to hello.php . Click ""Get Last Status"" to get the latest message from your device on ARTIK Cloud. . If your door is closed you should see an image like this: . Rules are a clever way to create a communication between different devices: see this article.. I created a rule to send me an email if at some hours of the day, the device state signal that the door is open. . Done!. You wil receive email like this one below:. Other possible rule for this project: send an email if ""failed"" field is more than 0. .",1
"Internet of Things for all! Mozilla WoT gateway based on Raspberry Pi and ESP8266 powered. Try to create your own gateway and device!. Read up about this project on . Internet of Things for all! Mozilla WoT gateway based on Raspberry Pi and ESP8266 powered. Try to create your own gateway and device!. The scope of this project is to “ensure the Internet is a global public resource, open and accessible to all.” The Internet of Things (IoT) is a new era of the Internet. And like the Internet, Mozilla imagines a free protocol for all. Cross-platform, cross country, cross brand.. For this project you must have:. 1 X Raspberry Pi 3 (https://amzn.to/2DmQ8eB). 2 X ESP8266 (https://amzn.to/2AUvC3c). Optional. 1 X Z-Wave dongle adapter (https://amzn.to/2HxZokm). ESP8266-01 Relay board (https://amzn.to/2Ufx7Ao). Optional for Raspberry Pi setup. Mouse. Keyboard. HDMI Monitor. For this project you must have:. Arduino IDE or Arduino Create (https://create.arduino.cc). Mozilla Gateway for Raspberry 3. All the Mozilla Gateway libraries. Today we have a lot of components inside the iot communication. You should have, for example, an Amazon Alexa gateway and a lot of devices connected with that. But with Mozilla Gateway you can use the same gateway to use Alexa, Google home kit, simple ESP8266 or anything devices you want to ""smartifing"" your home.. The Mozilla Project is an experimental framework with 3 components:. Things GatewayAn implementation of a Web of Things gateway.. Things CloudA collection of IoT cloud services.. Things FrameworkA collection of re-usable software components for building Web Things.. . . The Raspberry Pi Gateway. The core of all the project is a Raspberry Pi 3 Gateway by Mozilla.. It's a really simple step. Mozilla has prepared a Linux distro that install the system on the Raspberry Pi. You can setup the gateway by using your smartphone.. 1. Flash SD Card. Download the pre-built Raspberry Pi OS image from Mozilla and flash it onto an SD card. Download from THIS LINK the Mozilla Gateway distro.. You can use the Raspberry Pi official guide to install the Mozilla Gateway on the SD.. Another possibility is Balena Etcher (https://www.balena.io/etcher/).. Balena Ethcer is a program for Windows Mac and Linux that copy an ISO image on the SD.. 2. Start you Gateway. Now you can start your Mozilla Gateway. After that, you can connect your phone with the gateway by using the Wifi from Raspberry Pi.. Connect your gateway to your wifi network. . After that you must create a tunnel to the Mozilla cloud system. After that you can see your gateway even out from your Local Area Network.. . After this step you receive an email with your Mozilla credential. You must compile the module and...that's it!. . 3. Add devices. Now you can add some devices. You can use Zigbee dongle to connect Zigbee devices, or z-wave dongle for z-wave devices.. 4. Arduino devices. My solution is able to use Arduino compatible devices. I use 2 NODE ESP8266. One of that is used as a receiver. You can connect the board to a relay and command a light for example. The other is an ESP8266 that collect the data from a sensor and send the value to the Gateway. In this, code (https://github.com/masteruan/webthing-arduino/tree/master/examples/esp8266Sensor) I've created a debug test. The ESP8266 send a random number every 3 seconds to the Gateway dashboard.. NodeESP8266 led. This is the link on Github code (https://github.com/masteruan/webthing-arduino/tree/master/examples/LED).. Download the code and put on the Node ESP8266 board.. ESP8266 + Relay shield. I've used also this kind of board. A ESP8266 + relay. You can see my code on Github. You must only charge the firmware on the ESP8266 board and also you can command a relay that works clearly with Mozilla WoT Gateway.. When you add the device you can use like a led device. If you send from Mozilla Gateway ""on"" command the ESP send by the serial port command to the relay shield a serial command to switch on the relay, otherwise the ESP8266 send to the board a switch off command for the relay.. This is the link on Github code (https://github.com/masteruan/webthing-arduino/tree/master/examples/relayEsp8266). NodeESP8266 sensor. You can see the code for the Node ESP8266 sensor.. This is the link on Github code (https://github.com/masteruan/webthing-arduino/tree/master/examples/sensorNodeMCU). You must include some libraries for ESP LED and ESP sensor.. Also for ESP8266-01 Relay you must include. With this code you setup your local network SSID and password. After you create a new ThigDevice instance.. With this code you connect the board to the wifi network.. With this code you send a random number to the gateway every 3 seconds. Now you can test your gateway. Try to connect to the dashboard and switch on/off the Node ESP8266. .",1
Ball fetcher robot made using a Tupperware and a Raspberry Pi Zero. Used OpenCV and Python for ball tracking.. Read up about this project on . Ball fetcher robot made using a Tupperware and a Raspberry Pi Zero. Used OpenCV and Python for ball tracking..,1
"Build a simple and low-power wireless weather station over 6LoWPAN and IPv6, with Zolertia RE-Mote, Ubidots and wunderground. Read up about this project on . Build a simple and low-power wireless weather station over 6LoWPAN and IPv6, with Zolertia RE-Mote, Ubidots and wunderground. As normally all my stories begin, I had a bunch of stuff lying around and (...). At home we wanted to have for some time now more information about the weather, no big deal, normally we just browsed our mobile and wunderground to get feedback about our area, in fact we found this particular PWS (personal weather station) being really close to home.. But then again depending on the day the information seemed a bit off, and wunderground's free developer plan limits the number of requests to 500 per day, and we wanted to be able to exploit the data for other purposes, like to make an app to suggest you to put more clothes on in case of a chilly morning waiting for the bus, make our own weather forecasts, share this information with others to increase the weather information resolution in our neighbourhood, and other excuses like this to get my wife's blessing to work on a weekend.. Truth is I had sensors and a weather meter lying around, and I wanted to test what I could do in a weekend with enough time to work on this.. The main objective is to register my DIY Weather Station as a PWS (personal weather station) in wunderground, and share my weather information with anyone.  The first step and the remainder of this page will detail the PWS implementation and testing, then on a later (and future) project I will elaborate on publishing to wunderground, and improvements done to the Weather Station after weeks of testing.. The following are the components I had at hand, honestly the only thing I would change is the rain gauge, but we will get to that later.. . Zolertia RE-Mote platform. Disclaimer: I work at Zolertia (only to get freebies). As obviously I have some RE-Motes laying around the house, and I wanted to implement the Weather Station to be wireless and with as low maintenance as possible.  Being the RE-Mote an ultra-low power platform and with dual radio, these two requirements were met.. The RE-Mote has a built-in battery charger, so powering the Weather Station over LiPo batteries and recharging using the RE-Mote's USB connector with a common micro-USB cable was an easy option.. At the moment as my Weather Station is to be located on my balcony, next to the living room where my Raspberry Pi is installed, I'm using the 2.4GHz IEEE 802.15.4 radio interface, but in case I would ran out of radio juice then it would be straightforward to just shift to the 868/915MHz radio for a coverage boost.  I'm using the 2JW031 multiband antenna, so no need for me to replace antennas if changing the radio interface (both are driven to the RP-SMA connector). The RE-Mote is ported to Contiki OS, so building the application and porting any missing driver is fairly simple (unless you complicate yourself with fancy stuff as normally I tend to do...). . A sparkfun's Weather Meter. The Weather Meter is composed of three sensors: anemometer, rain gauge and a wind vane.  The implementation of the sensors is quite straightforward: the anemometer and the rain gauge (a tipping bucket) ""ticks"" upon an even, so wiring up to a GPIO and capturing the interrupt is enough.  The wind vane changes its resistor value depending on its angle.  Following the datasheet instructions was easy enough to create the drivers (more about it later).. The Weather Meter has 3 x RJ-11 cables (same as telephones), the short one from the anemometer is to be connected to the wind vane (see below), so you end up with just 2 cables to connect: the rain gauge and the anemometer/wind vane (see below). Instead of powering the sensors with 5V I used 3.3V, this has no significant impact on the performance or values, but only to recalculate the wind vane degrees/voltage relationship as follow:. . . Also it is required to de-bounce the anemometer and rain gauge to prevent false readings.. One note of caution: the rain gauge when assembled and attached to the weather meter pole may produce false readings, as strong winds, vibration or similar causes the tipping bucket to... well... tip, this can be quite annoying as the only option I could think of was to either fix separately from the weather meter, on a flat surface, or use another sensor (like a moisture sensor) to validate the readings.  Below is my attempt to secure the rain gauge using a zip strip, this proved to generate lesser fake readings.. . Atmospheric pressure, Temperature and Humidity sensors. Luckily from a previous project I had a PCB made with the SHT25 and BMP085 I2C-based digital sensors on-board, featuring also 2 RJx11 ports to connect the Weather Meter.  If you are not as lucky as me, you can purchase the sensors from Sparkfun, Seeedstudio or Zolertia (the BMP085/BMP180 and SHT21/SHT25 should do just fine as the code is the same).. If using Seedstudio sensors, be aware the connectors and cables are 2 mm pitch, while Zolertia's sensors and connectors are 2.54mm.  If you notice on the photo, there is also an ambient light sensor (TSL2563), not used in this setup as I'm planning to put all the electronics in an IP65 enclosure.. . LiPo rechargeable battery. I had this battery lying around, good enough for a first test.  Its 4Ah capacity allows over 15 days of continuous operation running at 8mA (my worst case scenario), but this figure is way to conservative as the RE-Mote platform can go as down as 150nA, but I wasn't interested in optimizing for power consumption... yet!. . The IP65 enclosure. When choosing an enclosure there's not to much of a choice, rugged and ugly are the normal choices, specially when diving upon the company storage room to try to find an IP65 enclosure big enough to host all components (specially the LiPo battery).  One option to simplify the enclosure selection would probably be to change the LiPo battery model with a smaller one, but I didn't wanted to spend money on this.. Once I found an enclosure I made a fixture to keep the battery secured, and to place the RE-Mote on top, mostly to avoid jiggling components jumping inside the enclosure, specially in presence of strong winds.  Using a female connector was enough to make an easily removable ""lock"" to remove the RE-Mote if needed.. I drilled a hole at the bottom to pass through the Weather Meter cables (I know this is not IP65-ish but I only cared about being water resistant on the other box faces), and also for the internal temperature and humidity to be roughly the same as the outside of the enclosure.  As the hole was made at the bottom, in case of rain the electronics will not be affected, but I have yet to test if the humidity would not rise high to damage the boards, probably using a moisture absorbing bag should be enough.. . The RE-Mote and Weather Meter pin-out are available in the previous section.  To connect the sensors and the LiPo battery to the RE-Mote just follow the below instructions:. . I used 2 x zip strip to secure the enclosure to the Weather Meter pole, drilling 4 small holes on the back of the enclosure.  I have yet to put some epoxy on this to prevent water from entering the enclosure, or replace the strips with something easy to lock and unlock if required to dismount off the pole.. . I wanted to use IPv6 for this weather station application, so I could run a local network (using an aaaa::/64 prefix) for testing, or a public IPv6 prefix to be able to connect to it remotely from anywhere enabled, or to other IPv6 devices.. At the moment is running on a local network with a Raspberry Pi acting as a Gateway, running an IPv6 UDP server to communicate with the Weather Station on IPv6.. The Weather Station application (Node). I wanted to be able to reuse the Weather Station application as much as possible. For this particular project I'm using UDP over IPv6, but I wanted also to be able to easily switch to MQTT, CoAP, LWM2M or other.. For this implementation I'm using Contiki OS.. I implemented the Weather Station as an application running in a different process, taking care of the sensor initialization and readings separately from other network related processes.  Below is the abstraction done:. The Makefile uses the udp-client.c as the networking application, running the weather-station.c application underneath.. The weather meter (anemometer, rain gauge and wind vane) library is located in weather-meter.c, the SHT25 (temperature and humidity) and BMP085 (atmospheric pressure) sensor libraries are in sht25.c and bmpx8x.c.. Contiki has a sensor interface that allows to initialize and poll the sensors as follow:. Then we have the next data values available, saved directly into a weather_station_t extern structure.. The WEATHER_METER_ANEMOMETER_AVG_X and WEATHER_METER_WIND_VANE_AVG_X are return the value of the anemometer and wind vane averaged every 2 minutes as default.  The default integration period can be changed by adding WEATHER_METER_CONF_AVG_PERIOD to the project-conf.h file with the desired value in seconds.  The WEATHER_METER_ANEMOMETER_AVG averages the wind speed value continuously, not over a given period.  The other values are straightforward to understand (I hope!). In the project-conf.h file we define the GPIOs to use for the Anemometer and Rain Gauge, also the ADC channel to use for the Wind Vane.  Notice we also include the NVIC_INT_GPIO_PORT_C as the interrupt vector, in case we want to use any of the interrupt features of the weather-meter.c driver.. The weather-station.c application can be briefly resumed as:. The Weather Station configuration webserver allows to change run-time operational values of the Weather Station, using browsers like Firefox or Chrome.  The WS is implemented in the httpd-simple.c, below is a screenshot of the WS running on the Raspberry Pi using links.  The URL of the WS is the IPv6 address of the Weather Station and the ws.html page as shown below:. The configuration values are stored in the flash memory to make it persistent in case of a reboot.. The udp-client.c application just configures the UDP IPv6 connection and awaits for a data event from the Weather Station, then sends the data stored in the weather_station_t structure.. . To program the Weather Station just connect the RE-Mote over USB and:. . The Border Router (EDGE node) on the Raspberry Pi. The Border Router creates a virtual interface (similarly to the wlan0 WiFI interface), so packets coming from the 6LoWPAN network are forwarded as IPv6 packets and viceversa.. First program a different RE-Mote as Border Router:. In the Raspberry Pi then enable the IPv6 module.. And connect the RE-Mote programmed as Border Router to any of the Raspberry USB port and do as follow:. This will create a network interface named tun.. Now we can access the Border Router webserver and see if the Weather Station has joined the network as follows:. The software. As mentioned before, an UDP Server runs in the Raspberry Pi, binded to the local IPv4/IPv6 addresses.  The server created the UDP connection then sits and wait for UDP packets to arrive, then does some data formatting to convert from 1-2 digit precision integers to floating point variables.  We also multiply the rain gauge sensor values by 0.294 as we send the number of ticks, instead of millimetres.. In the screenshot above if enabling the print_recv_data function, the content of the message is printed on screen.. To validate the Weather Station data and to ease my testing, the UDP server publish the results to Ubidots.  Besides publishing my own data, I also send data to Ubidots from a nearby PWS (less than 300 metres away) using wunderground's API, and graph the values in the same plot to see how much close/far the readings are from each other, and have a sense of validation regarging I'm obtaining valid sensor data.. From the photo it seems the sensor data is OK, except the atmospheric pressure readings which seems a bit off, but then again I have to check if the altitude is affecting the readings (I live on a 6th floor while the ICERDANY6 PWS says its elevation is 318... but no units!).. To keep everything smooth and running I installed supervisor, to keep the tunslip6 and UDP-Server processes running.. You can follow the results at the link below.  Be aware that this is an active project so there may be times the weather station may be offline, or under testing indoors.. Ubidots weather station dashboard. The weather station has been running for over a week now!. Before moving to the next phase of the project (to be done on a separate post) and register to wunderground, I need to verify the data is OK and ready to be published.. One correction I did was for the wind direction average calculation, as monitoring the data over Ubidots I found some really odd values:. This was due to some incorrect casting upon calculating the values, it is fixed now in the latest Github commit.. There is also something pending to be fixed, related to the enclosure being overheated when facing the sun.  This has two solutions: changing the enclosure for a white one, or paint it white, to avoid the black enclosure from absorbing too much heat.  The other one is to drill more holes to help ventilating the box.. As it is the battery lasts over a week, and takes over 1-2 hours to recharge over the USB cable (thanks to the RE-Mote built-in battery charger).  The weather station stops working when the battery voltage drops to 2.75V approx.  The average current draw is 28.4mA so there's a lot of room for improvement in the next phase of the project: the goal is to achieve an overall of 500-800uA.. . This is the first step towards a bigger project, I have the following items pending on my to do list:. But this will be material for a new follow-up project.. .",1
"Busy? You can just press the IOT 'Easy Button' on your desk and your loved one will get a 'random' affectionate text sent from your phone.. Read up about this project on . Busy? You can just press the IOT 'Easy Button' on your desk and your loved one will get a 'random' affectionate text sent from your phone.. No matter how busy you are, you can just quickly press the IOT 'Easy Button' on your desk and your loved one will get a nice text coming from your phone. Not only that, but on their phone it is indistinguishable from a text you personally typed out in the middle of your busy day! And more than that, if they reply it will show up on your phone as part of a normal text conversation.. So they won't see the same text every time, the texts are randomly selected from the list of messages you specified. The IOT 'Easy Button' texts your phone with the message before it is forwarded to their phone.. This project is currently set up with 3 types of messages:. I have set up the text messages in the example code to text my wife.You can easily edit the text in the code to change the content or type of messages to suit your own personal tastes. You can use this to improve your relationship with your wife, husband, child, parent etc. . Other Notes:. Amazon Web Services. We are going to use our account to set up the sequence below using the AWS IOT Button Dev App . Log on to your AWS Console. Find and open up Lambda. You should see a newly created lambda function named ""iotbutton_"" followed by your button's device serial number (DSN). This is the Lambda function auto-generated by the IOT Button Dev App.. Open the function, and replace the function with the function shown in the code window here. Make sure to replace the constant ""PHONE_NUMBER"" with your own phone number.. There are 3 types of button actions.. Click: Send 'Thinking of you' type texts. Double-click: Send encouraging texts. Long click ( > 1.5 seconds): Send congratulatory texts. You can easily edit the type and content of these texts to suit your own personal tastes. . When you press the IOT Button now, a text should be sent to your phone.. Make a note of the number it is sent from ( 44779 in example below ). Now you can successfully receive a text from the IOT button to your own phone, the next step is to forward the your loved one's phone.. Set up a new profile and you will be shown a screen where you can enter the necessary information for you IOT message forwarder.. Receive From. To only forward texts from the IOT button, enter the IOT number you made a note of in Step 5. ( In our example 44779 ).. ( Note: The first icon on the right accesses your contacts and you may need to enter the IOT number in your contacts before you can complete this step ). Forward To. There is a dummy number below. Use the Contacts icon to select your loved one's phone number.. Ensure your forwarder is ACTIVE. Press the IOT 'Easy Button' . You should receive a text and see it forwarded to your loved one.. If not go back over the steps and confirm:. .",1
"An application that helps people with poor motor control improve their fine motor skills though virtual-physical interactions. Read up about this project on . An application that helps people with poor motor control improve their fine motor skills though virtual-physical interactions. We're approaching the pinnacle of innovation where physical processes can control or be controlled by THINGS of the INTERNET! Er, I mean INTERNET of THINGS.. . When Particle came out with the Photon and gave developers the magical keys to the wonders of the web, my mind began to race. What kind of technology could I use to bring an extra dimension to modern web applications? How can users benefit from this new method of ""online presence""? But most importantly, what kind of problems could I solve by applying IoT technology? Then I arrived at Wave.. . Wave is a biotech application that helps people with poor motor control rehabilitate and improve their fine motor skills through a gamified approach. An IoT motion tracker called a ""Wave Motion"" connects users to the application where they can undergo two different user experiences. First, in the shoes of an independent user, Wave provides me with a test that randomly generates targets (using D3.js), enabling me to respond physically by moving my hand. After multiple trials, the test calculates my average response time and accuracy then graphs them so that I can check on my progress later on. Second, in the shoes of multiple users, Wave also provides a mode where one user can generate targets for another user in real-time (using Firebase) then continues on to calculate the rest of the data.. . The application is simple, light, and hopefully a worthy addition to the biotech industry.. . . Yes, yes it is! And without further ado, into the details of the motion tracker.... . Acquiring the IR sensor to track infrared LEDs was very bittersweet. When I was younger, I used to watch videos of a guy named Johnny Chung Lee who specialized in human-computer interaction and showcased a project using a Wii Remote. In his project, he was able to track head movement using a camera inside the controller and I was amazed thinking that was the future! And here we are. When I finally got around to hack open my very first Wii Remote, which I've been using for almost six years, it became a little hard for me but I was able to pull through in the very end.. The PCB that I used to interface the camera as an IR sensor came from Rocket Brand Studios (don't let their website trick you; they've got some nice tech). The instructions were simple to follow and doable for anyone with a little soldering experience.. . One thing I've noticed though was that without an IR screen, the sensor would also detect natural IR light from the sun so to avoid that issue, I cut out a small match-box and attached the Wii Remote IR screen and made a little enclosure for the sensor.. . And since we're talking about I2C here, the Photon (and Spark Core) have dedicated clock and data lines on pin D0 and D1, which both require pull-up resistors of at least 4.7k Ω.. . The IR sensor requires both 3.3v and 5.0v so I just tacked on a 6.0v battery pack and used a 5.0v LM7805 regulator with a 10 µF capacitor (helps stabilize the current) to drop it down to a 5.0v power supply on the lower gutter of the breadboard. From there, I fed 5.0v into the sensor and the Photon, which can accept between 3.6v - 5.5v, and used its 3.3v pin to give the remaining power to the sensor.. . The Wave Motion, once it detects an IR blob, sends the x-y coordinates and size of the blob to the application via Server-Sent Events (SSE). Unlike web sockets, which provide a two-way communication channel between a webpage and server, think of SSE's as an open one-way street that can send data to the webpage anytime, anywhere (though we know that it can only go one place).. . On the other side, the application is attached to a handler that updates the pointer every time new coordinates are sent and the testing algorithm becomes more complex from there.. . If you enjoyed the tutorial, check out Wave! See you next time and thanks!. . .",1
"Obstacle avoidance game like Flappy Bird. Move your hand to avoid the collision. It is easy to make and fun to play!. Read up about this project on . Obstacle avoidance game like Flappy Bird. Move your hand to avoid the collision. It is easy to make and fun to play!. To set up obniz, all you need to do is to follow three steps.. Connect obniz and the distance sensor as shown below.. We use HTML5 canvas.. . Set value of distance sensor to var ""inputHeight"", and use it anytime.. {vcc: 2, gnd: 1, signal: 0} should be changed if you connect devices different from Step 2. . This value is used as each frame input.. obniz is a cloud-connected IoT development board. You can program on the web browser of any smartphone or computer and the command is sent to obniz through the internet via obniz cloud. By connecting the obniz to the cloud through wifi, users can remotely control devices that are physically connected to obniz.. . obniz has 12 IO and WiFi-BLE module. It can be controlled through the APIs – REST or WebSocket API – on obniz cloud. Not only simple IO on/off but also UART, I2C, BLE etc can be used by remotely controlling obniz via internet. All you need to do to connect obniz is to input unique ID by scanning QR code. Complicated processes are done by obniz and its cloud. You can just start programming in HTML, browser and circuit have already been integrated. If you write a program to collect sensor values, you can make a chart of the values easily.. . . In terms of hardware, every IO can drive up to 1A with overcorrect protection, therefore high current demanding devices such as motors can be directly connected to obniz IO. GPIO and AD can be used on every IO. UART, SPI etc peripherals can be assigned to every IO.Even output voltage 3v/5v can be changed by software. Most electrical parts can be connected directly. Embedded parts such as switch, OLED display, and BLE are ready for use on program.. . . . .",1
"This tutorial takes you step by step through the process of registering your Hologram sim and use it with the RAK iTracker module.. Read up about this project on . This tutorial takes you step by step through the process of registering your Hologram sim and use it with the RAK iTracker module.. We have seen quite a lot of projects on the RAK itracker and i definitely had a blast using this board to its full potential. With som many onboard sensors and connectivity option, this is a beast of a board and definitely a complete solution in the TRACKER BOARD department. 5/5 for that. This tutorial will cover the GSM parts of the board. we will be using Mbed for programming our nrf52 based iTracker board. Lets jump in... According to the Hologram website:. Hologram provides the cellular connectivity across continents to enable GSM connectivity for your end devices. Its really cool. They support nb iot wherever the services are enabled (sadly in india, nb-iot is yet to reach mainstream public consumption). However in countries like China, USA, you can use the sim for nb iot connectivity as well (do check the coverage for narrow-band connectivity before going in for the nb-iot options.). Visit the official website of Hologram. Click on ""DASHBOARD"" in the upper right corner @ Hologram.io and create your account.. Then click on ""sign up"" at the bottom of the page. Enter the registration interface. Follow theprompts to fill in the information to register.. After successful registration, log into your Hologram account and enter your Dashboard interface.Next you need to activate your purchased Hologram SIM card. Click on ""Activate you first SIM"" in the upper right corner of the page.. Enter the activation interface, according to the given prompts, fill in the information, you cancomplete the activation of the SIM car. After successful registration, enter the SIM card information interface. After waiting for a period oftime, you will see the “Live” status.. . Hurray your sim is now activated. You can start using your sim to now send and receive data. you can also use it for sms send and receive as well. Make sure you check out the FUP for your plans and use the features accordingly to avoid additional costs.. The beauty of the itracker board is the ability to progam it in a variety of ways. one of them is using the online mbed compiler. . In case you missed setting up your mbed account and other details. Please check out the tutotrials below where i have explanied the step-by-step procedure to use the online compiler.. https://www.hackster.io/naresh-krish/getting-started-with-mbed-development-on-rak-itracker-be47d7. The GSM hardware on the itracker has a variety of versions available.. 1) Quectel M35. 2) Quectel BC-95-G. 3) Quectel BG-96. The quectel BG96 version is versatile as it supports both regualr 3g/4g connectivity and LTE CAT m1/Nb-iot connectivity on the same board.. We will consider the BG96 version for now. but running the samples below should be the same for the other two boards as well; except when trying to use nbiot features. We will cover the nbiot specifics in a later tutorial.. The GSM module is connected to the power rails by a TPS2708 siwtching module like so:. The PWR_GPRS_ON pin on the nrf52 corresponds to the pin number P0.06 and the pwrkey key corresponds to the pin P.0.15.. The pseudo code for sending the power on signal is like so:. GPRS power on:. gsm_on = 0;. wait_ms(200 millis);. gsm_on = 1;. wait_ms(200 millis); . GPRS Boot (start the module):. gsm_pwrkey = 0;. wait(2.0 secs);. gsm_pwrkey = 1;. wait(1.0 seconds);. Once the module is powered on and booted, you can communicate with the module via the normal tx rx lines (pin p20, p12 respectively). . So lets see a small skeleton code for testing the hello world of all GSM modules; ""Sending the AT command"". I have added some helper functions to power down the module as well if you need to.. Now the main test function that we have is the check_gsm function that send the ATI command. This command returns the following:. Once you test that your module is pwoered on and responding to your ATI request. It time to mode forward. . For sending and SMS these are the steps involved:. First, enter the command line ""AT+CMGF=1"" in the terminal to instruct the GSM/GPRS modem to operate in SMS text mode. Below is the response returned from the module after the execution of the command line ""AT+CMGF=1"":. Request: AT+CMGF=1Response: OK. You can alternately check the current test mode selected in the module by sending. Request: AT+CMGF=?. Response: +CMGF: (0,1)OK . Next, use the +CMGS AT command to send a text message to the SMSC. Suppose you want to send a text message to the mobile phone number +1234567891, you should enter something like this in a terminal program:. Request: AT+CMGS=""+1234567891"". Then, send the carriage return newline feed combo to the serial port of modem. The GSM/GPRS modem will send back a prompt formed by four characters. They are the carriage return character, the linefeed character, the "">"" character and the space character. If all characters are to be displayed, the characters you have sent to and received from the GSM/GPRS modem so far are:. Request: AT+CMGS=""+1234567891""<CR><CR><LF>><Space>. AT+CMGS=""+1234567891""Response: > . Here the serial port is waiting for you to type your text and send the data to the sms command. . So continue sending your string of characters to the command and then once finished, send the <Ctrl+z> characters to tell the module that the sms message is complete. This will trigger the module to send the sms to the SMSC. . AT+CMGS=""+85291234567""> It is easy to send text messages. <send ctrl-z here>+CMGS: 12. Response: OK . The OK corresponds to a successful sms delivery to the SMSC. Further the sms center will forward the SMS to the concerned target number.. So a quick sample function for sending sms would be. The 0x1a is the hex form of the ctrl-z command that needs to be sent to mark the end of the message string.. You should see the sms land in the number that you mentioned in the second gsm.printf statement.. Throughout this time, you can monitor your serial port log messages using the callback function and the data it returns. debugging is possible by simply reading the output in the cuffer inside the callback function.. For receiving SMS here is the At commands list:. I'll leave the code for this as an excercise for the reader. Remember, the callback function will return the input buffer on the serial port. so reading your sms would return the sms data in the callback function. :). Here is the AT commands set for sending TCP data over GSM:. The command set is pretty straight forward and you should be able to send the individual lines using the serial API printf statement. Remember to always terminate each command with the ""\r\n"" combo.. After the device is sent successfully, you can see the sent information on your interface of the Hologram Dashboard:. Important stats about the firmware will be present in the left hand side pane on the compiler called 'build':. The firmware is be default a combination of the softdevice for the nrf52 and the Mbed OS+app. The Softdevcie is nothing but the bare metal BLE stack provided by Nordic for its BLE chipsets. The Mbed online compiler will always choose the latest softdevice for you so you don't need to worry about the version being used.. Now lets flash the firmware.. The firmware is always a hex file. Our firmware wouldnt have the bootloader also in built which we will get to in the upcoming tutorials in much more detail. For now we will just flash the hex directly.. Open a commandline prompt. I will consider Ubuntu OS for this.. Run the following commands:. Your board should reset and now open your favorite BLE app on your android/ios phone/tab. I prefer the NRFtoolbox app. Install the app and scan for BLE devices. You should see the itracker show up on the app.. This firmware upgrade scenario involves uploading the application onto the board using a cable connection.. You will require nRFgo Studio to run this procedure. Alternatively, you can use a J-Link programmer.. Follow these steps to update Thingy using your own compiled application:. Follow these steps to flash the factory image:.",1
"Mabuhay! Darwin here… In this tutorial I will show you how to install an acrylic case for the Arduino Uno.. Read up about this project on . Mabuhay! Darwin here… In this tutorial I will show you how to install an acrylic case for the Arduino Uno.. . In this video I will show you how to install an acrylic case for the Arduino Uno. This case will protect your Arduino board from sudden unintentional misuse or accidents that can occur when making things using the board. It also gives some new looks for your board. I will leave a link indescription below where you can buy your acrylic case. So, let’s get started.. Arduino Uno | https://goo.gl/T1pRVk. Acrylic Case for Uno | https://goo.gl/kSeN8M. Screw Driver | https://goo.gl/FvbXoD. The acrylic case has a protective paper comes to it, to protectthe case from scratches. First, we must remove this so the transparent part ofthe case will show after this it’s ready to install to the Arduino Uno board.. The acrylic case has cut out design that follows the Uno board design, so it was easy to intuitively place the case pieces to the boardand fits to the case perfectly.. The acrylic case comes with bolts and screw that will use aslocking mechanism. There are two (2) types of screws that the case had. Firstthere was a four (4) short length size that will place to the board and to thebody of the case. Second was a four (4) long length size that will place to theedges of the case.. The screw driver will use to fasten the screw and bolts.. Now I completed the install the acrylic case in Arduino UNO board.. ....................................................... To give support on this channel.. Donate.. Paypal: https://www.paypal.com/paypalme2/dardelacruz/5. Bitcoin: 3HHaJVzMhAKX5NUc6cayo7xcCdKJov5MDg. Ethereum: 0x04ba643cFC5EBcC8E57B038d39Eec2E52ED85710. Like and Follow.. Twitter: twitter.com/dardelacruz. Facebook: facebook.com/darwindelacruzofficial.",1
This is for data storage in Excel.. Read up about this project on . This is for data storage in Excel.. . Video tutorial. .,1
"How to use HC SR04 to measure distance (with noise filter). . Read up about this project on . How to use HC SR04 to measure distance (with noise filter). . This simple program demonstrates how simple it is to use the HC-SR04 to measure distance with centimeter resolution.. The principle of operation is that of the sonar. Applying a pulse of 10 microseconds to TRIG, HC-SR04 emits an ultrasonic signal. When the reflected wave is received, ECHO signal is raised (0-1-0) for a time proportional to the time taken, outward and return. In our program all is managed by HCSR04 VAR. . The INIT is called with the pin number for pulse and echo (pin 4 and 5 that you can change). It sets the TRIG Method for the Echo pin and wait, till the and of the program, for computing the distance.. The TRIG does a very simple job: it computes the microsecond between the set (1) and reset (0) of the ECHO edge signal.. The main loop of the INIT method sends a pulse and waits for a reply (mTime not NULL) or a timeOut. The code has a two stage filtering:. The result value (distance) is shown in the following page.. The APP is contained in PowerBerry SUP (StartUpPackage) and is in executable source code that you can open/study/change with POWER-Ki WorkBench. . POWER-Ki and PowerBerry can be used freely..",1
"The Transmission model built using Lego Mindstorm has 3 speed modes, controlled through Internet using Microsoft IoT hub and Raspberry Pi. . Read up about this project on . The Transmission model built using Lego Mindstorm has 3 speed modes, controlled through Internet using Microsoft IoT hub and Raspberry Pi. . While going through the educational site for Lego Mindstorm NXT projects for my grand-daughters, I came across this website: http://www.nxtprograms.com/index1.html. Impressed by the 3 Speed Transmission with Clutch model, I decided to construct one. The model itself provides a 3 speed Gear train controlled manually by pulling levers for gear and clutch mechanism. The Accelerator is a very simple switch that only provides a software simulation of accelerating the speed to max. This provided a good way to teach kids on gear transmission, use of clutch etc. The basic model is provided below:. With a new found passion for Raspberry Pi, I decided to give this model a complete makeover by changing the manual transmissions to “Fly-by-wire” technology. This gives us the ability to control this through a computer. So manual controls were replaced with Motors for Gear changing and Clutch control. Accelerator is replaced with a software controlled Slider and an Index switch was added to keep track of current running Gears. Resultant modified model is provided below:. The completed project with the Raspberry Pi connected:. Now the next thing is to add a proper interface to connect to this setup. For this Windows IoT running on Pi was chosen. In addition, to control this from Internet, a separate Windows based program for controls was written. While the Transmission can be controlled locally, with the additional program, the user has the option of control through the Internet. . The screen for windows IoT is given below:. The optional Windows Controller to control through web is:. The controls on both the images are self-explanatory. The status texts provide IoT Hub messages. Microsoft IoT hub is used for message queue requirement for this project. In addition to Manual gear changes (through existing buttons of course), the transmission could be put on “Auto”. With “Auto” mode selected, the gear trains will automatically switch gears depending upon the speed (Rev Power- Slider control). . Raspberry Pi is used to drive the main motor. This gives us the ability to control the speed of the motor with a slider control. To control the motor Pulse Width Modulation (PWM) is used. Windows IoT is switched to Lightning DMA mapped driver to make use of hardware PWM. A simple H-Bridge Motor controller is used to interface the PWM to Motor. Also since the motor draws 9V which the Pi cannot provide, L293D dual H-Bridge IC is used to drive the motor. The width of the pulse itself is controlled by the ""Slider Control"", thus providing variable power to the motor. . For shifting gears, accuracy is required to a precision of 1 degree. Hence NXT itself is used to control the rotation. The Gear Shift Motor is connected to Port B of the NXT brick. For every 90 degrees turn of Gear Motor, Transmission is shifted to next gear. Thus if we start at Gear 1, a 90 degrees turn will shift the gear to 2 and another 90 degrees to Gear 3. The Gear Motor would by now rotated to 180 degrees. We can either retrace back to Gear 1 by reversing the motor or move forward by another 180 degrees to get a full circle. The Gears will be thus shifted as 1 - 2 - 3 - 2 - 1. The motor itself is switched-on by the Pi by providing a High pulse to the input Port 1 of NXT. When this is detected by the NXT, a 90 degrees rotation is provided.. Before the gear shift motor is engaged, the clutch motor is activated. This is connected to Port A of NXT Brick. This rotates to 180 degrees, which rotates a swivel base through worm gear. The Clutch motor is mounted on this swivel base and hence turns adequately to disengage the motor from the Transmission. Then the gear shift motor is activated. When the gear shift motor completes its process, the clutch motor reverses back to original position. The entire process of clutch motor and gear shift motor operation is handled by NXT program.. Though the Gear Shift can work full circle using the above strategy of 90 degrees rotation per Gear shift, occasionally proper synchronization of the gear becomes tedious. Also when you want to shift the gears backward, say for example shifting from 1 to 2 and then 2 to 1, using just the forward motion, you will have to engage the gears thrice, before getting back to 1. To solve this problem, the gear shift motor itself can be rotated backwards if needed. To do this an high pulse is sent to Input Port 2 of NXT. Program running in NXT on detecting this pulse, will reverse the gear shift motor thereby effectively shifting the transmission backwards.. The Pi program has to keep track of current Gears that the transmission is using in order to decide, when to reverse the Gear Shift motor. More useful when ""Auto"" Mode is used for transmission. Typically “Light Sensor” will do this job. However I used a switch (Touch Sensor) for this purpose. The output from the switch is read by the Pi and then resets the Gear variable to 1 when this switch is pressed. The Boolean GearMovement is also set to true. . Note: If GearMovement is false, then the gears are engaged in reverse. . Two modes are provided, with ""Manual"" mode as default. In ""Manual"" mode the user controls shifting of gears. In ""Auto"" mode, depending upon the speed, the Gears are automatically changed.. To make the project more interesting, I have included a small Windows based program to control the Transmission through Internet. For this Microsoft IoT hub is used. On startup Raspberry Pi registers itself with the IoT hub as an IoT device. A status message provides whether the connection has happened successfully. Once connected, the user can check the ""Internet Connection"" ""Check Box"", after which the application is ready to receive information from the net. . Windows client, will send messages to the IoT Hub using AMQP (Asynchronous Message Queue Protocol). Depending upon what button is pressed, appropriate message is sent. This is then decoded by the IoT device and then acted upon. . A working Demo of the project can be found in YouTube:. .",1
"Start exploring your new development board in less than 30 seconds!. Read up about this project on . Start exploring your new development board in less than 30 seconds!. Ready to get started with the AVR-BLE or PIC-BLE? These new development boards from Microchip are pre-configured to integrate with a custom interface in the LightBlue® App.. Follow along to get started in under 30 seconds!. Power the board by connecting a Micro-USB cable or inserting a CR2032 battery.. Look for the peripheral with the Microchip logo.. Pro tip: launch the BLE board to the top of the list by tapping the sort button.. The custom interface enables you to view accelerometer and temperature data, toggle LEDs, view the push button state, and read/write serial data..",1
"A simple IoT (Internet of Things) experiment to monitor a potentiometer value from ESP8266 NodeMCU using Wia IoT platform. Read up about this project on . A simple IoT (Internet of Things) experiment to monitor a potentiometer value from ESP8266 NodeMCU using Wia IoT platform. A simple IoT (Internet of Things) experiment to monitor a potentiometer value from ESP8266 NodeMCU using Wia IoT platform (http://wia.io). Simply create a space (like a dashboard), add a device and then send the JSON data to Wia event. ^_^ #newbie #simpLINnovation. .",1
"Every get to the store and then wonder if you have any milk? With the Smart Grocery List, this wont be a problem any longer.. Read up about this project on . Every get to the store and then wonder if you have any milk? With the Smart Grocery List, this wont be a problem any longer.. This project was intended to create a smart grocery list connected to the IoT by using a sensor to determine if the item for which the sensor is designed is there or not. Then, you would be notified via notification that the item is missing and it will be automatically added to a Google Sheets grocery list. This is done using a photoresistor to detect light levels inside the fridge which lets the one Photon know when the door is opened or closed. After the door has been closed, This triggers the other Photon setup, and then, after a delay, the LEDs (on-board and external) are turned on and then a reading of the photoresistor is taken. The returned value can be interpreted to determine whether the item, Milk in this case, is there or not. If it is there, the reading will be higher due to the light reflected off of the container. The code was setup to where it would not publish repeated events, therefore you would not get an event saying that the milk was not there again until you replaced the milk. An IFTTT applet was set up to publish a line to a Google Sheets spreadsheet (shown below) every time and event was published saying that the milk was not there, as well as sending a notification to my phone.. . . . . .",1
"Basic sensor (light sensor) data collected using an Intel Edison & sent using the SIGFOX network.
. Read up about this project on . Basic sensor (light sensor) data collected using an Intel Edison & sent using the SIGFOX network.
. I had the chance, at an Intel IoT Hackathon taking place at Usine.io in Paris, beside an Intel Edison Arduino board and a bunch of Grove sensors/actuators, to also get the new Akene board from Snootlab. . Thanks to the Intel IoT guys, Nicolas from SigFox and all the staff of BeMyApp for this Hackaton…. I decided to build a small light sensor station, with the Intel Edison board, the Grove shield, the SigFox Akene Shield, and an I2C Grove TSL2561.. This station will upload, through the SigFox network about every 10 minutes, 3 different values (in lux) relating to that 10 minutes period: the arithmetic average light, the minimum and maximum light.. That will allow to know how the light fluctuate around its average value for this period of time, and therefore to get the big picture on how the sky could be cloudy (if some wind at least to push the clouds…).. I will use Python for that project.. I assume that the Intel Edison environment is ready for Python, and a password is set on the Edison in order to open SSH sessions and also SFTP to upload the python code.. I am using OS X, and will use CoolTerm for communication, and the excellent TextWrangler as code editor and code uploader (SFTP).. . > python sensor.py. The Akene board is an experimentation Arduino shield from SnootLab with the TD1208 SoC (System on Chip) on it. The TD1208 is a SigFox-certified radio transceiver combined with an ARM Cortex M3, which implements the telecommunication modem stack for sending values to the SigFox operated telecommunication network, and also includes I2C capabilities for IoT sensors, beside its serial modem link.. SIgFox
 services rely on a LPWA (Low-Power Wide-Area) network currently 
deployed in Western Europe, San Francisco, as well as other countries or
 cities. The SigFox protocol is designed for small messages and its 
technology is focusing on energy efficiency for devices clients and large area coverage for each infrastructure base station.. The SigFox network allows each device to send up to 140 messages per day (i.e. every 10mn), each of them up to 12 available bytes i.e. 6 short integer values (the timestamp and the unique device ID are also transmitted in addition).. More informations: http://makers.sigfox.com. . The Akene shield can be used as a modem, so we will first connect it to the Edison that way:. • Ground to Ground (Black wire). • 3.3v to 3.3v (Red wire). • serial Rx (pin 0) of Edison to Tx of Akene (pin D4) - Blue wire. • serial Tx (pin 1) of Edison to Rx of Akene (pin D5) - White wire. . We can consider the TD1208 as a modem.. The PySerial package has to installed.. python -m serial.tools.miniterm. We use miniterm (part of PySerial) - and specify the serial port: /dev/ttyMFD1 - to send direct commands, like:. • AT. which should reply OK (otherwise there is a problem),. • AT&V. which reply by the TD1208 identification,. • AT$SS01234567. which send the 01234567 message to the SigFox network (the maximum hexadecimal digits is 24, i.e. 12 bytes), and. • AT?. which return the list of commands available.. To exit miniterm, on OS X with a french keyboard: CTRL 6. . This is a fast adaptation of a python command dedicated for another TD1208 board (RPISIGFOX from SNOC) and found on internet.. Just to mention that, for using serial with Intel Edison, . • it is prior necessary to initialise the port / pins which will be used, in our case /dev/ttyMFD1 (pins 0 and 1):. • the port is automatically open when calling serial.Serial(....... You can use the command that way:. python sendsigfox.py 01234567. which will send the message 01234567 to the SigFox network. . >python sendsigfox.py 346723. . No special difficulty there also, just to mention:. • Each data sent is a short integer of 2 bytes. the valueAvg, valueMin and valueMax are therefore 6 bytes, i.e. 12 hexadecimal chars string. As the setup from SigFox in the case I am using is done in order that data are resent to actoboard.com, and that actoboard.com currently accept data in LittleEndian byte order, each data is, prior to be sent, transformed accordingly.... • the Akene shield is fully plugged on top of the Grove shield, and in order to fit the wiring of the serial of Edison on pins 0 and 1 and the serial of Akene on pins D4 and D5, straps has been used (0 to D4: White strap) and (1 to D5: Yellow strap), see first picture... That mean a clean wiring but no possibility to use Pin 4 and 5 of the Edison.... . python sensor2sigfox.py. . exasens.",1
"A boombox with a Linkit ONE controlled via WIFI. Read up about this project on . A boombox with a Linkit ONE controlled via WIFI. Not just a music player controlled via a phone, but with multiple phones.. . . The LinkItBoom application is a lightweight App that uses the WiFi network to send commands to the LinkIt ONE, where all the music is stored.. Showing:. If you want to create your own project with an app(Android) and a LinkIt ONE connected via WiFi: Check out my second project: Arduino and Android (also part of the LinkIt ONE challenge). The LinkIt ONE Software:. The Arduino application is built to play music till infinity. The songs are stored on a SD card, along with a list of the songs. When the Android App requests a 'page' it returns a value(volume/song) and does something with the request(next song, volume up/down, pause/play). If there goes something wrong with the WiFi stuff, it keeps playing music.. The Android Software:. The Android App is build to send requests to the LinkItONE and show the values on-screen. The app is very lightweight(1 MB). At startup it checks if you previously have used the app, if not, sends you to the Setting page to set the IP of the LinkIt ONE, which you can also change later. The UI is as simple as possible, with a few buttons and two textviews. The app isn't required, but it is the only way to communicate with the LinkIt ONE. The app should work on every device, because it is tested on the oldest possible(Android 2.3 Samsung Gio) and the newest possible(Android 6.0 Nexus 6P).. LinkIt ONE:. FIRST: Install the Arduino IDE and drivers according to the dev page. Open the arduino code from the source and change the WiFi SSID(WIFI_AP) and the password(WIFI_PASSWORD) and if needed the WiFi authentication type(WIFI_AUTH).. Then connect the board to your PC, with the SD/SPI to the SPI side( It also works on the SD side, but it is really buggy ) and upload the code.. Then get a SD card and put all the music you like on it and put the createlist.exe(in the linkitboom folder) file on it and run it(windows only). This will create a file called TEST.TXT with all the music names. You can also create your own list, just put all the file names in the TEST.TXT file and add spaces(also after the last one) between them, without returns!. If you have more than 50 songs, increase the 50 of the initialization of the variables(line 19).. Then unplug your LinkIt ONE and insert the SD card and push the SD/SPI switch to the SD side. Also add the WiFi/Bluetooth to the board, middle connector. Also don't forget to add a speaker, or it will be very silent.. When you power up the board it will first read the txt file and start the first song, this takes around 8-15 seconds, and then boot up the WiFi server.. Running on the battery it can run very long( I have been using it every day(~10 days at least) for an hour and it still runs).. Android App:. Copy the app-release.apk file from the root of the downloaded zip to your Android Phone and install it:. Then start the app, which will directly send you to the Setting page, where you need to enter the IP address of the LinkIt ONE, which you can find with apps like Fing. You need to have the LinkIt ONE up and running.. After the initialization the main page will pop up. Click reload to retrieve the current played song. Now you can use the rest of the buttons, Volume UP/DOWN for the volumes and PLAY|PAUSE/NEXT SONG for the current song being played. If the LinkIt ONE falls of the WiFi network, the app is pretty much useless, then you need to reset the board via the button at the side. . You can use the app on multiple devices at the same time, but a song is nexted on phone 1, you don't see that on the other phones, the same with the volume and the current song when it is at the end.. If you want to change anything of the app, you need to install Android Studio and open the project. There are also comments in the Android Code..",1
"Monitor your ThingSpeak channels and be happy.. Read up about this project on . Monitor your ThingSpeak channels and be happy.. You can use a computer or your phone to watch your ThingSpeak channel values, but it's nicer and cheaper to have a little module that will do it for you without needing to log in or swipe something. You probably don't get enough time watching TV, so here's an old-school looking solution to watch your ThingSpeak channels. . First: Make the box. I used TinkerCad to make the file and 3D Hubs to print, for a total cost of about $25.. . . The pegs on the back of the TV case were originally supposed to be screw holes, but the pegs fit into the holes snugly on the matching part, and they were much easier to use for prototyping than inserting tiny screws.. Second: Buy the Wemos D1 Mini, momentary push button switches, some size 0 button head screws, the OLED display, and some wire.. Third: Solder the pins as shown in the schematic. Use the 1 k resistors for the push buttons.. Fourth: Create a ThingSpeak account and channel if you don't already have one. Check out the getting started tutorial if you need some help. You will need your User API key and MQTT API key from Account > My Profile.. Fifth: Download the Arduino IDE if you need it. . .",1
"Started with a tutorial and customized it with my own questions.
You have three lives to answer ten questions correctly.. Read up about this project on . Started with a tutorial and customized it with my own questions.
You have three lives to answer ten questions correctly.. I was tinkering with the raspberry pi and tried to put the Alexa Voice Service onto it. After successfully doing so, I looked into tutorials on creating custom skills. I tried the reindeer trivia game tutorial. I decided to customize it to answer pokemon questions instead. Instead of answering ten straight questions, I made the game grant the player three lives. I plan to expand on this and allow the game to handle two players. .",1
"How to make a simple monitoring device for your country house.. Read up about this project on . How to make a simple monitoring device for your country house.. One winter weekend I went to my country house, and found out that it was very cold there. Something had happened with electricity and RCD breaker had switched it off, and the heating went off too. I was lucky I came there, otherwise in several days everything would had been frozen which is very bad for the pipes and the radiators.. I had several Raspberry Pi’s around, and a thermal sensor, so I thought — why don’t I make a simple monitoring device?. Instructions below assume you have a Raspberry Pi with Raspbian and network connection set up. In my case it is Raspberry Pi B+ with Raspbian (2018–06–27-raspbian-stretch-lite).. How to connect a DS18B20 temperature sensor? Just google how to do this, and you’ll see a lot of pictures like this one: . How to connect a DS18B20 temperature sensor? Just google how to do this, and you’ll see a lot of pictures like this one:. In my case I had Black, Yellow and Red wires. The black is ground, goes to Ground pin, the red is power — goes to 3.3v pin, and the yellow is data — should go to GPIO4 pin, with 4.7 kOm resistor connected between data and power.. Note, you can connect several sensors in parallel (they are digital, and has different addresses), you need only one resistor.. After connecting your sensor, you should enable 1Wire in the raspi-config:. Go to 5 Interfacing options, enable P7 1-Wire and reboot.. Then you can test if you can see the sensor:. You should see something like this:. 28–00044eae2dff is our temperature sensor.. Hardware is ready. Now I need to set up the monitoring part. I need something that would show me the data and notify me if the device is disconnected for a while or there is no power, or the temperature is low. Obviously this cannot be raspberry pi itself, there should be some server or service in the internet that monitors my device.. I can create a simple server, get a hosting and set everything up, but honestly, I don’t want to. Luckily, somebody has thought about this already and created cloud4rpi.io — a cloud control panel for your device.. Cloud4RPi provides a service that let your device send and receive data using MQTT or HTTP protocols. They have a client library for Python, so I’ll use Python.. Python examples that comes with Cloud4RPi service already contains code for DS18B20 temp sensor.. So I went to https://cloud4rpi.io, created an account and added a new device there. The device page has a token — a string that identifies the device, and which should be specified in the program that sends data.. To begin with, it is always a good idea to update a package manager and upgrade packages (note: it can take hours if you haven’t upgraded for a while):. Then, install git, Python and its package manager Pip:. Then, install cloud4rpi Python library:. Finally, i’m ready to write my control program. I start from example available at https://github.com/cloud4rpi/cloud4rpi-raspberrypi-python. The main program file is control.py —  I need to modify it for my needs. First, edit the program and paste a token:. Find a line DEVICE_TOKEN='...' and specify a device token there. After that I can simply run the program:. It works and reports a temperature in RoomTemp variable:. Note that it discovers all onewire ds18b20 sensors . and uses the first found sensor:. Ok, that was easy, because the sample program has everything that is required to work with ds18b20 sensor on Raspberry Pi. Now I need to find the way to report the power status.. Next thing I want to monitor is UPS status, so if there is power outage, I will know about it before everything disconnects.. I have an APC UPS with USB control, so I quickly googled and found that I need apcupsd. http://www.anites.com/2013/09/monitoring-ups.html. I tried several times to install it via apt-get, and it was not working for me for various reasons. I’ll show how to install it from the sources.. Then I edit apcupsd.conf to connect to my UPS via usb.. Now I can plug USB cable from UPS to RaspberryPi and test if UPS would be found.. It should give you no error messages.. Now sevice apcupsd should be started:. To query UPS status I can use a status command:. And it would output something like this:. I need a status — which is the “STATUS:” line.. Cloud4RPi library contains a module rpi.py that returns Raspberry Pi system parameters such as hostname or cpu temperature. Since all those params are results of running some commands and parsing output, it also contains a handy ‘parse_output’ function that does exactly what I need. This is how to get my UPS status:. To send this status to cloud4rpi, I need to declare a variable UPSStatus and bind it to my ups_status function:. Now I can run my program:. And I can immediately see my variable at the cloud4rpi device page:. Everything is working, and now I need to prepare my device to unattended mode.. To begin with, i’m going to adjust time intervals. Poll interval defines how often the program checks for temperature and UPS status — i set it to one second.. Results are sent to the cloud every 5 minutes, and diagnostic information — every hour.. When UPS status changes — i don’t want my device to wait for 5 minutes, and I send data immediately. So I have slightly modified the main loop and it looks like this:. Testing: run script:. And I can watch UPS status on my device page:. If I turn off UPS power, status changes in a couple of seconds, so everything is working.. Now I need to start apcupsd and my control.py on the system startup.. Apcupsd service is old and to start it on modern raspbian, I should modify /etc/init.d/apcupsd file, by adding these lines the somewhere at the top:. Then enable the service:. Then start the service:. Now apcupsd will be started on the system startup.. To install control.py as a service, I used the supplied service_install.sh script:. an now I can run control.py as a service:. Now service is started and it shouls survive a reboot.. Cloud4RPi lets me set up a control panel for my device. You can add “widgets” and bind them to device variables.. My device provides two read-only variables — RoomTemp and UPSStatus:. I added 3 widgets — Number for RoomTemp, Text for UPSStatus and a Chart for RoomTemp:. I can set up alerts, so I receive an email when the temperature is out of specified range, UPS went offline or device itself does not send data when it should.. Now I can be sure my country house is ok, and I can be notified when something is wrong, so I can phone neighbours and ask them to check what is going on.. .",1
"Get notifications by email when your door has been unlocked. . Read up about this project on . Get notifications by email when your door has been unlocked. . Hello again! In this tutorial I will show you how to easily set up your LightBlue Bean and Node-Red server as a method to send notifications via email when a door has been unlocked during a specific time interval. The main concepts of this tutorial will include:. Let's get started!. The LightBlue Bean will be attached to the standard switching lock on your desired door. Once firmly attached to the door, the built-in accelerometer of the Bean will be used to determine the current x, y, and z acceleration when the door is in the locked position. The acceleration that is being exerted on the Bean is of course due to gravity. These values should be marked down and remembered for later. Then switch the Bean to the unlocked position, and mark down these values for later. Basically in the locked position the Bean will experience an arbitrary gravitational force of ""g"". When the Bean is in the unlocked position, it will experience a force of ""-g"". . Some may be thinking this is a kind of hacky solution, but this is a solution that involves not having to buy some fancy new IOT lock just to know if someone opened a door. Likewise, it doesn't involve some circuit that will have to be duct taped to the door frame. Once the Bean has been placed in the unlocked position it will send a scratch characteristic to the Node-Red server telling it the door state has been changed. When Node-Red gets the notification that the door state has been changed (through the LightBlue Bean node), it will send an email to the user. Keep in mind that this may not always be useful as there are certain times of the day where you will know when the door has been unlocked because you are there. This is why an inject node with a time interval is used. That is pretty much it! On to the fun part!. Last year I created a very simple tutorial on how to install new Node-Red nodes, specifically the LightBlue Bean nodes. This can be found here. This tutorial also includes a script that once run will install Node-Red and the LightBlue Bean nodes through the terminal. If you are new to Node-Red, I highly suggest looking at my tutorial, 3 Steps to Installing Node-Red and Bean Nodes on Mac OS.. As you know, or are about to find out, the Bean has a built-in accelerometer sensor. There is a class called AccelerationReading that can be used to keep the values of the Bean's acceleration. To get the Bean's acceleration values there is a function in the Bean class called getAcceleration(). Therefore to use get the Bean's acceleration data and store it use the following line:. The AccelerationReading class has a property for x-axis, y-axis, and z-axis. To read a specific axis, use: acceleration.xAxis. This is a good time in the tutorial to determine the values of the Bean acceleration in the locked and unlocked position. . One of the 3 accelerations should become the opposite of what it was before. For me it was the x-axis acceleration. In the locked position the x-axis value was negative, however, in the unlocked position the x-axis value was positive. This is why in my code I have a check for if the x-axis value is positive. . The next thing to do is send the current state of the door to the Node-Red server. The function to do this is a method in the Bean class called setScratchNumber. This method takes in a number (the Scratch Number) and a value (the data to send). It is used as follows:. To get a reminder of how to send scratch characteristics and how they work, check out my previous blog: Getting Started with Bluetooth Low Energy using Xamarin, and check out the Arduino Code section. The LightBlue Bean documentation on Scratch Characteristics can be found there as well as how to use it.. Now it is time to move on to the Node-Red part of this tutorial. . In order to not send a million emails when the door becomes unlocked (and stay unlocked), there must be some kind of flag or counter that will be switched on once the door is initially switched to being unlocked. This value should also be reset once the door is switched back to locked position. Due to Node-Red's flow structure it is hard to have any sort of memory within the actual flow without some very shady logic. Luckily, they have already thought about this for us. To add the global variable follow these steps:. As stated before this is important to keep the track of, if an email was already sent or not. If this is not added then Node-Red will continuously send emails as long as the door is unlocked. In the Node-Red code added to this blog (can be found here to be imported into Node-Red) there is a function called ""isUnlocked"" that takes care of the logic for the email to be sent or not. The value from the Bean's scratch characteristic is a parameter to this function. If the value is 0 the door is locked, if the value is 1 the door is unlocked. The output of the function is 1 if the email should be sent and 0 otherwise. So the logic is as follows:. This logic is found in the isUnlocked node of the flow provided in this blog.. In this tutorial the read scratch node is used:. Open and import into Node-Red the JSON code provided from this tutorial (found here). Notice the node named ""Bean Read Scratch"". Double-Click on the node to open and see its parameters. In order to work it needs a Bean to be connected to, and scratch characteristics selected to be outputted. . The last piece of the puzzle is to send the email! Double-Click on the node called ""Warn User"". The following will pop-up:. I used a gmail account for my application. I filled the ""To"" parameter with the account I was going to send it to, the ""Server"" parameter was ""stmp.gmail.com"" for gmail, and the ""Port"" parameter was ""465"". The UserID and Password parameter were just my gmail account credentials. Once everything is filled press ""Done"" because now you are also done this tutorial! Virtual high-five! . Double Click on the Inject Node called ""Check Locked Door"" and change the time interval to what you need. . With everything now completed press ""Deploy"". The LightBlue Bean node will start searching for the Bean specified so make sure the Bean has the battery in it. The code included in this project has a check for if the Bean is connected and turns the on-board LED green when it is (The node itself will also say ""connected""). This can be seen in the image below:. In the above image, the Bean is in the locked position and therefore no email has been sent yet. Once I tilted my hand to the right (into unlocked position), I received an email instantly that notified me the door was unlocked, and I only got ONE email. When I first made this flow I sent myself 30 emails because I did not have the global variable. The email is shown below.. The tutorial went over the topics of downloading new Node-Red nodes, using global variables in Node-Red, sending emails in Node-Red, and receiving data from the Bean in Node-Red. In addition, the tutorial covered how to read the built-in acceleration of the Bean and how to set the Bean scratch characteristics. If done correctly the Bean and Node-Red will work synergistically to send notifications via email when the designated door is unlocked during the specified time interval. I hope all of you enjoyed my tutorial, thank you for making it this far! I encourage you to leave any questions or comments below. I would more than happy to answer them. Thank you! .",1
"A Creepy Skull greeting trick or treaters with creepy/scary sound bites. Uses Raspberry Pi and PIR Sensor. Read up about this project on . A Creepy Skull greeting trick or treaters with creepy/scary sound bites. Uses Raspberry Pi and PIR Sensor. For some time I have been wanting to create a fun, engaging project with my two daughters, age seven and nine. As summer came to an end, they both began talking abort costumes for Halloween, and we even have a kind of get-together in one of their classes – with costumes and all.. Traditionally this is not a massively celebrated holiday in Denmark, but it’s on the rise and more and more are trick or treating. So it struck me, that we needed to have some device that would detect whenever someone approached the front door, they would be greeted by something spooky and/or frightening. Enter Skull!. I will be placing the RPi along with a PIR Sensor inside the skull. On account of size vs volume, the loudspeakers will not fit inside. I bought a standard set of computer loudspeakers which even came with a subwoofer, at a bargain of just DKK 200 ~ $30. I’ll have none of that portable speaker stuff – I want a lot of dB.. A bunch of nasty and creepy screams have been downloaded,  and will be used those to scare of any trick or treaters. Only thing to keep in mind is, the Windows 10 Core supports only .wav files out of the box.. In basic steps, the code will fire up, start listening to GPIO(4), where I hooked up the PIR sensor. Once the sensor detects a change, an event gets triggered, and a random sound bite will be played. After each sound bite, there is a period of 5-10 seconds of non-detection, where we ignore the sensor’s readings. After end non-detection, the PIR sensor reading can once again trigger a new sound bite.. The PIR Sensor is real easy to work with, as it requires only power, ground and then you get the read out.. I will post a video of the skull in action, once Halloween is over. This is how the Skull looks with the PIR Sensor attached with rubber bands. It’ll turn Cyberdyne eventually…. Get Code Here. PS: I have experienced a few hiccups during even this simple development process. Deploy from Visual Studio is as touchy as a teenage girl on a first date. It’s clear that development capabilities on the IoT platform is in the early stages. Error messages are funny, at best. Often they are really, really confusing.. The one thing I was spending most time on, was actually to get the BackgroundMediaPlayer to play. Turns out the attribute AutoPlay has to specifically be set to false. WTF?!. Well, here is the setting for the Skull – I am thinking it sitting right between the two pumpkins.. Happy Halloween everyone!.",1
"The idea is to basically monitor our rooms continuously and if no one is present in the room, the system will turn off the lights and fans.. Read up about this project on . The idea is to basically monitor our rooms continuously and if no one is present in the room, the system will turn off the lights and fans.. So, this project is basically a smart home monitoring system that gives you the access to your home on your own mobile phone.. Now, there is a lot a electricity loss caused when we accidentally keep the lights, fans, AC or any other daily appliance of our home ON. This is a common scenario and leads to a massive electricity loss of a whole city is considered for example.. So, what my project does it that the Walabotsensor continuously monitors the room for any human presence it, and when it senses no human presence in the room, it sends this data to the raspberry pi which is connected to my mobile app through the internet. Now the pi will send this information to the app which will then give a notification on the user's phone stating that which appliances are on.. Now the user will have a option to switch them off in the app itself which makes the task a piece of cake. . This way the will be massive energy saving which would be advantageous to both the user and the provider. .",1
"Moisture sensor tells an LED to blink and uses IFTTT to send an message to your phone when your plant needs water.. Read up about this project on . Moisture sensor tells an LED to blink and uses IFTTT to send an message to your phone when your plant needs water.. . Most people have one or more potted plants in their house that they need to water on a regular basis. The problem is that unless your a professional florist, you don't really know when each plant needs to be watered. To fix this problem we developed a system that sends you a notification on your phone when your plant is getting thirsty. . First, the moisture sensor was wired to the Photon and placed in the potted plant. The Photon was then programmed to publish an event called “moisturePercentage” when the sensor read a moisture level that was less than 20. Meanwhile, the Electron would subscribe to this event, and when it was published and would publish its own events called ""plantStatus"" and ""handshake""; as well as change the value of a variable called thirsty from true to false. IFTTT would subscribe to “plantStatus” and send a notification to the user’s IFTTT app, while the Photon would subscribe to the ""handshake"" event and would stop publishing “moisturePercentage” when it heard it. In the electron code, there was a while loop that would cause its LED to start blinking while the variable thirsty=true. This provided another form of notification for the user in case they did not have their cell phone with them. When the plant was water, the moisture level would rise above 45 causing the Photon to publish another event called ""plantWatered"", which the Electron would subscribe to. This would cause the thirsty variable to be set to false, stopping the electron LED from flashing. After some time, the plant would absorb the water and the process would start all over again. . . We decided that it would be interesting to see how the moisture level changed as the plant absorbed the water. So we used things speak to plot the moisture level every time the Photon recorded it. We found out that the blood-root plant we had chosen drank the water we gave it very quickly and would have to be watered at least once every other day. . . .",1
"Easily make a Raspberry Pi device controlled from a smart phone over the Internet! Send and receive data!. Read up about this project on . Easily make a Raspberry Pi device controlled from a smart phone over the Internet! Send and receive data!. Welcome back folks! This is another Hackster.io project of mine! And today I'm gonna show you guys, my hourly build with Raspberry Pi and www.TaurusSystem.com powered Internet Of Things device.. Before getting started, all you need is an AlfaTech account for managing your device remotely! Visit www.TaurusSystem.com for getting started.. You can fill up all the sections provided except the SERIAL one. SERIAL is basically a unique key assigned to different projects.. NOTE: One account can have multiple projects, each project requires a unique SERIAL!. SERIAL is provided by the administrators of this platform, so for getting one, you need to shoot a mail at alfatech@inatel.br, requesting a SERIAL for your project and they'll reply ASAP! Or you can send a personal message to @Leoribg on Hackster.io. They are really helpful, believe me.. For more info, visit here! When you have your SERIAL and account running, you could see something like this:. . Now you can enter your dashboard to manage Sensors, Digital Actuators, Analog Actuators, etc.. Now 50% of the project is done. Let's complete another 50! This complete IoT platform works with a series of URLs which makes HTTP requests to the platform!. Let's get these URLs known:. In the above URL, replace SERIAL with your key. Let's understand component=xxyy.. xx is the component name:. yy is the component number:. Easy, huh? value=0 is the initial value, and should remain the same while creating a new component. For this tutorial, open up a new tab in your browser and enter the following link:. Replace SERIAL with your serial number and press enter, and a new sensor component created with this message!. Now for updating sensor, you need the following URL: www.TaurusSystem.com/ws/webresources/Sensor/set?key=SERIAL&&sensor=2001&&value=x. Replace SERIAL with your serial number. value=x is the sensor value, so if you replace x with 10 and visit your dashboard, you could see sensor value updated to 10! If you see above picture, you can find LAST VALUE & CURRENT VALUE, they are basically the sensor value, and it's also beautifully plotted on a graph. So for a test, open a new tab and enter the following: www.TaurusSystem.com/ws/webresources/Sensor/set?key=SERIAL&&sensor=2001&&value=10. Press enter and you could see the following message on screen:. But we need this to work on our Raspberry Pi! Python to the rescue!. Download the usoniciotstream.py & usoniciot.py from the attached file, and put them in the same folder!. Red wires are +5V. Black wires are GND. Green wire is ECHO. Blue wire is TRIG. Resistor is of 1K. Easy? Yeah! That's it, done with the Hardware!. Open up the usoniciot.py you have downloaded previously, and do the following edit:. Replace key = 'SERIAL' with your serial number and done. Run the python file and great to go! Run the file with following command:. That's it! Now visit www.TaurusSystem.com and login into your dashboard, you can see the sensor data being updated.. If you really find this helpful, do follow at Twitter @RiSiOfficial for more similar projects.. Thanks for Reading! And thanks to AlfaTech! .",1
"Create your own headless music player with the PocketBeagle and Mopidy!. Read up about this project on . Create your own headless music player with the PocketBeagle and Mopidy!. Have you ever encountered a minor inconvenience and decided to over engineer a solution to it? Do you enjoy starting projects and then getting way over your head? If you do, this is the project for you! . My friends and I have love to play music at social gatherings but hate slaving a laptop or a phone to an external speaker to play music. We need a small discrete device that can play music off of our favorite streaming services. . Enter the Spotify-Pod. A small single board computer, an external audio card, a small LiPo battery and a small LCD screen crammed inside of the casing of an old Ipod (clickwheel model). This small device is exactly what my friends and I are looking for. Unfortunately, I was unable to create the final version of the Spotify-Pod as the project ran into multiple technical hurdles... More on that later.. A fritzing diagram of the project is included below:. . Fritzing diagram? I meant spaghetti monster. There are quite a few connections between the PocketBeagle and the other components. In addition, the eagle eyed among you might notice that the Pimoroni pHAT DAC is not in the Fritzing diagram. Unfortunately, the pHAT DAC is not open source, so there is no Fritzing Part available. Instead, I used a placeholder board that has a similar pinout as the pHAT DAC. A simpler schematics view can be seen below:. . Once my PB was all wired up, I need to install Linux on an SD card. For this project, I used the Debian 9.5 IoT image from BeagleBoard.org (SPOILER ALERT: This isn't the best Linux Distro to use for this project. Again, more on that later.). . To setup Linux on my PB I followed BeagleBoard.org's excellent tutorial: https://beagleboard.org/getting-started#update. Next, I connected the PocketBeagle to the internet. Ofitselfso.com has good tutorial on sharing Window's networking and configuring the PocketBeagle to connect to the internet: https://ofitselfso.com/BeagleNotes/HowToConnectBeagleboneBlackToTheInternetViaUSB.php. I would suggest scripting the majority of the commands from Ofitselfso.com's instructions. My script is only four lines long and runs every time the PB boots up. . I also setup a WiFi dongle on my PocketBeagle, so it could run Mopidy without being connected to my laptop. To do this I followed this tutorial from teachmemicro.com: https://www.teachmemicro.com/pocketbeagle-wifi/ . Adding a micro-USB connector to the PocketBeagle ended up being necessary to do the work around later in the project. If you're following along, I'd suggest doing this step. . For this project, I also need to load Python, Adafruit's BBIO Python Library, and Robert Nelson's BeagleBoard Boot Overlay program onto the PocketBeagle. To install Python, I used the following lines of terminal code:. Next, I installed Adafruit's BBIO Python Library:. Finally, I copied Robert Nelson's Boot Overlay program onto my PB:. I'll use this later to create device tree files for the pHAT DAC and the TFT LCD screen. . In order to stream music services to the PocketBeagle, I used Mopidy, a python music server. Mopidy is a great program for this project. It's open source and its documentation is very extensive. In addition, Mopidy allows users to install ""extensions"" written by other members of the Mopidy community to add features to the standard build. I used the Spotify, Mopify, Touchscreen, and EvtDev extensions in this project. First, I needed to install Mopidy's core. To do this, I used the following lines of terminal code:. This code will add Mopidy's GPG key and APT repo to my package sources in addition to installing Mopidy and all its dependencies. Once Mopidy's core is installed, I can start downloading extensions. First off, I installed Mopidy's Spotify and Mopify extensions. Mopidy-Spotify allows Mopidy to stream music from Spotify, and Mopidy-Mopify builds the HTTP pages that I will use to control the Mopidy music server. Here is the installation terminal code:. Next up, Touchscreen and EvtDev extensions. These two extensions are additional Mopidy frontends. The Touchscreen extension will display display track info on the TFT LCD screen using Game/SDL, and the EvtDev extension will allow us to use the Ipod's clickwheel to change and pause tracks in Mopidy. Supposedly. First, I installed Mopidy-Touchscreen, Pygame, and Pygame's many many dependencies:. Next up, EvtDev:. I will admit that EvtDev is a Mopidy extension that I do not know very much about. My original plan was to use this extension with my backwards engineered Ipod clickwheel to control tracks in Mopidy. While this project still isn't at the Ipod clickwheel stage, I went ahead and got it anyways. However, I received the following error message trying to install it: . I managed to resolve this error by uninstalling python's distribute package and updating my setuptools package:. However, I am worried that this broke the install of the EvtDev extension. Whenever I ran Mopidy, I recieved another error code: . Unfortunately, I haven't been able to spend time to decode and fix this error code yet. Consider this Mopidy extension optional.. Now that I have Mopidy installed, I need to configure it properly. The mopidy configuration file lives in /home/debian/.config/mopidy/mopidy.conf. Each extension will have its own configuration setting to change. I have placed my mopidy.config file in my Github as an example. Of special note, for Mopidy-Spotify I needed to get my Spotify Device Username and Password and authorize Mopidy to run on the PB. For more info take a look at these links:. Now that we have Mopidy configured and ready to go, I need to make sure that my PocketBeagle can output sound. To do this, I created a device tree for the pHAT DAC. The pHAT DAC uses a Texas Instrument's pcm5102a sound chip in a 3-wire configuration. I used the following resources to help write the device tree file:. You can find the device tree file in my Github as the PB-PimorroniPHAT_05.dts file. Once my .dts file was written, I needed to use Robert Neslon's program to make a .dtbo file. I used the following terminal lines to copy my .dts file into the bb.org-overlay directory, make my .dtbo file, and copy it into lib/firmware:. Now that my device tree blob is in the correct directory, I need to enable it in ~/boot/uEnv.txt. To do this I used the nano command line editor to change #uboot_overlay_addr4=/lib/firmware/<file4>.dtbo to uboot_overlay_addr4=/lib/firmware/PB_PimoroniPHAT_v05.dtbo. . Now all I needed to do was reboot the PocketBeagle and then Linux will recognize the DAC. Unfortunately, this is were my technical problems started to become apparent. No matter what I tried, I could never get the Pimoroni pHAT DAC to load properly. The current device tree blob creates these error messages on boot: . After doing some digging, I found that the Debian 9.5 IoT Linux build I am using does not contain the drivers needed to recognize the pcm 5102a codec. I am currently trying to compile my own Linux build with the codec drivers included. Yay. . In the meantime, I came up with a work around that I'll talk about later.. In order for my Mopidy extensions to use the small LCD screen, I needed to make sure that it was loaded into Linux as a frame buffer device. Thus, I created another device tree file. I used the following resources to help create my .dts file:. You can find the .dts file in my Github. Next, I used the same process to create the .dtbo as the pHAT DAC device tree. However this time when the PocketBeagle booted up, my device tree worked! . Linux recognizes and loads the TFT LCD Screen properly! However, nothing is really that easy. Upon running Mopidy, the Mopidy-Touchscreen spat out the following error: . I found that running the enable_lcd.sh script from the Github link above helped a little bit, but left me with a white lcd screen and the following error message:. I am not familiar with pygame yet to fully understand what these messages mean yet. I'll most likely end up writing my own Mopidy extension for my LCD screen that doesn't use pygame. Until them, my Spotify-Pod will just have to be headless.. If you're like me and can't wait for a custom linux Kernal to compile to listen to some fiery tracks, don't worry. I came up with a workaround that doesn't use the Pimoroni pHAT DAC. To do this, I needed a micro-USB hub, a USB DAC, and the micro-USB breakout board from before. All I needed to do is to plug my USB hub into the PocketBeagle and plug the USB DAC and wifi dongle into the hub. Now Mopidy and pulse audio should automatically recognize the USB DAC and output audio. While this work around does allow the Spotify-Pod to play music as it was envisioned, the USB hub does not fit inside the I-Pod shell. Thus, the current iteration of the device is not in the form factor desired.. I still have quite a way to go on this project, but here are the things I'll be tackling soon:.",1
"Create a PowerBI Dashboard from Sigfox data generated by a Thinxtra Xkit using Azure EventHub.
. Read up about this project on . Create a PowerBI Dashboard from Sigfox data generated by a Thinxtra Xkit using Azure EventHub.
. In this hack we're going to use a Thinxtra Xkit device to send temperature data over the Sigfox network into an Azure EventHub to provide a PoweBI dashboard.. This is an extension of a hack doing the same with AWS services. There's a bit of overlap and repeated text, although I've tried to minimise it.. For this hack, I assume that you have:. Unlike the AWS configuration, for Azure EventHub, we need to create the EventHub first prior to setting up the Sigfox callbacks.. Log into https://portal.azure.com and click on ""EventHubs"" in the lefthand menu, note that it might be under ""More Services"". Then click 'Add', you should get the following screen.. Choose anything you want, it has to be unique, I used 'sigfoxhubexp' but you will need to choode something else. Pricing Tier can be set to 'Basic' which will help keep the costs down. Select an appropriate Resource Group and Location, and leave Throughput Units at 1.. Click OK, and wait for your EventHub to be created.. Once ready (keep an eye on the notifications at the top of the window), open the new EventHub and click ""+ Event Hub"" at the top. Enter 'demo' in the Name field and click OK.. Now back in the Event Hub screen for 'sigfoxhubexp' (note your name will be different), click on 'Connection Strings' and select the 'RootManageSharedAccessKey' Policy, it will be the only one there. Copy the ""Connection string–primary key"" value, I'll refer to this as the Connection String in a bit. . Log into https://backend.sigfox.com.. When the Sigfox network receives a signal from your device, it uses the callbacks configured on this screen to send the data to your backend. In this case, were are going to use the Azure EventHub, which Sigfox have provided a wizard to get going. Click on the 'new' button at the top of the screen and then click on the Azure EventHub Wizard line.. Enter the following:. You need to change 'sigfoxhubexp' to what ever you used when creating the EventHub and change 'demo' if you used a different value above.. Then click OK. . Next we need to setup a Stream Analytics job, to capture the data going into EventHub and prepare it for PowerBI. Log back into Azure Portal and find ""Stream Analytics"" in the left menu, again, it might be under ""More Services Jobs"".. Click ""+ Add"" at the top, provide an arbitrary name, and appropriate values for Subscription, Resource Group and Location. Then click ""Create"" at the bottom.. Wait a minute before clicking the refresh button (within the Azure Portal, not the browser portal, although it shouldn't matter) and then open the job you just created.. Go to Inputs, and click Add to open the following window. . Provide an input alias, and set the following. And click 'Save'.. Back in the Stream Analytics Job definition, click on ""Outputs"" and the ""+ Add"", to get to the New Output window.. Provide an name for the output, for example ""SigfoxOut"", set Sink to ""Power BI"" and click ""Authorize"".. This will get you to log in to PowerBI and enable the Stream job to send data to PowerBI.. Once authorized, provide a dataset name ""sigfoxDemo"" and table name ""Demo1"", or values of your choice. Then click ""Save"".. Finally, select ""Query"", and paste the below into the query box on the right hand side. You will need to change ""sigFoxExp-PowerBi"" to the name you used for your output, and ""sigFoxHubExp"" to the name you used for your input, you can see the names you used on the left side of the window.. The query above, takes the raw values supplied by the XKit and rescales them back to values we understand and also sets out the date fields. Click 'Save'.. Critically, you must now ""Run"" the Stream Analytics job, or it wont do anything. Once you click ""Run"", you cant change any of its configuration until you stop it, but in doing so you loose the existing data (in my experience). . Now go and generate some data with your XKit, you can't proceed without at least one data entry, but the more the merrier (you get a pretty boring graph with only one data point). . Finally its time to log into PowerBI and create our dashboard. . Once logged into PowerBI, expand ""My Workspace"" and under datasets you should see ""SigfoxDemo"" (the namespace we used in the Stream Analytics Output configuration), click on it. . Now we can craft the Dashboard, I'll walk through a simple temperature chart, the rest is up to you.. Click on the line graph icon to create a new graph, drag ""realtime"" to the ""Axis"" property of the graph, and ""temperature"" to ""Values"". Resize the chart a little and you should have something like this.. So just to go over what we done, we used the Xkit, from Thinxtra, to transmit information over the Sigfox network, which was then sent to Azure EventHub. The EventHub sends data to a Stream Analytics Job which rescales the data and sends it to a PowerBI Dataset. Finally, PowerBI uses the data to create our dashboard.. As always, there are many ways of doing this, Thinxtra have a tutorial doing mostly the same except that they use the IoT Hub, which I may have used, except that I don't have sufficient permissions in the Azure Account I was using.. Until next time,. Happy Hacking.",1
"Building on the PyTrack project, this project adds sensor nodes to track the robots position.. Read up about this project on . Building on the PyTrack project, this project adds sensor nodes to track the robots position.. The aim of this project is to demonstrate how you can connect many sensor nodes to a central base station. And how to then get the data from the base station via wifi.. Required Libraries . ALSPT19 - For the analog light sensor (For the nodes). For this project 10 LoPy modules will be placed around the track from the PyTrack project. A bright LED will be attached to the side of the robot and a ALS PT19 analog light sensor will be added to each node. The nodes will then detect the bright light to know the robot is passing the node. Once a node detects the robot it will send a message to the central base station. This base station will then forward the ID of the node that detected the robot via wifi to some server software. This software will then visualise the robots location on the track.. The first thing we need to do on our nodes is disable the WiFI access point that run on all Pycom modules by default. WiFi is very power hungry and by disabling it we can greatly extend the battery life of our nodes. . Further power savings can be made by putting the CPU into deep sleep but this is outside of the scope of this tutorial.. Next we need to setup LoRa using the raw mode rather than LoRaWAN. Since the devices will be close to each other we can reduce the power down to 8dbm
. We also use tx_iq
 to avoid listening to our own messages. We set blocking to False to prevent the module locking up if there is an issue with the radio.. Next we need to connect the sensor to the internal ADC using the library linked above. We need to provide it with the name of the pin the sensor is connected to. After this we need to calibrate the sensor. This will measure the ambient light level for 3 seconds and set the sensors threshold to 1.2 times this value. . Note: Ensure you are not standing in front of the sensor when calibrating it, this might effect the ambient light reading causing it to trigger constantly later.. When the light has been detected we need to send a message to the base station with our ID to inform it that we detected the robot.. While sending a packet to the base station we temporarily enable block to ensure that we only move on once the message has been transmitted.. The first thing the gateway needs to do is to setup the LoRa radio. This procedure is very similar to the nodes. The only difference is we need to set rx_iq this time.. Next we need to connect to the same local WiFi network as the computer running the sever software. You could also connect your computer to the access point created by the Pycom module if you prefer but your computer will not be able to access the internet.. Note: In this piece of code we change the colour of the on-board LED depending on what state it is in. This is a very useful technique to debug projects, especially when you are testing several device at once and it is not practical to remain connected to all of them at once.. Once we are connected to the network we need to connect to the server. You will need to adjust the IP address to match the IP of the machine running the server software, the port should also match the one set in the code below in the server section.. Finally the basestation needs to wait for incoming data and forward it to the server software via WiFi. The server software is written using Python mode for Processing but the code can easily be adapted to use native python using sockets. The first thing we need to do is include the networking library for processing like so:. We then need to begin the server, on port 8080 in our case. Note: this is a processing specific variable needed by the underlying java libraries. Next we get the next available client connection (if any) and read the data until a newline (ASCII 10). We can then turn the received value into an integer which is the ID of the base station that detected the robot. Once we have the node ID (and thus location) we can visualise the data..",1
"An innovative way to detect leakages or faults in pipes or the electrical system. If detected, gather data and call plumber/electrician. . Read up about this project on . An innovative way to detect leakages or faults in pipes or the electrical system. If detected, gather data and call plumber/electrician. . Broken water pipelines and faulty electrical wiring is a very frequent problem in Indian households. And to get those fixed requires unnecessary trips to the plumber’s or electrician’s shop. Our solution provides a smarter way to address these issues. The solution aims at setting up a continuous monitoring system for all the domestic plumbing devices and also the electric circuits around the house. In case of any fault detected, the data is sent to the central control agent which sends the notification to both the owner of the house and also to the nearest plumbing/electrical contact details fed there..",1
"To ensure the family security, the ARTIK team developed a security system prototype for boards using the Kairos face recognition service.. Read up about this project on . To ensure the family security, the ARTIK team developed a security system prototype for boards using the Kairos face recognition service.. Samsung ARTIK team had made a Face/Identity Detection System built with Eagleye 530s in April, 2018 (more details about the demo, check out here). Last month, the team made a new upgraded version of the demo for the IoT World in Santa Clara Convention Center which took place on May 14-17. They used an Eagleye 530s, an OV5640 5M Auto Focus USB Camera and a touchscreen to build up a security system to ensure family security.. When a person comes to the touchscreen, he/she could follow the instruction on the screen to take a selfies, and the photo will be uploaded to the Face Recognition cloud – Kairos. The system will detect if the person matches with the already enrolled faces in the system.. The system could be connected to door latches to unlock the door automatically only when a family member is detected. It would be a end-user solutions for smart home/ building.. Here comes the full instruction from the Samsung ARTIK team:. We introduced a prototype of Face/Identity Detection system when Eagleye 530s was just released in April, 2018. https://developer.artik.io/documentation/artik/projects/facial-recog.html. We then improved that project and added a touchscreen in the system and made it more appealing.. In this project, we have 3 main components: . We remove the GrovePi+ accessories from the previous project and there is no Pi HAT/Shield being used. We also replace the MIPI camera with a USB camera coming with the same type of sensor.. The final assembly would look like this. It is mounted to a specially designed hexagon plastic box for events purpose.. https://developer.artik.io/documentation/developer-guide/multimedia/display.html. This python code is implementing the core functionalities of the system. It is for setting up the application, streaming video, taking a picture, calling the validation function and checking the validation result.. 1. Import necessary PyQt4, OpenCV, watchdog and other libraries. . 2. Capture the video from Video port 0. (If you use MIPI camera with Eagleye 530S the Video port should be 6.). 3. Create a Qt application and an instance of Window which hosts the application.. 4. Define the Window. Give the name of the window as Control Panel. Define the 4 buttons (Start, Take Picture, Enroll and Quit) in the window. Set up the background image.. From 5 to 8 are the definitions of the four buttons. . 5. When click Start button, the watchdog starts to observe the txt files defined in MyHandler function.. 6. Thereafter, starts the video streaming in Video window.. 7. When click Take Picture button, a frame of the current video streaming will be saved as original.jpg; the Validating Face wording will be put on the bottom left of the image; the image will be shown in the Photo window.. 8. When click Enroll button, the enroll.py will be called and the previously taken image will be enrolled to the gallery on the Cloud side. This part will be explained in part d.. 9. Define the detection pattern for the watchdog. In this case, when the validation result from Cloud comes back, it will be saved to a txt file – Detection.txt. Thus, we detect this file.. 10. When Detection.txt gets modified, it gets opened and parsed.. 11. Put either “Successful!” or “Failed!” wording on the image taken previously.. This code checks if jpg pictures get changed. Specifically, when a jpg picture is taken and saved to the current folder, this python code will call validate.py.. 1. Set up the watchdog pattern as jpg files. All the jpg files creation or modifications will trigger an action – call validate.py.. 2. Create an observer and start to monitor the changes.. This code sends the encoded picture to Face Recognition platform – Kairos for the validation. The whole returned result will be saved to Result.txt. Then it will be parsed to the Detection.txt.. 1. Encode the original.jpg to base64 format and give a gallery name to the “values” field.. 2. Create headers – include app_id/app_key pair created at Kairos.com (https://developer.kairos.com/admin). Send request to Kairos web service.. 3. Get the validation result and save it to Result.txt.. 4. Open Result.txt and parse it. . 5. Save the parsed result to Detection.txt. It could be either success or failure.. Of course, initially there is no image in your gallery. You need to enroll some images.. 1. Encode the picture just taken to base64 and give it a subject_id. Also indicate which gallery you want to enroll the image to.. 2. Include the app_id/app_key pair created before and send the request to Kairos web service.. 3. Read the result from the web service and put it to a txt file for later reference. . artik.io.",1
"A notification will be sent to your phone when a temperature or humidity threshold is breached. To save power, we make it go to deep sleep.. Read up about this project on . A notification will be sent to your phone when a temperature or humidity threshold is breached. To save power, we make it go to deep sleep.. Summer can be a real bummer especially when the temperature can escalates to a dangerously high levels. Sometimes it is critical to monitor the temperature levels frequently and intervene when necessary. However this form of manual monitoring can be easily automated using a simple IoT service.. Today I will share two unique features of the ESPresso Lite V2 board that makes it useful for anyone who wants to build an alert system that can send a push notification directly to your smartphone without complicated programming. At the same time, you can conserve power by making the board asleep 99% of the time. We will be using a digital humidity and temperature sensor, the DHT22 to determine the ambient temperature. Once the temperature reached a certain pre-determined high threshold, it will make a REST API call that push a notification to your smartphone, alerting you of the high temperature or humidity level.. For this project, we will use the DHT22 sensor to sense the ambient temperature and humidity levels. This sensor can be plugged in directly into the header provided on the ESPresso Lite V2 board without the need for jumper wires. Similarly for the OLED display as well. . In order to send a push notification to your smartphone, you will need to set up a FREE espert.io cloud account so that a 16-digit smartphone API key can be generated and used in the attached Arduino sketch below.. The step-by-step tutorial to obtain the smartphone key (which involves creating an espert.io cloud account, downloading the Espert IoT app and navigating & testing the notification services) is available here.. Based on the Arduino sketch above, the ESPresso Lite V2 board will wake up every 10 minutes (deep sleep for 600 seconds). It will then connected to the Internet via a local WI-Fi router, obtain and transmit the temperature and humidity sensor data to the 'cloud' and goes back to sleep again. If the data obtained is above the pre-set values, it will trigger the push notification to your smartphone.. .",1
"Industry leading Secure Boot and Secure Firmware Update solution offering delta patching and dual image robustness for STM32L0 MCUs.. Read up about this project on . Industry leading Secure Boot and Secure Firmware Update solution offering delta patching and dual image robustness for STM32L0 MCUs.. This protip describes and demonstrates an industry leading secure firmware update system for the popular ultra-low-power STM32L0 microcontroller found at the heart of so many IoT devices.. If you are building a connected product you need a Secure Bootloader and Secure Firmware Update (SBSFU) solution. There's no way around that. The solution I am describing here is the ""Cadillac"" of IoT firmware update systems - offering a plethora of features including digitally signed and encrypted patches - that's right - patches, saving you the costs of both battery life and bandwidth for performing an in-field over-the-air update. This becomes very important as you deploy thousands of devices that must contend with a limited IoT data plan from a typical cellular or LPWAN service provider.. Get this SBSFU solution integrated into your project. Find out how.. A firmware preparation tool adapted to the build environment will compute the difference between the new build and a specified previous one (that is running on the fielded devices). The difference - a patch - is then digitally signed with ECDSA algorithms and encrypted with AES. A header is pre-pended and then it's ready to download to your devices.. On your devices, the patch data is delivered to the on-board patching engine service through APIs. The device validates the signature and decrypts the patch, then constructs the new firmware image in a temporary and safe download area in internal flash. When the patch is fully downloaded and the new firmware construction is complete, it is fully verified and the application can reboot to perform the new firmware installation into the active slot area.. On each boot, the bootloader checks if there is a valid new firmware image in the download area. If the signature checks out, the bootloader performs a firmware install. The install process swaps the active application in slot #0 with the new firmware image ready in slot #1. It does this in such a way that if it is interrupted, it can recover, and if a rollback is desired that is possible too. The installation on STM32L0 devices is performed using half-page writes and takes just a few seconds.. The infographic below describes the flash layout. Like previous bootloader and OTA update projects I've done, this solution also partitions the flash into two equal sized application images. I've used the terms APP1 and APP2 before; now using ST nomenclature I use Slot 0 and Slot 1. Same thing.. Security is a big deal in IoT these days. How will you respond to eventual questions from your customers and suppliers about the security of your devices? There are many facets to device security, but this bootloader and FOTA solution I'm presenting here will satisfy the highest security standards and will give you peace mind knowing your deployed IoT fleet is secured.. This secure boot and FOTA update solution uses both authenticity and confidentiality to protect your IP and customer's investment. Only firmware patches signed by your ECDSA private key will be accepted by the devices through any access ports you may open. This ensures that no malicious firmware can get onto the devices. Next, the firmware patches are encrypted, which ensures that no-one in the firmware deployment chain (e.g. cloud provider/hosting service) can copy, clone or otherwise deduce anything about your application.. Lastly, all of this is only possible when a root of trust is established, and that is easily and simply done by enabling RDP Level 2 on STM32 devices. RDP Level 2 disables external access via the debug port so there is no way for anyone to circumvent these security features. Note that only your public ECDSA key is stored on the device internally, so even if an advanced organization were to physically deconstruct the chip (!) they could only attack that one device.. This is the kind of security you need to be thinking about in your next IoT deployment, whether you are developing a solution or buying one. Ask these questions:. Yes, there is a secure firmware update with delta patching demo that you can run on a Nucleo-L073RZ board. I'll get into some more detail on how the patching update works.. The STM32L0 ""Z"" device variant is highly recommended with its 192 KB flash, allowing for a reasonable application size to be deployed to a flash layout that hosts two application slots and a bootloader.. This demo supports simulating a firmware update ""OTA"" over UART via the YMODEM transfer protocol of a terminal program like TeraTerm on your PC.. The firmware update is delivered as a secure and signed patch file that modifies a string in the application banner message and increments the version from 0.1 to 0.2. The signed and encrypted patch file is 304 bytes and applied against an original firmware image size of 14768 bytes. The compression in this admittedly trivial case is extremely high, over 99%. The patch file actually has a fixed-size header of 256 bytes containing various meta data including signatures and SHA256 hashes of the patch and the expected reconstructed updated firmware. The actual patch data is limited to almost exactly what has changed, owing to the efficiency of JojoDiff - the tool that creates the raw patch data.. This is what you need on hand to setup the demo:. Use STM32CubeProgrammer to program the combined image (bin file) onto the NUCLEO. Important!! When programming is complete, dismiss the dialog box then click DISCONNECT target in the STM32CubeProgrammer window, otherwise the target may suspend operation before loading the application and appear to hang.. Setup TeraTerm for 115200 8N1 to the Nucleo's STLINK virtual COM port.. Press the black (reset) button on the Nucleo and observe the bootloader and application startup trace messages.. At this point, the version 0.1 application has booted and is running.. Select option 1 ""Download a new Fw Image"". Then in TeraTerm start a YMODEM transfer of the patch file: File->Transfer->YMODEM. You will see a transfer window as shown below.. Subsequently, the application firmware will automatically reboot and will show trace messages detailing the installation process and finally the new application will boot and run.. This update demonstration uses a UART and YMODEM protocol. It is very easy to adapt the patch download process to use a cellular or WiFi modem and any number of IoT protocols like HTTP(S) or MQTT, or just about any other LPWAN (e.g. LoRa/WAN) or PAN (e.g. BLE) binary data transfer service. The patching engine is completely automatic and quite smart - requiring only a stream of the binary patch data while automatically ensuring authenticity and knowing how many bytes it needs.. I'd like to thank ST for creating a very high quality secure boot and secure bootloader reference design called X-CUBE-SBSFU on which I based this solution. The package has detailed design documentation that describes various features of the secure boot system.. I'd also like to thank Jan Jongboom for creating ""JojoDiff Alternative Patch library - portable C library for memory-efficient binary patching"" on which I based the on-target firmware delta patching engine.. This solution works on any STM32 device line, but I chose to demonstrate STM32L0 because X-CUBE-SBSFU does not support STM32L0 out of the box at this time. [Update: ST-SBSFU 2.3.0 does officially support L0 now. However my solution employs half-page writes when doing the image swap which makes the update process 16x faster!]. If you represent a startup or scale-up looking to integrate a solution like this into your project or product, contact me here on Hackster, checkout https://www.firmwaremodules.com/pages/bootloader or send a note to contact@firmwaremodules.com to learn how..",1
"Build an amazing Connected Rollout Banner with Arduino and control it with your mobile phone thanks to an AngularJS application.. Read up about this project on . Build an amazing Connected Rollout Banner with Arduino and control it with your mobile phone thanks to an AngularJS application.. Visit us: https://handson.io . The original article: https://handson.io/prototyping-at-google/. We like to think outside of the box, and when ""La Feweb"" asked us to give a technical talk about AngularJS, we immediately went crazy !. We proposed to give a presentation about the dependency injection system of AngularJS and the given opportunity to mock REST communications in order to master the behaviour of a web application before wiring it to a production environment. This software design pattern allows anyone to leverage the power and flexibility of a decoupled architecture, especially when it comes to be able to test at different levels (Unit testing, UI testing and E2E testing).. If you want to understand more in depth this pattern, we suggest you to read Dependency Injection at Wikipedia. The short answer is : it helps developers to produce maintainable code and greatly increase the quality of an application while reducing the chances to have to fire-fight an incident in production.. Maurizio Pedriale,Benoit Toussaint and I all participated to this project. Benoit and I decided to go crazy and started to think about the creative way to demonstrate why it is important to test properly an application before going into mission critical production environment where everything can blow-up if not properly controlled.. As always it started with a discussion and I sketched the early ideas !. For sure the picture looked amazing in our imagination and we thought that was a fun way to entertain people during an nice event afterwork while still remain serious about software engineering practices. The tone was set, we had to demontrate the proper way to test and connect a demo application to a critical component (the banner and the firework must be triggered the right way at the right moment and give back the proper result to the remote in order to update the UI).. To be honest it was easier said (or sketched) than done and the road the make it concrete and working in the real world was a bit of a challenge !. It is true that it was the very first time we decided to build such a big banner that should be WiFi enabled, exposing a REST api and being able to be deployed in an unknown environement also driving the circuitry to fire up an electric air compressed confetti canon.. And such a goal comes with a lot of uncertainty. Our immediate response in such situation is to quickly build a prototype to validate the first hypothesis about how everything should integrate together, let's call it our first integration test !. Before spending too much money for a colourful rollup tailored for the best propaganda, it was absolutely necessary to try out something a little bit less fancy, a rollup window store, some pine timber, recycled cardboard and a bit of super-glue.. It was time to consolidate the learning and start building a much stronger and better designed version (with the help of the kids :) including the wiring to the air compressed canon.. . The second version of the structure was built, the aREST arduino library used to publish a REST api for the Arduino UNO R3 fully loaded with a new super power thanks to the official Arduino WiFi shield.. The arduino exposed one endpoint through a dedicated Wifi network in order to trigger a servo motor used the control the opening of the banner's lid.. If you want to light-up the room with sparkling paper confetti, you should probably try out first with spare canon in order to understand its inner mechanic and make sure another less critical hypothesis (but important) would not go wild without any validation red-hot stamp.. An air compressed confetti canon is quite simple, the steel cap maintaining the pressure under a rubber joint is maintained by a single ""synthetic"" string. When the proper voltage is applied, the string melts and the air-blow create the magic moment.. . We had to rethink and simulate again the schematic to make sure everything was working properly under 18v instead of 9v.. The UI of the demo application is quite simple (and mobile responsive), the app display the status online/offline of the connected banner (the server) and offers a button to fire the all things after which the user gets a notification that everything went as expected (the banner could be out of sight, who knows ;).. . The code of the application is hosted on GitHub and the structure it follows is called a Single-page application (SPA).. The file index.html is bound to the main module fireworksRC defined in the script app.js and declares an element <div ng-view></div> hosting the rendered template associated with routes managed by the $route service.. There is only one route, the home route is activated when the user navigates to http://webserver.local/ or http://webserver.local/#/home which is rendered dynamically within the ngView directive.. Replace webserver.local by the address of the machine serving the files (run npm start). For the production version, checkout the final-version branch and dev-version for the development one.. The top level module fireworksRC contains only a configuration for the default route to be forwarded to the home route. The module definition include the required dependencies (ngRoute, fireworksRC.home) injected at run time by the dependency injector.. This is the only responsability of the main module, everything else is delegated to another module fireworksRC.home defined in the script home/home.js. The module defines a constant, a config and a controller. The constant FireworksBE_URL is used to locate the address of the connected banner exposing REST endpoints a.k.a. the server.. The config instructs the provider $routeProvider to render the html template located at home/home.html and associate the controller HomeCtrl to the view as home.. Finally, the declaration of the controller named HomeCtrl contains the required dependencies, the constant FireworksBE_URL and the core AngularJS service $httpwhich again will injected at run time by the dependency injector.. This is the service we are going to use at the controller level to interract with the connected banner exposing a REST api.. Then obviously it is easier to test it ! The very first reflex when it comes to build a system is cooking some unit tests ! We use Karma to test our main controller HomeCtrl.. In this case we use Jasmine to describe the unit test suite of the fireworksRC.homemodule which mainly target the HomeCtrl controller.. Here are the main behaviours of the HomeCtrl :. Here is the main structure of the test suite located in the file home/home_test.js. As mentionned earlier in this article, we chose $http service provided in the AngularJS's module ng as a way to communicate easily with the connected banner exposing the REST api.. This service internally depends on ng.$httpBackend that delegates to XMLHttpRequest object or JSONP and deals with browser incompatibilities.. When it comes to unit test the controller in order to asses its behaviour, the dependency injector is essential. We are going to use it to inject a fake version of the $httpBackend service provided by AngularJS itself within the module ngMock.. The module ngMock is included in angular-mocks.js. This dependency is managed via Bower which install the required script in app\bower_components\angular-mocks as configured in the bower configuration file .bowerrc along with bower.json.. The module ngMock must be provided to the test suite runner in order to be properly used. This is done by referencing this dependency app\bower_components\angular-mocks\angular-mocks.js in the runner configuration file karma.conf.js.. There is a second mock version of the $httpBackend service located under the module ngMockE2E. This one is particulary useful for integration tests where you want to simulate only certain responses.. This strategy proove to be useful when combined with an automated continous integration pipeline where you inject a new module that overrides the main module for example. This injection has nothing to do with a dependency injection but is more a text replacement within the files themselves.. You can find an example of this one in the dev-version branch. The index.html now use fireworksRC_DEV as the main module.. This one overrides the fireworksRC module in app.js and this time uses properly the module ngMockE2E located in angular-mocks.js properly referenced in index.html.. In this case, the connected banner will always seem available to the application and the firing will always result in a correct return value.. Let's flesh out the first unit test in home\home_test.js. We first define some variables that will host what we need to properly test our controller HomeCtrl within its module fireworksRC.home.. We will use SIMULATOR_URL to force the value of the constant FireworksBE_URL defined in the main module fireworksRC in app.js. We deliberately exluded the file app.jsfrom our test runner configuration (karma.conf.js) but we need this constant to be available in the scope of the controller HomeCtrl that we are going to instantiate in the test suite.. VALID_HTTP_GET will be used as a response when the controller HomeCtrl will call the connected banner (the server) to check its availability by issuing a GET request.. Jasmine provides the function beforeEach(function) that is executed before each spec in the describein which it is called. So we use it to set the value of the constant FireworksBE_URL to the one of SIMULATOR_URL.. We describe a new spec for the controller. This time we use the inject() function defined in the ngMock module to deliberately inject the required elements, the $httpBackend mock and the $controller service in order to instanciate our controller.. The dependency injector is able to wrap the underscore around the required dependency in order to let us properly define the variable $httpBackend that is that way properly declared in the accessible scope of the controller and will host the ngMock.$httpBackend service. Remember $http uses $httpBackend as a dependency.. We hook up the GET requests to simulate the responses and we instanciate the controller.. The test setup is done, we can now write the first unit test that will evaluate the controller's behaviour.. We expect the controller to initiate a request when it is instanciated in order to retreive the status of the server and update accordingly its property connected.. If you execute that test (npm test) it will fail until you provide the right code within the controller in home/home.js.. AngularJS is a very nice and well designed framework, it helps to create production ready application. On the other hand, the broad spectrum of IoT solutions allows you to create almost anything without being an expert in hardware.. Rapid prototyping implies to be able to see the end-result and design the right tests to validate your most critical hypotheses first.. We hope you enjoyed the show !. Alan.",1
"Blueapp that interfaces with Hexiwear. Read up about this project on . Blueapp that interfaces with Hexiwear. This project is meant to show how you can build application like Hexiwear. It the basics it is the similar application like Getting-Started app, just with more data that is reading from the sensor. This app is using Angular on front-end side. If you're familiar with web development, this should be easy. . Prerequisites. Our application uses angular for the front end. This keeps things simple when displaying data to user. We use angular binding for updating values on the screen based on sensor readouts. Following code from index.html shows an example of that.. On Javascript side, our code is placed in two files. One is angular based app.js that is responsible for user events and displaying data. In hexiwear.js file we create a Hexiwear class like function that is responsible for bluetooth and all of the device's capabilities.. In Hexiwear class we first have to define constants for characteristic UUIDs, since we have to pass that when trying to read the data from it.. In this case we have a lot of characteristics, that is placed in different services. For example, in motion service we have accelerometer, gyrometer and magnometer characteristics.. After constants, we are defining function for setting variables and their default values.. Main method of the Hexiwear class is connect() method. First we define a variable filters which is an array of objects. Valid filters are:. Once we set scanning options, we are passing them and calling navigator.bluetooth.requestDevice. In promise, we should get requested device, if it is available. Here we can set disconnection listener to let us know when the device is disconnected from the gateway, and we can use that to show some indicator of that event on the screen.. Since we are connected to the device, we can call getPrimaryService in promise function, with defined service uuid. Because we have a lot of services we are calling them in Promise.all. . When we get requested service, now we want to read characteristics and their values.. In functions for reading values, since we have service passed, we are using that to call service.getCharacteristic() with specific UUID, in order to get characteristic value. Then we can use that response, parse it and store in appropriate variable.. Since we want to refresh values on the screen from time to time, we have to define function for refreshing the data.. In app.js file, we first have to call angular related initializations, that is needed if you use angular. . Also we have to define mainController that drives our controller. In this controller we are placing different functions for interacting with our html code. One of the functions is for creating popup for device info dialog, where we are passing current data from main controller object.. Basically, most of the functions in this controller is related to UI stuff, for showing and dismissing indicators or for UI animations. . Since we are calling another controller for info dialog defined above, we have to initialize that controller also, where we are passing needed dependencies defined in locals object. This values is used just for displaying them on the screen.. For starting the connection process, we are calling hexiwear.connect() function..",1
"How helpful it can be if you can make a project out of which you can easily know temperature of your surroundings through your mobile SMS.. Read up about this project on . How helpful it can be if you can make a project out of which you can easily know temperature of your surroundings through your mobile SMS.. I am Pritam Naskar , a 3rd year B.Tech student . In this semester break I wanted to do something unique and surprisingly I get that chance when I came to know about the BOLT IoT Training program .Before moving to my project I want to thank BOLT IoT from the bottom of my heart to give me such a wonderful thoughts , ideas and influence to make my first IoT Project . . This project is about making Temperature Monitoring or Sensing device using BOLT IoT-WiFi module . It will sense the temperature of your surroundings and give you a real time temperature alert on your cell phone device . So hang in there to see how to build your very own Temperature alerting IoT device . Nowadays, this device can be very useful in the means of sensing temperature in any Pharmaceutical lab where temperature is the prime factor. It'll give you SMS update when the temperature crosses it limits and you can change those threshold on your own. You can make a huge profit out of it because your manufacturing defect will become lesser using this device.. In this project I using my BOLT IoT kit and BOLT Cloud website . So let's see how to build the project :. Hold the sensor in a manner such that you can read LM35 written on it. In this position, identify the pins of the sensor as VCC, Output and Ground.. . . VCC pin (Red) of the LM35 connects to 5v of the Bolt Wi-Fi module. Output pin (Orange) of the LM35 connects to A0 (Analog input pin) of the Bolt Wi-Fi module. Ground pin (Yellow) of the LM35 connects to the Ground.. The final setup will look like following -. . STEP 3 : After setting up the final hardware connection we are ready to configure the hardware device by logging into the BOLT Cloud ( https://cloud.boltiot.com/ ) After logging into the BOLT Cloud website click on Products and then click on add product. After this following window will pop-up -. give the suitable name to your product. After that choose OUTPUT DEVICE which collect the data as GPIO.. After adding the product click on ""CONFIGURE"" . Now configure your product as the following step sequentially -. . In hardware setup we connected the output pin of LM35 sensor with A0 pin of BOLT WIFI module that's why here we are choosing A0.. Now we need to write the code in order to monitoring the temperature of surroundings. Following code is written in JavaScript. In the very first line I use 'google-chart' library to use it's graphs. In next line I write title for our graph. After that we have to assign the chart type that we want (Here I use line graph) . Then I name the axes of the graph. After that we have to use a specific multiplication factor (0.0977) . At last we need to write a line which will plot the points on the graph.. After writing the code we have to save the code and hardware using ""Save"" option on the right hand side of the screen and exit from that page.. . After saving we have to link our product with our specific device . To do that we select the link option right at the corner of the screen. Choose our device and click on done.. . Now we have to deploy the configuration that we have done up till now by clicking on the cloud shaped "" deploy"" button. After deploying the configuration we need to check the graph of the temperature. . . How is it going guys up till now ! pretty interesting right . Now we will link our device with TWILIO which will alert us when the temperature increases or decreases it's assign thresholds. So, are you guys ready...I hope you are then let's check it out-. First we will go to the API section of our BOLT Cloud website and generate our API key and copy it somewhere from which we can get it easily.. . STEP 4 : In this step we are going to create our free account in TWILIO(https://www.twilio.com/ ) by signing up in it (This will be totally free of cost) with your all necessary details. And after verifying your email you are able to log in to the TWILIO free account. After this you get a specific number like this which you have to use later in this project.. . STEP 5 : . Before start coding in python you have to update the ubuntu and have to add the BOLT Python library in ubuntu to do that follow below mentioned steps:. 1: Update the packages on Ubuntu. Execute the command below so that the packages on Ubuntu are updated to the latest version. If you skip this step, you may encounter an error while installing the Boltiot package.. 2: Install python3 pip3. pip3 is a package manager for python3 used to install and manage packages and python libraries. It is system independent.. Install pip3 using the following command,. 3: Installing boltiot library using pip. Now we will install the boltiot python library on your Ubuntu server.. Type the below command in terminal to install boltiot python library.. Now we are done with boltiot python library installation. In the next section, we will learn how to use the Bolt python library to check the device status and switch off the device. Now we will write a Python program which will fetch the temperature data collected by Bolt and send SMS if the temperature value goes outside our specified temperature range. You can write the python code anywhere as your wish (I write the code in Ubuntu ).. Before start to writing the code you have to save some details . Save them there from where you can easily access it. The details are following-. Keep in your mind that you have to replace all the above value with your credentials. You can find the values in Twilio dashboard and Bolt Cloud dashboard.. 1. Next create a file named conf.py which will store all the credentials related to Twilio. To create a new file type sudo nano conf.py . After that write all the above details to save all the credentials in a single file.. 2. Now create one more file named temp_sms.py . To do so you have to type sudo nano temp_sms.py in the terminal. Now we will write main code to collect the data from the Bolt and send SMS if it crosses the threshold.. 3. Code Explanation :. For the Bolt Cloud to identify your device, you will need to provide the API key and the Device ID when creating the mybolt object. Since the conf file holds the API key and Device ID variables, you can use them as follows,. The above code will automatically fetch your API key and Device ID that you have initialized in conf.py file.. The above code will automatically fetch your SID, AUTH_TOKEN, TO_NUMBER and FROM_NUMBER that you have initialized in conf.py file. Make sure you have given correct value in conf.py file.. In the above code, we are fetching the data every 10sec. You can change the value but ideally, it should be good if the time interval between 2 data points is more than 10sec.. [Note: The above ""sensor_value"" is the raw temperature reading, obtained from the LM35 sensor.] . Below is the complete code:. [Note: The above ""sensor_value"" is the raw temperature reading, obtained from the LM35 sensor.] . Now it's time to run the code. Run the code using command sudo python3 temp_sms.py. We are all ready to get the SMS of the temperature in our phone from TWILIO...... 3. 2. 1. And Here is our SMS Output. . Now Enjoy with your own Temperature Monitoring Device. Test it in different temperature and take the reading and all. So I hope you guys will definitely give it a try. If you face any problem while doing this project feel free to ask . Till then Good Bye & Thank You.... . . .",1
"Functions as a black box by recording various parameters during driving.. Read up about this project on . Functions as a black box by recording various parameters during driving.. (1) Raspberry Pi 3 or better: computational power required . (2) Raspberry Pi Sense HAT. (3) Raspberry Pi Camera / USB camera. (4) Memory card with latest raspbian image ( Should support node red, almost every latest image does). (5) Power supply at least 2.1 A ( I have used battery bank for standalone operation in car). The Sense HAT has an 8×8 RGB LED matrix, a five-button joystick and includes the following sensors:. More information on working with Sense HAT can be derived from following links: Sense_Hat. API for sense hat are hosted at : Sense_HAT_API. Code for sense-hat programming is covered in later steps. Sense HAT code can also be simulated on a simulator hosted at : Sense-hat simulator. Picture above shows Pi Camera connected through flat ribbon cable to Pi.. For mounting the recorder, I have used double sided tape, the advantage is recorder can be easily shifted in different position, whichever suits best your car.. Further camera is mounted vertically as shown, using same double side tape, . Next in line is to connect a power source (10, 000 mAH power bank) along with a ready internet connection . Internet connection shall be required for MQTT application ( the details for MQTT are covered in further steps) . From the Sense HAT, acceleration and gyroscope are used to check whether the raw values are beyond set limit in code. . Accelerometer : The accelerometer tells the amount of gravitational force (G-force) acting on each of x, y & z axis, if any axis measures more than 1G force, than rapid motion can be detected. (please note the axis pointing downward would have 1g value and needs to be considered accordingly in python code).. Gyroscope ; The gyroscope is used to measure angular motion, i.e during sharp turn the sensor might get activated (depends upon the setting in the code), so a person sharply whirling the vehicle would get caught!!. Any activation of set limit is also displayed on the Sense HAT LED matrix as ""!"" in red for acceleration & green for gyroscope activation. Node-RED is a flow-based programming tool, originally developed by IBM’s Emerging Technology Servicesteam and now a part of the JS Foundation.. More information on node red can be obtained through following link: Node-RED.. For our case we would be using node -red for following activities. (1) Interacting with the joysticks to start camera functions.. (2) Monitoring the impacts on vehicle and relaying the information to end user by employing MQTT and further accepting the end user commands through MQTT and starting the requisite application on Pi.. (3) Performing some basic stuffs like shutdown of Pi. . The further steps gives the detailed information for the flow diagram implemented on Node-RED.. Please note the Node-RED flow diagrams interact with the Python code, hence the latter part covers the Python code aspects.. Certain Basic steps are highlighted to begin Node-RED in a flash, but yes Node-RED is too simple to begin and work out applications.. The Flow _1a, monitors any changes in the CSV file and on the basis of the changes, i.e impact detected, camera video recording is set to on mode and further the user is informed over internet that an impact has occurred.. In the said flow, video recording can be started at any point by just pressing the joystick. . In the said flow, whenever any new picture or video is stored/uploaded to directory the information is relayed to the registered user over internet.. This flow is primarly designed for the remote user, so as to control the device in following manner: . (a) Shutdown device . (b) Take pictures. (c) Record videos. (d) Start main code (datalogger code is the main code which calculates the impact). The flow is designed for local access, so as to start the main code or shutdown device. . MQTT (Message Queuing Telemetry Transport) is an TCP/IP protocol, wherein publisher and subscriber interact.. In Our case Pi is publisher, whereas the application installed in our moblile/PC shall be the subscriber.. In this way on generation of any impact, information is relayed remotely to the user ( a working internet connection is must). More information about MQTT can be accessed from following link : MQTT. To start using MQTT, we need to register first, for the tutorial I have used cloudmqtt (www.cloudmqtt.com), there is a free plan under ""cute cat,"" thats all.. After registering create a instance say ""pi"" after which you would be getting following details. The above are required while subscribing through mobile/pc . For my application, I have used MQTT application from google play store (Android version). The MQTT application running on mobile (Android version). The impact detected on Pi are relayed back. In Node-RED after selecting MQTT node, ""server name"" and ""topic"" to be mentioned. This should be same on subscriber end. . The code functionality is as per attached flowchart.. The Python code is attached.. In order to make our Python script run from terminal, we need to make them executable as chmod +x datalogger.py, than further the top of the code should contain the following ""shebang"" line #! /usr/bin/python3 (This is required so as to execute functions from Node-RED.). Impact Recorder can also be used to monitor live video, as video can be started anytime anywhere through MQTT.. we would use VLC player to stream videos, by default in latest raspbian the VLC is pre-installed, else install vlc as under.. More information about viewing network stream can be accessed through VLC Network stream.. Thank you for reading!. There is much more the Impact Recorder can do.. .",1
"Reduce the number of equipment and preparations required for field testing (2.4GHz and 868MHz), pack everything you need in your hand. Read up about this project on . Reduce the number of equipment and preparations required for field testing (2.4GHz and 868MHz), pack everything you need in your hand. While developing and deploying wireless applications and sensor networks is mandatory to assert the wireless link, to try and estimate the maximum range between two devices and to prevent link loss due to rain, obstacles, fading, etc.. Normally you would need to include in your toolbox, besides a sniffer and spectrum analyser (such as this one), at least one transmitter and receiver, and pack a laptop to read and store the results, unless purchasing a kit properly prepared to do this, like the CC2538dk or the CC1120dk around 250€-300€ approx.. As I grew tired of packing my laptop and having to rush open field testing to cope with my discharging battery, I opted to prepare my own field test setup just packing the essentials, for a lightweight test spree.. As I primarily work with RE-Mote platforms both in the 2.4GHz and 863-950MHz bands, I threw in the mix a commercial USB battery charger I normally use when travelling, and the Sparkfun's LCD with RGB backlight.. The LCD works over I2C, the library was already ported in Contiki by me (see rgb-bl-lcd.c) and is powered over 5V (but luckily the I2C has a 3.3V logic).. As the RE-Mote works using a 3.3V logic but can be powered over USB at 5V, I powered the LCD from the RE-Mote over the D+5.1 pin (see above).  The LCD I2C pins (SDA and SCL) are connected to the RE-Mote over the I2C.SDA and I2C.SCL pins as expected.. The battery charger is an USB battery with 6000mAh capacity, plenty of juice to last days of testing.  The only drawback is having to either continuously press the power on button, or disable the RE-Mote's low power operation, else the battery ""thinks"" there's no connected device as the power consumption is too low.. Below is a video detailing the operation of the range test application.. When the application starts it will print information about the radio configuration.  The current channel is displayed at the bottom row on the left, followed by the available channels and the transmission power (in dBm).. When the application starts it will start blinking the blue LED and instructions will be printed on the LCD.. Basically when long-pressing the user button (without releasing) it will toggle between the sender and receiver mode.  The LCD will bright red when configured as receiver, or green when selected the transmitter mode.. When the user button is released the operation mode will be set (warning: if you need to change the operation mode, press the reset button and repeat).  A single press on the user button will start the test.. I develop a simple application to wrap everything together, available as always in my Contiki's Github fork, look for the field-test-lcd branch.. The application lives at examples/zolertia/zoul/range-test. If you look at the Makefile there are two compilations switches to consider:. When compiling and programming the RE-Mote you can select to use either the 2.4GHz radio interface (CC2538) or the 868/915MHz radio (CC1200) (if adding WITH_SUBGHZ=1).  If you include the WITH_LCD=1 argument to the compilation it will include the LCD display support, else if you don't have a LCD display you can still see the results over USB if connecting to the RE-Mote, by just using a micro-USB cable and putty or alike.. . And that's it! have fun testing and enjoying the weather!.",1
"IOTA related information on one single screen. News, events, a nice component and more! Just run it on a Pi and connect a TV.. Read up about this project on . IOTA related information on one single screen. News, events, a nice component and more! Just run it on a Pi and connect a TV.. Hi, I'm Huhn and I had no idea how to build a smart mirror.. So, I have changed it. I did implement IOTA related information to the open-source project MagicMirror2. This is a very easy way, to set up the Software for a Magic Mirror.. So, first a few things to the MagicMirror2 project.. Looks easy. I forked the repository and clone it to my computer. Run it on development mode and added my settings.. And this is how it looked. Now we set up the Raspberry Pi and install the IOTA-Mirror.. Step 1 - Install Raspbian. First, we want to install Raspbian - we recommend to install Raspbian Buster with desktop (Download here). To do that plug the Pi's SD card in your computer and flash the Raspian on it. Tip: To do that you can use Etcher.. Step 2 - Connect to WLAN. After the flashing process finished, the SD card has been ejected from your computer. All you need to do is to plug it out and in to let the OS recognize it again. As soon as your boot drive has appeared to open your terminal and execute:. Now we want to enable SSH, which is disabled by default on the Raspberry Pi. We simply create a file called ssh within the boot drive. To do that execute:. Even if the file is empty it will enable ssh as soon as the Pi boots.. Lastly, we also want the Pi to connect with wifi as soon as it boots. To do that we store the connection details at the boot drive of the Pi. Execute the following command:. Now go ahead and paste the following code in the file. Also, enter your wifi connection details and press ctrl + x to save the changes.. Now we are ready to connect via SSH to the Pi.. Step 3 - Enable SSH. Before we plug in the SD card into the Raspberry. We want to enable SSH, which is disabled by default. We simply create a file called ssh within the boot drive like the WLAN configuration file above. To do that, just execute:. This creates a new empty file. Even if the file is empty, it will enable ssh as soon as the Pi boots.. Step 4 - Connect to the PI. We want to open a WIFI with the Raspberry, so we connect vie normal LAN to the Raspberry for configuration.. Checks the Raspberry Pi IP in your Router, or try to connect with the hostname ""raspberrypi"".. Now you have to enter the default password ""raspberry"" and you're in!. For security reasons, let's change the default password of the user ""pi. Input this command:. Now you need to type in the current password again (raspberry) and then your new password and the confirmation.. Now you're safe and ready for the next step!. Step 5 - Install dependencies. For this example, we need to install NodeJS and npm, and some Python libraries to control the e-ink display.. Install NodeJS. After the last command, you should see your node version.. Install python dependencies. install git, to clone the example code.. Clone and install the application dependencies. We need to upgrade Electron. This can be done by running the following command.. We use the default configuration file, you can easily input your own sources.The default configuration loads different things:. Just run this command:. Now, run the application. And the magic is done!. Plugin your Raspberry Pi to your TV or monitor and you will see the latest IOTA news and next events. Enjoy it!. Not done yet - just one things todo.. If the Raspberry PI turns out, the program won'T start automatically. We solve this by making a service.. We will run the NodeJS app as a Linux service, so we can easily start, stop and watch them. Also, they automatically start after reboot or crashes. Create a file called “snapshot.service” in this directory: “/etc/systemd/system”.. Just create a new file for the service and add the configuration.. Add these lines and save it (CTRL+X and Y).. Add and start the service.. That’s how you can see the logs:. That's all! You're done!. If you liked or disliked the tutorial, please let me know. Let's build some cool IOTA features together! Ideas: look here and join or create a new feature!.",1
"Battery-operated station using low power 868 MHz communication. It can measure wind average speed, maximal speed, direction and rainfall.. Read up about this project on . Battery-operated station using low power 868 MHz communication. It can measure wind average speed, maximal speed, direction and rainfall.. With wind and rainfall data you can estimate how much moist the soil is and you can decide whether your garden needs to be watered or if the rain shower was good enough. The Core Module which is the brain of Weather station also measures temperature.. The online weather prediction is not always accurate to your exact location so with this weather station you can get better idea what is the weather like.. The weather station assembly can be ordered at SparkFun. Czech e-shop has all the parts separately too, and you can also google for:. Rainfall sensor Misol WH-SP-RGWind direction sensor MISOL WH-SP-WDWind speed sensor Misol WH-SP-WS01. Here is the datasheet of the weather station.. Stack the HARDWARIO IoT Kit modules on top of each other. Start with a Mini Battery Module and build other modules on top of it. It does not matter on the order which you stack modules on top. HARDWARIO IoT Kit is designed to connect the modules the way you like.. Just be careful that the pins of the other module goest to the Mini Battery Module thru the yellow PCB. You do not damage anything, it just won't work :). You can cut the wires from the weather station's RJ11 connectors and wire them directly to the screw terminal which comes with Sensor Module. But I would suggest to find some RJ11 jacks and solder wire to them. It is also better in case you thread the cables through the water-tight bushings so you can always disconnect them.. RJ11 connectors can be salvaged from old phones or DSL modems. It is also possilbe to use RJ45 connector and ""ignore"" the outer 2 pins. I have each of both worlds :). On the Soil Sensor R1.1 there is optional channel C which is normally GND, but by moving resistor you can enable this channel C. You can write this request to the order and they do this rework for you for free.. This is the wiring diagram of both RJ11 connectors. The colors in the image does not match colors on the cable. Correct colors are:. Wind and rainfall RJ11 connectors. All the hardware. Download HARDWARIO Playground multiplatform GUI tool to your computer. This tool can flash firmware and also contains other features like MQTT and Node-RED with dasboard. You can run and follow this tutorial with the HARDWARIO Playground on your computer. Or you can install prepared HARDWARIO IoT Kit Hub Raspberry Pi image to your SD card. Follow instructions in the docs.. You can also install all the tools to your existing raspbian which is explained in this article.. Go to the Firmware tab and write ""wind"" to the firmware textbox to filter firmwares, choose bcf-radio-wind-and-rain-station firmware.. The Radio Dongle comes pre-flashed but we suggeest to update it to the latest version. Disconnect the Core Module, connect Radio Dongle and flash it with bcf-gateway-usb-dongle firmware. Download and copy the bc-raspbian to the micro SD card. You can also install the services manually on clean Raspbian or run them on any Linux single board computer. Follow this documentation.. After flashing, put the card to the Raspberry Pi, plug-in the Radio Dongle, connect network cable and power cable, boot the Rpi up.. You can connect to the HARDWARIO IoT Kit Hub, open in your browser page.. Detailed documentation of this step is in the documentation.. You need to pair Weather Station Core Module with Radio Dongle:. Check that you have the same ""wind-station:0""alias of the module, it has to be the same because we use that name later in MQTT topics. You can rename the node to the right name.. If you switch to the Messages tab you will se incoming MQTT messages from the weather station. Data are send 20 seconds after power-up, then every 15 minutes.. Now we add the function to read data from Weather Station.. Switch to the Functions tab whre the Node-RED is and in the top-right menu select Menu > Import > Clipboard. Copy and paste the text from node-red-flow-import.json file. Press Import. You will see something like this.. PressDEPLOY in the top-right corner to apply changes.. Now switch to the Dasboard tab and see the data coming.. First data are send 20 seconds after power-up, then every 15 minutes.. You can install Openweathermap plugin to the Node-RED and display also weather forecast in the Dashboard.. The Core Module has also button, accelerometer and temperature sensor. You can edit the original source code and extend functionality. If you place it on a gate, you can monitor opening the gate just with accelerometer.. You can also connect Climate Module and measure humidity and air pressure.. External temperature can be measured also with a single or multiple 1-Wire DS18B20 temperature sensors.. You can also easily add Sigfox or LoRa Module and send data using these LP-WaN networks. There already exists a firmwares with same or similar functionality. Radio summary and example projects can be found on developers portal.. See also other HARDWARIO projects on Hackster.io or on their website.",1
"Snowman replica that can chat with user to inform them whether outside temperature is safe for outdoor activity or not.. Read up about this project on . Snowman replica that can chat with user to inform them whether outside temperature is safe for outdoor activity or not.. Winter cool is as dangerous as summer heat since severe cold could lead to fatalities. Recently, the number of cold weather death toll is increasing in Europe. Hence, this project aims to allow the user to know whether it is safe to carry out outdoor activities.. The user can know whether it is safe to carry out outdoor activities or not by saying ""Hi!"" to their Snowbuddy (A snowman replica placed outside the house as Christmas decoration) via telegram.. The safety is determined based on temperature. Unsafe temperature is determined based on National Weather Service guidelines on condition that will result in frost bite. As shown in the picture, the temperature -10°F and below will result in frost bite regardless of the wind speed and therefore -10°F and below is considered as unsafe temperature for outdoor activities.. The snowbuddy is a snowman replica equipped with a DHT22 temperature sensor. The snowbuddy can be placed outside the house as Christmas decoration. Any snowman replica can be used simply by attaching the DHT22 temperature sensor interfaced with the Arduino MKR1000 or Genuino MKR1000.. The user can simply say ""Hi!"" to the Snowbuddy to know outside condition. The Snowbuddy will reply ""Enjoy!"" when the temperature is safe for outdoor activities and ""The temperature is too cold. Stay indoor!"" if the temperature is unsafe. . The hardware setup is very easy. Simply connect the DHT22 temperature sensor to the Arduino MKR1000/Genuino MKR1000 based on the provided schematic. Then, attach the microcontroller together with the temperature sensor to the snowman replica.. Step 2: Telegram Bot. Create a telegram bot by using BotFather. For detailed tutorial on creating telegram bot please visit: https://core.telegram.org/bots#6-botfather . Then, insert the Bot Token, Bot Name and Bot Username into the code.. In this demo, the bot reply ""Enjoy"" since the temperature is above 0°F.. .",1
"Control the injection of a liquid with GOBLIN 2 from anywhere via Ubidots platform.. Read up about this project on . Control the injection of a liquid with GOBLIN 2 from anywhere via Ubidots platform.. In this example I'll show you an application where I'll be able to control the amount of liquid to be injected in milliliters from the WEB, these values are modified from the internet via the UBIDOTS platform.. It explains how to receive information with our GOBLIN 2 from the UBIDOTS API via an HTTP protocol.. The methods to request information supported by UBIDOTS are:. The GOBLIN 2 receives a value from the UBIDOTS API and executes the expulsion of the selected value.. Necessary hardware and connection diagram:. You need to create a UBIDOTS account.. Under the tab labeled Devices, we'll choose Add Device, in this case we'll call it Milliliters pump.. In Milliliters pump, we'll add a variable in Add Variable and it'll be “Default”. We'll also call it Milliliters pump.. We create a Widget under the Dashboards tab. It'll be “Control” data >> type of widget “Slider” >> name of the control variable: Milliliters pump.. It'll show in the following way and the slider will range from 0 to 7000ml. These are the 7500ml in our water tank and these parameters may be modified according to your container. Done! Our control variable has been created.. We'll go to the Devices tab to access “Milliliters pump” and go to API Credentials in the profile.. We copy the “Tokens” and the “ID” and we replace them in the xxx of our program.. Replace the “ID” and the “Token” where the xxx is in the example code. You can obtain the code from here.. Select Tools in the Arduino IDE followed by Board: Arduino/Genuino Uno. Select the port COM of your GOBLIN 2 and compile the program -“Upload”. Done! Our GOBLIN 2 has been programmed.. . You can use this example for an automatic irrigation control that irrigates every 15 minutes the number of liters of water that were chosen. You can make automation systems to turn on and off light bulbs and other devices..",1
Using Alexa API and voice services on Amazon Developer. I window blind will be controlled using a motor and an Arduino board.. Read up about this project on . Using Alexa API and voice services on Amazon Developer. I window blind will be controlled using a motor and an Arduino board.. Blinds for window treatment are generally expensive pieces and have become extremely expensive if used with smart technology. We have demonstrated that inexpensive window blind could be controlled with an Arduino and Alexa Voice Services..,1
"My favourite memory from fourth grade was a day that my class went to a nature reserve. The conservationists told me to grab some birdseed and hold it out in front of myself. All of a sudden, a bird landed in my hand and proceeded to eat some of my seeds. I was very surprised because at that point in my life I had never been so close to a bird before. Looking at them up close, they're very exotic and interesting animals, but as quickly as it came, it was gone. And I was hooked.. . Sadly every year, birds are ingesting the plastic that we humans deposit into their habitats. The birds regularly confuse these plastics for food and eat it. They also feed this plastic to their chicks. This project aims to help out the birds a little. Rather than allowing plastics to find themselves in landfills, we are going to make a recycled plastic bird feeder.. . My design is great for people without a lot of tools and/or skills. This is also a great home-school project for kids to do. Kids enjoy feeding the birds (which you can learn to do at the end). This is also a great way for them to learn some environmental stewardship.. Let's get started!. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. For this project you will need:. For this step, you will only need your smaller drill bit:. Drill four or five holes in parallel lines as shown in the picture in red. . Attach your larger bit to your drill and drill the two holes marked once again in red. Make sure that the holes are pretty much opposite to each other. These will be the holes for hanging your feeder. . Drill a hole at the end of both sticks. Drill a couple more holes along the center. While doing this be careful not to snap the popsicle stick in half. Try to only drill about five holes per stick.. You may be wondering why you have been drilling so many holes in odd places. Wonder no longer! These holes are for a technique that I call glue-filling. . The steps of how to glue-fill are as follows:. Glue-filling will help the glue permanently hold parts together. You will not be just utilizing the adhesion of the glue but the hardness of it as well. On my first feeder, I didn't glue-fill and after a couple of days, it broke.. Glue-fill all of the small holes in the lid. Try to join the fill for extra strength as shown in the picture. . Glue-fill the popsicle stick holes. . Put some fresh hot-glue over the glue-fill to glue the lid to the popsicle sticks. The sections of glue-fill should be touching. Try to move the popsicles sticks so they are parallel and centred on the lid.. This part is a little complicated so I broke it up into more manageable parts:. With your small drill bit again drill five holes it the bottom of your lid. These will let rainwater escape from the seed basin to prevent mold.. Even more glue-filling, I hope that you aren't bored of it yet. This will the last time, I promise. This time you will need to be careful of some things though:. Now for the moment you have all been waiting for! This part you only get one chance at so double-check everything before you move on. Look back at the picture a couple of times as this will help with the positioning.. Does everything look good? Great, follow these steps:. Put some glue on top of where filling it on the container. Now, align the fill in the cap to the container's fill and press down to glue them together.. To make the feeder hang better, tie an overhand loop in the center of the string. This also makes the feeder look nicer.. The whole purpose of this feeder was to hold food, right? I personally like to use black oil sunflower seeds, so my design (this one) works with those. You should be able to use any kind of seed, theoretically. Please let me know what kind you use in the comments. . I fill about 1/3 of the container before hanging it the first time, just in case it falls down for whatever reason. This will fill to almost the top with no problems, so really it is up to you how much to put in.. You will need to flip the feeder over right before you hang it, otherwise, it is probably better to leave it upside down.. When you do need to flip it follow these steps:. Before you hang your feeder, you should probably think about where it will go. Birds enjoy the security of being near a tree or tall bush to quickly hide from predators. Another thing to think about while hanging it is squirrels. Where I live they are a big problem. As an attempt to deter squirrels I give my feeders a sphere of at least 2.5m(8ft) in diameter of clear space. this way squirrels can't leap onto my feeders from other branches or the ground. I also like to put my feeders in places that I will see from inside of my house. . To hang your feeder, you will need to:. Once you have birds coming to your feeder often, (which shouldn't take long depending on where you live) you will be able to hand-feed birds. This is an amazing thing to do with kids and is a very rewarding and fun activity. What are you waiting for?. I hope that you have enjoyed the process of creating your own recycled bird feeder. I also hope that this has brightened up your isolation period as much as it did mine. If you have any suggestions to improve my design, that would be awesome! . If you liked this project and want to show your appreciation, voting me in the trash to treasure contest would really help me out. Thanks!. Participated in the Trash to Treasure Contest.",0
"How to upcycle a coffee can into a chic birdhouse. . Easy to make with hand tools and a few dollars in materials.. The most expensive part is probably the coffee that was originally in the can.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. These plans are adjustable to based on the coffee can you have. I used a standard 10 oz foil can.. You need the energy and you need to empty the coffee can anyways.. I made my birdhouse out of rough cedar that I purchased at Menards.. Any big box store would have similar materials.. You will need the following:. This project is easily completed with hand tools. Power tools make things faster but not always safer if you are doing this with a little helper.Tools needed:. Cut your boards to the sizes shown above.. You will need two pieces 4-1/4"" x 4-1/4"" square for the end panels.. Since our boards were 5-1/2"" wide, this will be the width of the widest roof panel. . The other one will be cut to 4-3/4"" to give us a 1/2"" roof overhang.. The length of the roof panels is adjustable based on the size of your coffee can.. Measure your coffee can then add 1-1/2"" for each end or 3"" total to the length of the roof panels.. After cutting, you might want to hit all the edges with some sandpaper to avoid nasty splinters.. Measure in 1-1/2"" from each end of the roof panels to mark where the end panels will be. . This will aid in assembly and nailing the birdhouse together later.. Use a rule and a square to mark your lines. . I know this is a birdhouse, but you can practice good layout skills even on a birdhouse. Use the narrow roof panel to layout where the glue and nails will go on the wider panel.. Pre-drill the nail holes with a 1/8"" twist drill. This is not necessary, but this will keep wood from splitting.. In this photo, you can see where I marked the layout for the end panels.. Glue and nail the roof together.. I used three nails here.. Here you can see how things will go together. . Notice the roof is now symmetrical and there is an even overhang on both sides.. This was designed as a wren house.. Draw an X from corner to corner and mark the center for the hole.. Use a 1-1/8"" spade bit to drill a through hole in one end panel.. If you want to make this for another type of bird, you will need to research what size hole you need.. Do not make the hole too large or you will get pests (eg. sparrows) living in you birdhouse.. Make sure your measurements and layout are still correct.. This is the last time to make adjustments.. Apply a bit of glue and assemble the end panels.. Use your layout lines to help you get these in the right place.. Pre-drill four nail holes (2 each side of roof) and assemble with 6d galvanized finish nails.. Take your time and check your alignment as you go.. Offset the nails slightly to avoid hitting another nail.. Use a few clamps or a helper if you need to while assembling the birdhouse.. Sometimes the parts like to move around too much while nailing.. Sometimes the nails will have a mind of their own.. This happens even when you are trying to be careful.. Take your time and tap or pull the nails out and try again.. I goofed on my layout lines. I just moved the nail holes over a bit and re-nailed things together.. The birds will never know the difference.. Maybe you can offer to discount the rent.. Use a 1/4"" dowel rod to hold the coffee can and the wood together.. Layout and drill a hole for dowel. I placed mine about 1/2"" in from the corner.. I ended up using a 9/32"" drill bit. The 1/4"" hole was too tight.. You will want the dowel to be secure, but you also need to able to remove it for cleaning and maintenance.. Drill a hole in both end panels.. Most people think a birdhouse needs a perch.. Have you ever seen a tree with a perch?. Birds will know how to get in and out of the birdhouse.. Sometimes the perch makes it too easy for predators to get to the eggs.. Trim it flush with the front of the house.. . I twisted two screw eyes about 1"" in from each end of the roof.. Pre-drilling will make this easier, but this is not necessary.. Use a pair of pliers or a nail to help screw these into the wood.. When the eyes are in, you are done!. Go outside and look for great places to hang your new birdhouse.. Congratulations on your project.. These are the screw eyes I used.. This pack cost me about $1.25 at Menards.. If you wanted to make this house last longer, I would use stainless steel hardware.. Here is another birdhouse I made using plastic canister from another brand of coffee.. Adjust the length of your roof panels to accommodate the difference in size of canisters..",0
"Build your own WiFi-Camera-enabled Bird Box, cheaply, and quickly. Perfect for an After-School/Club/Scouts project or a weekend DIY build. Watch birds build nests, raise young, and before long - the young fly leave the nest!. Although camera kits do exist for bird boxes, they have a few limitations - they are usually wired (i.e. not WiFi) and if they are, they are at least 2-3x more expensive than this - and don't 'scale up' effectively: You have to have one camera to one next box, it'll cost a fortune, if you wanted to observe multiple boxes. (With that said, if you do still want to install permanent 1:1 camera:box, then this is still much cheaper! (see Appendix 1)). . This 'bird cam variation' uses 3ml Syringe Tubes to create nifty little rainproof 'spy holes' to insert a WiFi endoscope in/out of, with minimal disruption to the nesting birds. The pictures and video can be viewed on any smartphone.. Endoscopes are used to inspect drains, under floors, doing car repairs - you name it. Consequently, they are made at higher volume than bird cams, and hence are cheaper (and arguably much more compact). Indeed, once the season is over / when not in use, you still have a useful device. So I think this is an effective way to get started, and if you really become obsessed, sure - upgrade to the fancy kit ;o). PS - Images are not from me. I'm just at the start of the season, and will update when I get pics.... Essentials:. Bird Box (x4 bargain): https://amzn.to/3cbFc30(Can get larger bulk quantities for Schools, but 4 seems a good starter pack!). WiFi Endoscope: https://amzn.to/2VgWupq(One endoscope can be taken round multiple boxes, where accessible).. Drill: https://amzn.to/2VfQAEJ (in case interested).. 3ml Syringes: https://amzn.to/3bXPkfH (suggested size).. 10mm Drill Bit: https://amzn.to/37WzKxj (suggested size).. Mini FIles: https://amzn.to/2VhyK4u . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. The Box shown is a fair price (around £3.5/box). It's hard to argue with this, when you consider you'd have to buy screws, hinges, paint, nails, and drill and assemble. So I really think that this is a good starter project - especially for schools, where many kids want to have a go, you can buy a large quantity to install in a number of locations.. However, if you really want to make one from scratch, this looks good:https://www.rspb.org.uk/fun-and-learning/for-famil.... I 'upgraded' this bird box with some dowel on the front, so birds could perch and check it out. I'm not sure how much this improves the chances of nesting, but it'd seem plausible to want to not fly into a hole without looking, right? We shall see.... I used a 3ml syringe, which has a 10mm OD and 8mm ID. . The camera has an OD of 7.75mm so fits nicely into the tube. It's coincidence, but works a treat.. Cut in two, around the '2.5ml' region - or - [10mm + the thickness of your bird box wood walls].. If you find it a bit tight, give it a stretch with some pliers. . I 'hovered' the camera in the approximate middle to check the alignment. This turned out to be 4.5mm from the back of the (roof) of the bird box, and naturally dead-centre. . Taking a 10mm drill bit, I drilled the hole. Note: first I drilled perpendicular to the roof, and then once 'established', I manoeuvred the drill to be vertical from the floor of the bird box. . Lastly, I gave the drill a slight 'wiggle' to allow a not too tight fit. . I inserted the Syringe piece from underneath, as shown.. I removed the 'collar' of the camera (this is a screw fitting for other attachments, not needed here), to give easy passage in the tube. If it is tight, use a small file, or a bit of studding to free up the hole.. Follow the instructions on the endoscope to get images, as above.. ---. Safe to say, rotating the camera to get a good angle is easy.. But do pay attention to the angle (x and y axis), and gently twist the syringe into the best position. . Don't glue it yet, but get happy with the set-up. . I realised if I made a 'viewing port', I'd need to create a reliable water-tight bung, that was still easy to remove. This might sound easy, but I can assure you from my time as an engineer at Dyson, that rubber seals are not trivial. So why 'reinvent the wheel' when there was a great one in the Syringe. Indeed, this was the initial inspiration, and as it fit the endoscope - it seemed to lucky to just ignore, so I wrote up the Instructable!! . Anyway, using a scalpel or pliers, cut the plunger in half, and re-insert the seal end into the syringe to stop water dripping on your chicks when not viewing with the camera.. So with my rubber ducky mounted on some blocks to what I anticipated to be the next height, I checked the camera function, focus, etc. I was very impressed, and as you can see the focal point is good. . Now you have the syringe 'camera mount' all set, carefully remove the camera.. Take some superglue and fix in place. If you have a lot of space that needs 'filling', use some woodglue, or even Sugru, as shown. Indeed, a pack of Sugru is rather expensive for one project, but I reckon one single pack of it would have done easily 10 seals here. . Adhesives:. Sugru (optional): https://amzn.to/2T4MEEe . Wood Glue (optional): https://amzn.to/2Vg2ajq . Mini Super Glue (bargain!): https://amzn.to/2Vg2ajq (recommended to get). . Double Bubble Epoxy (not essential): https://amzn.to/2Vg2ajq . I bit of an optional extra, but I like that this drilled-out twig looks nice, but is a secondary barrier to the elements.. Follow steps as shown, and be aware to cut slight angles, to match the slope of the roof, and also to keep rain off the top of the chimney/stick. . For c.£4 per box, one can get going with making quite a few of these!. My son and I were very pleased with these, and we'll look froward to installing these around the garden/trees/shed/etc. to see what works best.. Wish us luck!. OK - so forgive the earnestness here, but I'll be back with some real images in due course.. I'm not a fan of posting if I have not tested fully, but given this design is based on existing RSPB bird boxes, it really has no reason to perform less well than other successful alternatives. Safe to say one must take care not to disturb the birds once established, and if you're unsure, then perhaps installing the WiFi cam permanently might not be a bad idea. . Not only is the Endoscope WiFi Cam cheaper, but even if you use it 1:1 ratio, it will allow you to learn the best viewing angles for each species, etc. I will post more as I learn more =D. Although I've suggested keeping this setup as a high ratio of [experimental] bird boxes, and 1 camera, you can of course install the system 1 cam : 1 box, as a permanent setup. . To do this you'd need to place the WiFi transmitter in a waterproof enclosure. Sometimes called an 'IP rated' enclosure, these are commonly sold for all manner of electronics that need to survive the elements outdoors. . Luckily the endoscope cable (i.e. not unit) is waterproof, so this can be left exposed. However, the electronic 'box' and the USB connection should be placed inside. Care should be taken to ensure that the USB power supply wire is kept dry at the side being plugged in. . When working with main electricity (even when 'safe' at the USB side) care should be taken to ensure the installation is safe. If in doubt, consult an electrician or other qualified person. . For example: Enclosure: https://amzn.to/32n9viwUSB Charger: https://amzn.to/2PjDnar. You can buy a timer switch if you are the forgetful type! Timer: https://amzn.to/3a67H07. I realised I had some Syringe Tube left over. I was going to chuck this in the trash, when I realise that it might well be put to good use to create more viewing holes.... ...I set about installing them at different heights, vertically, but also horizontally too. . I've seen a few camera bird boxes, and it seems that one issue is that if the camera has poor low-light management, then the images are dim/poor quality. . Having just been playing around with vacuum forming in HDPE, from recycled Milk Jugs, I realised I could make a nice 'opaque' window from this. I used a heat gun for quickness, as the form was simple. Steps as shown. . I should say upfront, I'm very sceptical about the various advertised bird boxes that claim to be able to stick with suction-cups to windows, and be able to be viewed from inside. . Firstly, I think the suction cups will not cope with changes in moisture, heat, cold, etc. - and will likely fall off, which would be a real shame if there were eggs/young killed in the process. . Secondly, I suspect that if mounted to a 'busy' window, this will freak out the birds. I didn't see any convincing reviews or videos of people with actual birds nesting. My hunch is that it needs to be covered up most of the time - hence I chose a window I have in my shed, which the blind is usually down. Do hopefully this will work. We shall see..... If you have any tips, pictures - please post below.. If you have a school or are a teacher, do ask if anything is unclear - I intend to do this at my local nursery/afterschool facility, so hence trying to keep costs down.. More like this at: http://www.judepullen.com/ and https://twitter.com/Jude_Pullen. Lastly, please vote if you liked this! Thanks =D. First Prize in the After School Challenge. Did you make this project? Share it with us!. 18,458 Enrolled. Question
 
 2 months ago
 
 . Love the concept. Thanks for sharing. Would like to do something similar with a couple of the bird houses we've scattered about - BUT, I do not have a Cell Phone! I have Internet and a router and Wi-Fi, Chromecast and (Win7 / Win10 laptop(s) and would like to find a WIRELESS Borescope thing that I could connect to as I do my HP Wireless printer.So, Is there such a thing? Or ""an app for that?""One other question on the chance that you've done more research than I accomplished last night: Is your device one that uses a fiber optic cable?Anyone?. 
 
 Answer
 
 8 weeks ago
 
 . Hi. Thanks for the kind words. Glad you like it =)Sadly, I personally didn't find 'an App for that', as even most Emulators don't likely work with something like this (or unless you're a coder are tricky). X-Code et al. I think you're asking for a WPS function on this scope, but it seems unlikely as this is a next level of 'smarts', but I could be wrong, but nothing in the description that suggests otherwise.~ If I were in your shoes, assuming you're game for $40 to make this, you can honestly pick up an unlocked second hard Android phone for probably $50 on Amazon or eBay. the DEPSTECH software needs nothing fancy to fun it. So I'd consider that perhaps? You don't even need a SIM card. Hope that's helpful.. 
 
 
 2 months ago
 
 . Love what you've done -- but had an idea on how it could be taken a bit further. You wouldn't need to send in a camera probe to get results or ever disturb the birds.But how about a very inexpensive micro-board with camera and a solar panel on the roof? It could wake up every so often take a photo. And then once a day it could upload all the photos over wifi.Micro: ESP32-camSolar arrays to support battery typebattery under protective housing. 
 
 Reply
 
 8 weeks ago
 
 . Hi Capt!Thanks for the message. I'll fess-up and say I'm no coder (no shock, huh!), so this project was part borne out of my lack of ability, but also an awareness that there are many people who'd want to use cameras but also are not 'techy'. It's pretty much plug-n-play! That said, it is certainly on my radar to do a PIR sensor update (but it'll be more expensive but essential for situations like monitoring Hedgehogs, etc. - which need a 'trigger'), so I'll put it to be folks I'm working with to look at the ESP32. So, thanks for that =)J. 
 
 
 2 months ago
 
 . Some sort of opaque window in the roof would work well to provide light recording but allow the birds darkness to sleep.. 
 
 Reply
 
 2 months ago
 
 . I put mine on the side, and I'm hoping it's enough, but I worried that it'd leak on the top, as it's harder to do a seal that way. But I'm open to suggestions. And indeed, if birds dislike skylights, and prefer sidelights. Complex animals, huh! xD. 
 
 
 2 months ago
 
 . Spying on hapless birds? :oCan't a bird have a bit of privacy? 😒. 
 
 Reply
 
 2 months ago
 
 . This cartoon did come to mind as I was doing it, I have to admit! xD. 
 
 
 2 months ago
 
 . I love this project since I've built a few birdhouses in my days as a Boy Scout & now. I have one suggestion/tip. Make the back panel longer than the house itself. The extra wood extending beyond the bottom of the house makes for easier and more secure mounting. A house hanging from a nail will eventually fall. You can also have the panel extend above as well, but you have to modify your hinged roof. Another option is a hinged front that swings out from the top. . 
 
 Reply
 
 2 months ago
 
 . I think I got lucky with this particular birdbox - as cheap as it is, it has a brass 'keyhole', and I mounted it on a 2inch screw, so I'm hoping that'd do it. But taking your point seriously, I do think a backboard is a good suggestion, and given the storms of late, I'm inclined to reinforce actually, before anything sets up nest. Nice idea with the 'side flip' roof...will have a think at how to do this for V2.0! Thanks.. 
 
 
 2 months ago
 
 . This is a fantastic concept and project! The next step would be to modify it with a motion sensor that could detect when a bird enters or exits the box and give it a stand-alone power source. I'm thinking of an application where a the scope stays attached to a single box and off in a tree and one might walk within wifi range and simply use the phone's app to see what's going on. This is beyond my talents but it's cool to think about.. 
 
 Reply
 
 2 months ago
 
 . That's a great call :o) I guess I've been aware that I could do some fancy Raspberry Pi stuff, but of course it requires some knowledge of coding. This project is certainly more 'low entry' on skill level, intentionally. That said, I'd be up for finding a simpler hack....so here's hoping Instructables community might have some ideas! There is a very comprehensive one I mentioned, but it's very very advanced tbh. So something in-between is needed. Hmmm. Any thoughts - please share!. 
 
 
 2 months ago
 
 . This is really cool! Good job! :D. 
 
 Reply
 
 2 months ago
 
 . Thanks =). 
 
 
 2 months ago
 
 . Have you found any Infrared Endoscopes? Alternatively, tiny wifi spy cameras are about $10.. 
 
 Reply
 
 2 months ago
 
 . How would those function differently than the endoscope? I'm very interested in that lower price point, haha. 
 
 Reply
 
 2 months ago
 
 . The biggest advantage would be infrared LED which the birds can not see. I am thinking about doing this for owl boxes so 24/7 daylight might be an issue. Be sure to get the ones that will allow the the IR LEDS to stay on with exterior power. The other issue is supplying power. While power cables are cheaper than video cable ( not much) since you need to supply power ( for constant use) might as well use a wired camera. This is a great project, I am just tweaking it to my personal need. Here is an IR borescope but not wifi https://www.overstock.com/Electronics/SpyTec-16ft-USB-Borescope-Endoscope-Inspection-Camera-w-IR-LEDs-for-Night-Vision/14585391/product.html. 
 
 Reply
 
 2 months ago
 
 . So I've not tested this, but it seems around £28 (inc postage in UK). https://amzn.to/2I2ieNS True, tiny 10-buck spy cams do exist, but often get warm quickly - I was keen to put as much of the electronics away from the birds as possible. I might be worrying unnecessarily, but until I know better <<please comment if you do>> I'm trying to minimise disturbance to birds. Thanks for comment tho - got me thinking! . 
 
 
 2 months ago
 
 . Thanks... I'm going to try this. Although I'm no birdhouse expert, I have read in more places than one that the perch on the outside is totally unnecessary and even a hazard as it gives predators like raccoons, squirrels, etc. a perch to hang on to while burglarizing the nest. I've made a point to watch the birds around here and none of them seem to have a problem perching on the entry hole while investigating their future home. . 
 
 Reply
 
 2 months ago
 
 . Some species of birds require the perch, for others they do not want the perch.You can use that to select the kind of bird that you want in the bird house.You will have to do some research to find out their preference.. © 2020 Autodesk, Inc..",0
"Building a birdhouse can be a difficult, yet rewarding task. There are many different types of birds, which is why there are so many different types of birdhouses that you can make. As by reading the title, the birdhouse that we will be giving you instructions on how to make is a bluebird birdhouse. It can be difficult, but as you work on it, it gets easier, because you will be repeating many steps and using the same measurements. Since it is hard to explain how to build something with only words and no pictures, or no words and only pictures, I have created this instructable to help you build your birdhouse.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Before you start the project, you are going to want to gather the following materials and tools:. -Materials Needed:. -Tools Needed:. -Extra Notes:. . After you have gathered all of the materials and tools you need, it is time to begin the actual constructional process. First thing you need to do is measure 10 3/8"" from the start of the 4' board. Line it up carefully at the saw, and cut on the line. Set the piece you just cut out aside, and make another measurement at 10 3/8"" on the long board and cut it out. You should now have 2, 10 3/8"" pieces out of the 4' board. The two pieces will be for your left and right sides of the birdhouse. The only special thing that needs to be done with the sides is that you need to cut the top at an angle. I will include pictures, but basically what we did is we had the wood vertically in front of us, so we could see the flat side, and measured 10 degrees down from the top on the left side for the right wall, and the right side for the left wall. This way, the smooth side can be out on each side. After marking the 10 degree space, cut from the opposite corner down to the 10 degree mark. Make sure that when you cut it, you don't trim any of the top, because you do not want to change the length. I have included pictures to help you understand.. To cut out the piece that will be the front of the birdhouse, you want to start by measuring 9 1/2"", then cut that piece out. The front will have features that are for this birdhouse. First, take the piece you have just cut out, and measure 7 1/4"" up from the bottom. Make a mark on that spot, then find the halfway point across, so it intersects with the mark you made from the bottom. now, take your 1 1/2"" hole saw, and center it where the two marks meet, and drill the center hole. This is where the birds will enter. After you drilled the hole all the way through, measure 1/2"", and use your square to make a line all the way to each end. Then measure another 1/4"" down from that one, and another from that line. You should now have three lines, each spaced 1/4"" from each other and the 1/2"" down from the hole. We used the sliding square to help keep the saw straight. You made the lines so the birds could grip to the house, and this is better than putting a peg in, because predators can grab onto the peg and reach into the house. Next, you are going to want to change your saw angle to 10 degrees, and bevel the edge from the top. You want to make it so it is slanted down towards you. Make sure that when you bevel the edge, that you don't cut any of the length down. You are going to want your smooth side up, so when you bevel the edge, it is the right way when assembly time comes.. The bottom has many unique features that will all be covered in this section. First order of business, you want to measure 4"" from the 4' board. Then, you want to measure 1/4"" away from each side of every corner. Then, you can draw a line from each mark on the corners, or you can just cut across. Sand the edges to make each corner rounded. Doing this creates little spaces where air can flow through, and any water that gathers in the house can drain out.. After cutting out all of your sides of the birdhouse, you should have a piece of wood that is approximately 1' 1 3/8"", or 13 3/8"". The only thing that you need to do with the back piece is bevel the top part, just like you did to the front. When you bevel the back piece, you will need the rough part of the wood facing up, unlike the front piece, where it was facing up. If you don't have a rough and a smooth side, you just need to make sure that you have your beveled edges going the right way. You want the wood to be slanted the same way, towards you. After you having finished beveling the back part, it's time to measure and cut the roof.. Now that you have used up your 4' board, you will need your second piece of wood. It needs to be 1 x 8, so 1extra inch are allowed on both the left and right sides of the house. The board should be 10 1/2"" long, and 9 1/4"" wide, so the board shouldn't need to be cut. Before you move on to the step, check and make sure that the roof ends are squared. The main part for the roof is when you are going to attach it to the rest of the birdhouse.. After you have fully cut your pieces, it is time to assemble your birdhouse. There is a certain way that we attached the sides, which made it a lot less difficult to put together. First, we started by attaching the right side to the back piece. The measurement we used most is 3/8"", which is half the thickness of the board. When you first place the right side on the back, you want to mark 1/8"" down from where you beveled the edge. It should be 1/8"" down from the bottom of the bevel. We put the right side on that mark, and clamped it to the back. We measured down 2"" from the top where the right side meets the back, and 3/8"" in from the left side of the back. Then we measured 2"" up from where the right side meets the back on the bottom, and 3/8"" in from the left side. Make sure that your measurements are all on the back side of the birdhouse. Pre-drill the hole, so the wood doesn't split, and then drill the screw in. Do that to each meeting point. That is how to attach the right side.. After you successfully attached the right side to the back piece, it's time to attach the bottom. First, you want to look at you right side piece, and make a mark 1/8"" up from the bottom. You are going to put the bottom edge of the bottom piece on that line. We clamped the bottom to the right/back piece. Clamps are optional, but they aid in assembly. After clamping the bottom to the assembled piece, we looked at the right side, and measured 1-1/4"" from the left side of the right piece, and the right side where it meets the back, not starting on the back side. Then, since we pushed the back up 1/8"", you want to measure 1/2"" up from the two points you just made. Now just like before, you pre-drill the hole, then put the screw in. Now that you have the 3 pieces attached, it's time to attach the front.. Lay the front piece on your assembled piece so it is flush (even) with the bottom of the right side, and so it lays flush on top of the right side. First, you want to mark 1"" up on the face from the right side, and 3/8"" from the edge. Now, measure 1"" down from where the beveled section ends, and 3/8"" in, so it's in line with the bottom screw. Pre-drill and then drill in the screw. Now, find the middle of the front piece, and mark it on the bottom. From that point, measure 1/2"" up, so the screw goes into the middle of the back. Pre-drill and drill in the screw. Now that you have fully attached the front, it is now time to put the left side on. . This side will be the most difficult, because it will be a swinging door, which allows you to open up the bird house and clean it out. First, you can make a reference line using your square and a pencil, make a line from the middle of your screw to the other side. Doing this makes it easier to make the screws aligned. Make a mark 3/8"" in from the left side on the front face, where your reference line is. You can now pre-drill and drill in the screw. When you pre-drill, make it just a little bit deeper, so your side can swing and the screw can be tight. If you want to make it easier, make a reference line going down across the left side, then 3/8"" onto the back. The screw for the left sides that are on the front and the back must be in line with each other, otherwise the left side won't swing. These screws act as the hinge.Pre-drill, and drill in the screw. Test and make sure that the left side swings. Now, to keep it from swinging open, make a reference line just like before, but on the bottom. Make a mark 3/8"" in from the reference line you just made, and pre-drill a little deeper, just like the other left side screws. This screw keeps it in place. If you want to open the left side, take out the bottom screw on the left, so you can open it. Now, we move on to attaching the final piece, the roof.. Since you beveled the edges, the roof will be attached at a slant. First, with the birdhouse laying front side up, lay the roof down, so it's flush with the beveled edges and sits on the table. This is the easiest way to attach the roof. Now, you want to center the roof, so there is an equal amount of overhang on the left and right sides (it is good to make marks with a pencil after it is centered, so you don't lose the correct placement). If you want, you can clamp it down so you don't lose your placement. We marked 1 3/4"" from each of the edges on the top, then 3/8"" from the back edge. Both of these will be along the back edge. After your measurements are correct, pre-drill and drill in the screw. Now, you only need to do two more screws. Now, you want to measure approximately 6 5/8"" from the back edge, so if you were to draw a line down, it goes through the first screw on the top. After you have your mark 6-5/8"" down and 1 3/4"" in from both sides, you can pre-drill and drill in the screws for the final time. Now you're almost done! Just a few things for clean up and finishing touches, and you'll be good to go!. Now, you can take your Orbital Sander, and sand each flat face. After all of the pencil marks are gone, you can take your sheet sandpaper, and run it along the edges, which makes them smooth. Be careful not to get any slivers! And now you are done! You can mount it on a tree or a fence post, close to a source of water. You can drill it into a tree from the access wood on the bottom, and angle a screw in from the top to secure it that way. Enjoy your new Bluebird House! . Did you make this project? Share it with us!. 18,458 Enrolled. 
 
 
 8 months ago
 on Step 12. Nicely done. I've got to get back into building bird houses.. 
 
 
 11 months ago
 
 . That looks great! Birdhouses seem like great projects for people when are getting into woodworking :). © 2020 Autodesk, Inc..",0
"Our local woodworking club has an annual Birdhouse Contest. It's an opportunity for us to try to out-do each other, so we get some crazy entries. I made this Rubik's Cube Birdhouse. I always try to make something that would be funny to see birds using. But, I spend so much time building and decorating them that I just put them on display in my workshop, rather than let the animals and weather destroy them. This one is no different.. Watch my build video, then follow the instructions and pictures in this Instructable to build one yourself!. Supplies: 6-foot 1x10 pine board, wood glue, spraypaint, one 1-1/4"" screw, blue tape, sticker label (optional). Tools: Table Saw, Drill, Drill Bits, Sander, Screwdriver, Clamps, Printer (optional). Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. My birdhouse was made from six 9"" squares with 45-degree bevels on each side. You could certainly build the box using straight cuts and butt joints if you want by adjusting the dimensions of the sides to get a cube.. I tilted the table saw to 45-degrees, then set the fence so that it was 9"" away from the point where the blade exits the board. I cut all four sides to make a square and repeated that 5 more times. I recommend the magnetic Wixey Digital Angle Gauge for getting accurate bevel cuts. First, you zero it on the flat saw table, then stick it on the blade to set the right angle.. I selected one piece for the front of the birdhouse and drilled a 1.5"" hole, which is suitable for bluebirds. We have a lot of those here in the ATL.. Tip! Birds are picky about the size of their birdhouses and holes. Find out what kind of birds are in your area, then look up a birdhouse dimensions chart to find a suitable size house for your birds. Also, birds don't need a perch so ditch the dowel - it will just embarrass them.. I glued the front piece and 3 other pieces together using blue tape for clamping pressure. I made sure the edges were flush and the box was square. After gluing on the top, I added a cross brace across the bottom opening so I would be able to screw on the bottom. I used my trim router to put an 1/8"" roundover on the corners.. Tip! When making a birdhouse, it's a good idea to have a way to open it so you can clean it out.. To make it look like a Rubik's Cube, I set the height of the table saw blade to about 1/4"" and cut some shallow grooves 1/3 of the width into the box. My box was 9"", so I set the fence about 3"" away from the blade.. That little yellow Gator Zip Sander is awesome!. It is a good idea to add drainage holes in the bottom of a birdhouse. I drilled a few holes inside the grooves on the bottom piece. I also drilled a countersunk hole in the center of the bottom so I could screw it onto the box.. I used yellow, red, blue, green, white, and orange spray paint to paint the sides of the cube. Tape on some paper towels to block over spray from getting on previously painted sides.. Note: One of my YouTube viewers commented that birds stay away from bright colors, like red or orange. Not sure if that's true or if it was just a troll, but you can't build a Rubik's Cube Birdhouse without them! Just be aware that if you want to put yours outside for the birds, do a little research on this ""tip"" and maybe you should paint the front a different color.. I masked off the grooves and painted them black so it would look more like a Rubik's cube. I recommend using a heaver paper than paper towels to block the paint, because the paint did soak through and bleed a little. It was easily scraped off with a razor blade though.. I used regular copy paper to mask off the corners and painted them black as well. The copy paper did a much better job at blocking the paint than the paper towels. Peeling off the masking to reveal the finished paint job was so satisfying!. I printed the original Rubik's Cube logo on a sticker label and stuck it on the center white square. Since I'm going to just display this birdhouse, I made a little triangle stand for it.. If I was going to actually put this outside for the birds, I would probably attach it to a tree or fence. I felt bad that the birds wouldn't get to use it, so I made some less time-consuming birdhouses for them out of cedar fence boards.. Thanks for checking out my Instructable! If you like this project, check out My Website for other projects and lots of free plans. You might also enjoy watching more of my project videos on My YouTube Channel. Have an awesome day! - Steve.... Participated in the Colors of the Rainbow Contest.",0
"When the Polar Vortex decided to turn New England into a deep freezer, the birds that I regularly feed always looked cold. They would fluff their feathers as much as they could and hunker down as low as possible to minimize the wind effects. The final straw was a Carolina Wren hiding under a board on my daughter's deck. That tiny bird was doing its best to stay warm and ALIVE, and I felt compelled to do something to help. I know there are a variety of roosting pockets and houses available for sale, but I love to crochet and I knew I could make something similar. That is how this project was born.. Note: You’ll need to know basic crochet techniques and stitches to complete this Instructable.. Materials Needed:. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Rnd 1: Magic circle (or whatever your preferred starting ring might be), ch-1, 10 HDC in center of ring; sl st to top of 1st HDC. (10 sts). Rnd 2: ch-1, 2 HDC in same st as ch-1 (ch-1 does not count as st); 2 HDC in ea st around; sl st to top of 1st HDC. (20 sts). Rnd 3: ch-1, HDC in same st as ch-1, *2 HDC in next st, HDC in next st; repeat from * around; sl st to top of 1st HDC. (30 sts). Rnd 4: ch-1, HDC in same st as ch-1, *2 HDC in next st, HDC in ea of next 2 sts; repeat from * around; sl st to top of 1st HDC. (40 sts). Rnd 5: ch-1, HDC in same st as ch-1, *2 HDC in next st, HDC in ea of next 3 sts; repeat from * around; sl st to top of 1st HDC. (50 sts). Base / bottom is done. Weave in the start tail before you go any further.. Now for the sides.. Rnd 6: ch-1, BLO 1 HDC in ea st around (50 sts) (By using only the back loops, the stitches are forced to stand perpendicular to the bottom.). When I do Back Loops Only, I make sure to pick up two parts of the stitch to ensure a good hold that won’t stretch like a single part will. In the first picture, you can see all the parts on the hook.. The close up view shows you how I find the extra part for this version of BLO.. The third picture shows what it will look like turned upside-down when the round is complete.. Rnd 7 & 8: Using both loops (here and for rest of pattern), 1 HDC in ea st around (50 sts). Rnd 9: ch-1, HDC in same st as ch-1, 44 sts, ch1, sl st in last 5 sts, ch1, join w/ sl st; (45 WORKING sts). Rnd 10: ch-1, HDC in same st as ch-1, HDC in 43 sts ; 2 HDC in last st; ch-2, TURN. (46 WORKING sts). Rnd 11: (ch-2 counts as first st); HDC in 45 sts, ch-1, turn. (46 WORKING sts). Rnd 12: HDC in same st as ch-1, HDC in 44 sts; 2 HDC in last st; ch 6; sl st to join beginning of rnd.. Rnd 13: ch-1, DO NOT TURN; HDC in same st as ch-1, HDC in 45 sts; 4 SC into ch-6 space; sl st to join beginning of rnd. (By using Single Crochet stitches and a chain-6, it causes the opening to arch.). Rnd 14-17: ch-1, HDC in same st as ch-1, HDC in 49 sts, sl st to join, ch-1 (50 sts). Time to put a rounded roof on the shelter (the most complicated part). Rnd 18: (starts with 50 sts) HDC in same st as ch-1, HDC in next st, HDC2tog (decrease), HDC in next st; *HDC in ea of next 2 sts, HDC2tog (decrease), HDC in next st; repeat from * around; sl st to first HDC, ch-1 (10 decreases = 40 sts). Rnd 19: (starts with 40 sts) HDC in same st as ch-1, HDC2tog (decrease), HDC in ea of next 2 sts; *HDC in next st, HDC2tog (decrease), HDC in ea of next 2 sts; repeat from * around; sl st to first HDC, ch-1 (8 decreases = 32 sts). Rnd 20: (starts with 32 sts) HDC in same st as ch-1, HDC2tog (decrease), HDC in next st; *HDC in next st, HDC2tog (decrease), HDC in next st; repeat from * around; sl st to first HDC, ch-1 (8 decreases = 24 sts). Rnd 21: (starts with 24 sts) HDC in same st as ch-1, HDC2tog (decrease); *HDC in next st, HDC2tog (decrease); repeat from * around; sl st to first HDC, ch-1 (8 decreases = 16 sts). Rnd 22: (starts with 16 sts) HDC2tog (decrease) same st as ch-1 and next st; *HDC2tog (decrease); repeat from * around; sl st to first HDC (8 decreases = 8 sts).. Fasten off, leaving enough tail (around 25”) to close top and make a hanging loop. Weave tail through all 8 sts and pull tight. Tie off, then chain approximately 20 links for the loop. Tie off the chain and weave remaining tail very securely through sts.. The completed Roosting Pocket: the first picture is the view from the front and the second picture is of the bottom. I stuffed it to show the shape.. Cut 9 bamboo skewers in half, and use the unpointed pieces for perches. Put three pieces together, then use thread or thin twine and lash them at each end to make a single perch. Repeat the procedure two more times, resulting in 3 perches. . One perch should be inserted side to side, one or two rows above the bottom of the pocket, and centered between the front and back. The second and third perches should be inserted front to back, one to the right and just above the port, and the other to the left of the port and slightly higher. This will give the birds a variety of seating options.. Insert a perch in between stitches at the desired location. Find the corresponding space on the opposite side and bring the end out at the same level.. The pictures show the front view and back view of perch placement:. Once you’ve inserted the perches, hang the Roosting Pocket in a sheltered south- or east-facing location, somewhere where birds would naturally seek protection from harsh weather. Be sure to make daytime checks inside the pocket as winter progresses into spring and the days start to get longer. If you see signs of a nest in progress (addition of twigs, grass, moss, or lots of feathers), take it down immediately -- roosting pockets are NOT a safe place for babies! Even if you don't see nesting activity, it's best to take the pocket down after the danger of frost has passed.. Remove the perches before laundering. They could probably stand a seasonal weak-bleach treatment and then thorough air-dry before being bagged for storage.. According to the Lion Brand label, the yarn I used can be machine washed separately with mild soap on gentle cycle. Use lukewarm water. Do not bleach. It does not require fabric softener and its use is not recommended. Tumble dry on low heat and remove promptly. Hand washing and drying is also an option, using warm water and mild detergent. Rinse well in cold water, then squeeze and roll in a towel to remove excess moisture. Spread item flat on a smooth surface and allow to dry thoroughly. Do not hang to dry.. Participated in the Warm and Fuzzy Contest.",0
"Installing a Bird Feeder can allow you to help some species during the middle of winter when food is scarce. You will also be able to observe some of the species that live near your garden, take pictures of them or just enjoy the presence of the bird.. This Instructable explains how to cut and build your own bird feeder with a laser cutter.. Enjoy !. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. The given file is optimized for use with an Acrylic plate or any other material that can be laser cut.. I used 250mm*500mm plates that are 3mm thick. If you want to use another dimensions, you can rearrange the design be be careful to drill adapted slots to mount easily the bird feeder !. You can also get 4 M3 screws to add an holder that will help you to attach the feeder to a tree, or use clamps or glue.. Download the attached file and cut it, you can also add some custom engraving if you want ^^. With a hot air gun, or any other source of heat, you can heat and fold the two bars with holes that will be useful to attach the feeder to a tree. There are tiny holes to help you to fold at the right place. When heating it, the plastic will soften, then you will be able to do a 45° angle with it and maintain it while it cool down.. Be very careful when using hot tools !. Assemble all the pieces together, and use the 14 small ""keys"" to hold all pieces together. Normally all pieces and slots are different so you can't make a mistake building it !. Same thing that the precedent step, you can heat and fold the corners of the roof. Be careful not to heat it too much or the plastic might burn or get ugly bubbles ! Be patient and fold it when the plate is softened over the whole width. I used M3 screws and bolts, but you could maybe use some glue or even clamps to make it 100% plastic ;-). I used some sunflowers seeds to fill it, in France (where I live) some bird like Great tits like them a lot !. Now you only have to find a tree to install it, thanks to it's holders that can help you to maintain it with wire in the holes.. Here you can find tips about locations where to install bird feeders :. https://www.allaboutbirds.org/where-to-put-your-bi.... I hope you liked this tutorial, feel free to ask any questions or suggest some improvements in the comments !. Participated in the Plastics Contest.",0
"Spring is coming up and I'm planing on adding new birdhouses to our garden. I've found and old PVC sewer pipe in my workshop which would be just perfect for this project. I've seen something similar in a garden center, but I'd rather build it on my own and I can recycle the old PVC pipe as well. I'm planing to build two different kind of houses. There will be two similar ones, which are shaped like a mail box for newspaper (horizontal pipe) and one which looks like common birdhouse (vertical pipe with a small roof).. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. I need three pieces from my pipe to build the bodies of the houses. The two horizontal houses have a length of each 35cm (30cm due to the angular cut) and the vertical house a height of 25cm (20cm due to the angular cut). The pipe has a inner diameter of ~10cm. Please see the picture for all dimensions.. I use two parallel wooden strips as a jig, which helps me cutting. I use a saw to cut the pipe. I can use one angular cut for two bodies.. I use a piece of plywood for the back and front. I need two circular pieces and one ring-shaped piece for one birdhouse (two for the vertical house). The diameter equals the inner diameter of the pipe. I use a compass to draw three equal circles, one with a smaller inner circle (the ring should have a thickness of 1-2cm). . I drill a hole into the inner circle and use it to cut it out with a jigsaw. Now I cut out the outer circles.. I repeat this process once for the second birdhouse. The vertical house needs just one circular and one ring-shaped piece.. The front needs an entrance hole and a perch. The diameter of the entrance is very important and defines the type of bird which might be using the house. I've found a nice list of typical diameters for some species: https://www.thespruce.com/bird-house-hole-sizes-386641. You might need a bigger pipe for the big birds :D. I use a foster drill to cut the entrance hole and a normal wood drill for the perch. The perch is a simple round-shaped wooden beam. I use wood glue to mount it to the front panel. I add a stainless hook to the back panel, which makes it easier to remove it later on for cleaning purposes.. The vertical house needs a roof. Therefore I cut a square out of the plywood using my jigsaw. You can use a straight lath as a guidance. I use a edge length of 18cm.. To mount the roof to the pipe I use a router to mill a a small groove into the roof part. Therefore I mark the pipe using a pencil. I fixate the part with my clamp and use my router freehanded to mill the groove. The groove is not perfect, but it's enough for this project. The groove will be later filled with glue and silicone so nobody will notice it :D.. I want to cover the roof with a sheet of metal. I had some spare from building a carport. I cut a square out of the sheet, which is 2cm wider on each site than the roof (22cm). There might be condensed water between the wooden sheet and the metal sheet. Therefore I use a small piece of roofing paper to protect the wood from moulding. I just nail it to the plywood using galvanized nails.. I wrap the metal sheet around the wood, fold it at the edges and use the same nails to fixate it.. The vertical house has no front made of wood. The body itself has the entrance and the perch. Therefore I use a foster drill to cut the entrance and a wood drill to cut two holes for the perch (one on each site). The perch goes direct through the whole body.. I will cover the bodies with spry paint. Therefore I use grinding paper to roughen the surfaces and water to clean it up afterwards.. Let's get some color, shall we? I hang the bodies on a rope and start painting the inner surfaces and edges. While the parts are drying, I build a small rack, which will help me during the painting process. . The parts are dry and I mount them to my rack. I can rotate the parts just by rotating the rack. During the rotation I can apply the paint evenly.. The wooden parts need a coating as well. I use three layers of white paint, which is suitable for the outdoors. The perch is going to be red as a nice eye-catcher :).. Now I can mount the front and the ring-shaped parts to the bodies. I use three stainless screws and three plastic washer for each part. The plastic washer will seal the hole and will keep the water outside. I mark three spots equally around the pipe and drill small holes with a thin drill. I fasten the screws using a screwdriver. Be careful and do not apply to much force.. The perch for the vertical house goes right through the body. I use a small screw on the back to fixate it.. I glue the roof to the body using waterproofed glue. Well that's it almost :). My jigsaw, ok, well I did a poor job with cutting out the round shaped parts. To fix that and to make the house waterproof I add a small amount of silicone to the gap between the wood and the ""house wall"". I'll do that with all front and back panels and the roof.. The birdhouses will hopefully house some birdies over the spring and summer. To clean them in fall, I add a simple hatch to the back. It's just a lid fixated with screws. The lid covers the ring-shaped part.. Congratulations, everything is done and you are hopefully a proud owner of some new birdhouses. Let's take them outside for a foto shooting in the wilderness :D . I use two different methods of mounting the houses. Method one is just a nylon rope within a tree. Method two are pipe clamps mounted to a shed or carport. It's important to face the entrance to the right direction. As far as I know, the birdies like their doors pointed to east/east-south direction (opposing the weather face).. I hope you will enjoy building this. Please let me know your experiences and improvements. Please put photos in the comments. :). Participated in the Trash to Treasure.",0
"We recently moved into a new house which has huge picture windows. One of the side windows looks out onto a narrow side yard. We placed our cat's large tree in front of that window and then hung a couple bird feeders on hooks on the fence outside so he would have some ""cat tv"" for entertainment. This was okay, but the feeders hung too low, the big hooks were expensive, and the seed got wet since we live in the wonderful Pacific Northwest. So we needed a better solution.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. I made a hasty sketch and roughed out my ideas. My priorities for the structure were:. 1) it could hold multiple bird feeders. 2) it would provide a shelter so the seed would not get wet. 3) the structure would be flexible so that feeders can change throughout the seasons. 4) the size would be large enough to ""fill"" the 7ft picture window width. 5) it would be tall enough so the view was maximized for people sitting in the front room looking out that picture window (and for the cat!). 6) it would help obscure the view of the neighbor's house and back yard.. Then I called my dad and talked about what was needed to turn the sketch into a viable design - proper roofing, increase footings, etc. (Thanks Dad!).. Here are the items we used for our build:. (Quantity - Material). 2 - 4x4x10 treated wood posts. 1 - cardboard concrete tube (cut in half), we used an 8"" wide tube. 2 - 80 lb bags of Quikcrete. 7or 8 - treated or untreated 2x4x8 lumber (they are not in contact with the ground, so we used untreated). 1 - treated 2x6x8 lumber. 2 - untreated 1x4x8 lumber (you will have quite a bit left over). 1 - 4x8x3/4 exterior grade plywood (cut in half lengthwise by the DIY store). 1 - 8 ft length of 3/4 metal electrical conduit pipe. 2 - 5 ft lengths of 5"" ducting pipe. 1 - package of 3-tab asphalt shingles (I got a damaged package from Home Depot for $10). 1 - roll of asphalt paper (you will have LOTS left over after this project). 1 box - 3/4 inch roofing nails. 1 box- 2 1/2 inch exterior screws. 1/2 box - 3 inch exterior screws. 1/2 box - 1 1/2 inch exterior screws. 4 - EMT straps (U-shaped ones with a hole at each end). 6 - Slant Nail Joist Hangers. 2 - 1-9/16-in x 3-9/16-in Rafter Ties (this holds a 2x4 on top of the 4x4 post). 2 - L-brackets. staples. These items were a mixture of purchased items and ones we had on hand, so I am sure improvements/changes could be made in the materials list. NOTE: I got most of my metal fittings from Habitat for Humanity's Restore at a great price since they sell them by the pound.. The tools we used: circular saw, hand saw, drill, speed square, staple gun, post-hole digger, hammer, 2-way post level, level, angle grinder.. The window is 7 foot wide, so we positioned the posts to line up with the ends of the window. We dug 2 holes approximately 25 inches deep and about 10 inches wide with a post-hole digger. Then we threw all the stones we hit while digging the holes into the bottom. Next, we cut the cardboard concrete tube in half using a hand saw, and placed one half in each of the holes, on top of the stones.. We placed one 4x4 post in each of the holes, inside the tubes, and braced them using various materials we had on hand. Then we mixed up the two bags of Quickrete and put one in each hole around the posts. We used a stick to tamp down the concrete around the posts, then left them to set (sorry, should have taken a picture at this point).. The next weekend, we removed the bracing and covered over the top of the concrete with the dirt we removed from the holes. The cardboard tubes were a bit proud of the ground, but those can be trimmed later (I intend to pave that side yard eventually, so I just left them proud for now). Finally, we put the 5"" diameter ducting down over the posts. NOTE: trying to set the ducting into a round shape was infuriating until I looked up a video on the easiest way to do it. We had to sand down the corners on the posts in a few places in order to adjust the placement of the ducting on the post. I thought we would need to secure the ducting with a screw or two, but it holds tight with just a friction fit.. Next item was the roof ridge. We placed the metal fittings on top of the 4x4 posts without screws and set the 8 ft long 2x6 on top so that we could check to see if it was level (of course it wasn't). Based on the reading, we trimmed a post and then fixed the fittings and the 2x6 in place with screws.. Looking at the structure, I decided to add another 2x4 immediately underneath the roof ridge to a) add stability and b) provide a wider surface upon which to mount the electrical conduit pipe that would hold the bird feeders. So we used L-brackets to mount the 2x4 with the 4 inch side against the bottom of the 2x6. This meant that we were forcing two metal fittings into a very small space on each end, but we managed to squeeze them in. In hindsight, I am sure there is a much easier and cleaner solution for this. Afterwards, we screwed up from the bottom of the 2x4 into the 2x6 and that provided some much needed rigidity to the structure.. Finally, we trimmed the metal conduit pipe to fit within the posts using an angle grider, then mounted it using the EMT straps. By using large EMT straps and pushing the ends together a bit, the pipe is able to hang down about an inch below the 2x4. We then hung a large sunflower feeder, a hummingbird feeder, and a nyger seed feeder on the pipe using S-hooks. The use of S-hooks on the pipe allow for the greatest flexibility of hanging options. Early customers to the feeders seemed quite comfortable with the structure so far.. Now we could move on to the roof. Reading up on how to do roofing in regular construction books and online, I found shed instructions to be the most helpful (probably because they were working with small, light structures). I couldn't find anything specific on the type of roof I wanted, so I just made it up (apologies to those people who know about roofing!).. Now we already had a fixed measurement on the roof panels: 2ft x 8 ft (the two halves of the original 4x8x3/4 panel). This drove all of our remaining roof measurements. Eyeballing the angle with a 2ft piece of plywood scrap, I determined that I wanted the roof to be between a 5/12 pitch (it would drop 5 inches for every 12 inches of run) and a 6/12 pitch (it would drop 6 inches for every 12 inches of run). That would be sufficient to protect the feeders, but not obscure the view of them. I also decided to use 2 inches of the 24 inch width of the plywood to act as an overhang.. Now using the Pythagorean Theorem - in a right triangle, the square of the hypotenuse equals the sum of the squares of the other two sides - I determined that my existing roof panel (24 inches minus 2 inches of overhang) was essentially the hypotenuse. Based on that calculation, I set the crossbar (the b of the calculation) down approximately 8 inches below the top of the roof ridge. We secured the crossbar on each side with screws, then cut two 2x4s to connect them. This essentially created a ""box"".. The 8ft length of plywood needed to be supported, so we placed three rafters on each side of the roof ridge. The first rafter we cut from 1x4. Based on the earlier calculation, we cut the rafter to approximately 23"", mounted a joist hanger on one end and then held it up in place to determine where the ""birds mouth"" cut would be to have it sit on the ""box"". We also marked where the end of the rafter needed to be trimmed so that it would be in alignment with the plywood top. Once we had this template rafter, we cut the remaining two for the one side of the structure. Everything was then screwed into place. We repeated the same process for the other side (we had to adjust our measurements slightly for the other side).. We placed one plywood piece on top of the rafters and screwed it into place. Then we did the same with the other plywood piece on the other side. There was a slight gap where the boards butted against each other over the roof ridge, but that would later be covered by the roofing materials.. Then we measured out two pieces of roofing paper approximately 9ft in length. We centered one piece over one side of the structure and made sure there was approximately 5 inches of overhang at the bottom and enough at the top to cover over the gap to the other plywood piece. This was stapled in place along the top first to hold it while we shaped the other sides to wrap around the plywood pieces. We tried to make all the corners look as neat as possible, then stapled everything in place. We repeated this process on the other side of the roof.. I went to one of the local DIY stores for my supplies and found the shingles which were close to the color of the shingles on the house. There was a broken package of shingles on the floor and they agreed to sell it to me for $10 (60% off!). . I read up on how to attach shingles, and followed their instructions (mostly). So we started by trimming a starter row of shingles and put that at the bottom of the panel, then laid the first row of shingles on top of that row. We then staggered the next two rows of shingles. The other roof panel was done the exact same way. Finally, we covered the roof ridge. We didn't use specific shingles for the roof ridge. Instead, we just used individual shingles to cover the roof ridge.. Now because we used a broken package of asphalt shingles we were probably one row short on each side of the roof, however I don't think it is detrimental to the structure since the panels are completely covered. The effect is mostly ""cosmetic"". . The shelter has now been in use for several months and it has worked very well. I am able to change out the feeders easily, the food stays dry, and the birds are comfortable with the structure. The only design issue we've had is with water occasionally dripping down the roofing paper in heavy rain, but that is not really going to damage the structure. Beyond that, it can be a bit dark under the structure, so I am going to add a cheap string of solar lights to the inside so that the birds are easier to see.. Did you make this project? Share it with us!. 18,458 Enrolled. 
 
 
 2 years ago
 
 . Have you had any issues with squirrels?. 
 
 Reply
 
 2 years ago
 
 . Yes, I have a healthy squirrel population here. At the moment, they are jumping from the nearby fence to the roof of the feeder stand and then they have access to the end feeders. The pipe on the uprights really limits their access. If I didn't have the fence (or other close launching point), they would not be able to access the stand. . I am stuck with the limitations of the site, so I have a ""sacrifice"" feeder stocked with the cheapest seed mix I can find for the squirrels off to the side which is easier to raid.... © 2020 Autodesk, Inc..",0
"So I saw a bird house made like this so I gave it a shot. I liked the natural look with a little man made ( dare I say Steam Punk? ) look. It wasn’t that hard and I made it with stuff I had sitting around my garage. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. A hunk of tree. I used a piece of wood that was basically unsplit firewood.Chain saw or ban saw.Forstner bitDrillHammerWood chiselsWood screws Tin or aluminum ( or some other roof material option )Pallet wood or some other flat piece of woodDrill bits . Find the right piece of wood. It’s diameter needs to be enough so you can rip it, sawing off the back 1/3. I cut the piece of wood down to a manageable size before ripping the back of it. I used a chain saw to rip the back but depending on the size, a ban saw might work. . Now, you need to start “gutting” a nesting place out of the large piece. You’re cleaning the wood out from the back of the house. Before you clean it out, think about where your entrance will be coming in from the front and the size of the bird your trying to attract. There are plenty of web sites out there that will tell you what size bird house entrance will attract what species of bird. I used a Forstner bit to clean out the house. . I cut most of the house out and then drillled in from the front to make sure the living space was lined up with the entrance. The forstner bit is perfect for that. . So I cleaned it out. I made sure the entrance was not too long. Now, I took a piece of aluminum pipe used for exhaust vents and cut a piece to cover the “roof”. I wanted to give it a little different look but was also hoping it would keep rain off the top of the house. Attach the roofing material ( my roof didn’t look spectacular but again, it was the first one I made).Now, how are you going to close up the back of the house? You can use the original piece you cut earlier. I used a piece of pallet wood and attached it with the wood screws. You may want to drill some starter holes to prevent splitting. . I forgot to take picture of a couple of the final steps. Sorry about that. But here’s the final product. I used the pallet wood on the back for a different look and so it would be easier to hang the bird house on my fence. I’ll make a few more birdhouses soon and try to perfect the process. I may try cleaning out the birds living quarters with my chain saw instead of the forstner bit to see if it speeds up the build. But in the meantime, happy building! .",0
"Materials needed:. 2-liter plastic bottle- empty, washed out, & air-dried . 6 1/2-7 ft. of household twine. round plastic deli dish, 1/2 lb size. 2 large rubber bands. 3-4 large plastic-coated paper clips. 2-3 twist-ties. medium-sized funnel. high-quality bird seed (without cracked corn). Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Wrap an end of the twine around the mouth of the pop bottle & twist it.. Twist twine upward to the other end of the bottle, then back down to mouth again.. Twist the twine around the mouth again, then back to the other end again.. Slide a twist-tie under the twine at the wide end, gathering all sections & twist together tightly to hold the twine in place. . There should be extra twine to form a loop & a twist-tie wrapped tightly around it will keep it in place. If there is no extra twine, a twist-tie can be made into a loop or a piece of wire can be slid under the twine to hand the finished product from a tree branch.. Slide a large rubber band over the end of the bottle with the mouth so it is tight.. Slide the other large rubber band over the deli dish, keeping it snug, up to the rim of the open end.. Open 3-4 large plastic-coated paper clips so they each have hooks on both ends.. Hook each paper clip to the rubber band on the deli dish.. Hook 3-4 paper clips to the deli dish on the rubber band, evenly spacing them apart from each other.. Hook the other ends of the paper clips to the rubber band that is around the 2-liter bottle, again, evenly spacing them apart.. This is what your bird feeder should look like when done, before adding bird seed.. Unhook 2 or more of the paper clips so that the deli dish hangs to the side.. Add birdseed using a funnel.. Re-hook the deli dish & carefully flip the feeder over, so the seed falls into the deli dish.. This is what your birdfeeder should look like when done filling it. . Hang it in a tree above your head or on a tall shepherd's hook to keep out of cats' & other animals' reach.. It may take a week or more for birds to find the feeder.. Check weekly that the seed is not molding & clean out if it is found to be.. *It may be necessary to poke small holes in the bottom of the deli dish with a pointed screw, to let out any rainwater.. Mel the creator is not responsible for any injuries or death that may result from this video or instructions while making this product (plastic bird feeder)..",0
"I saw this funnel and I was inspired to make an awesome bird feeder out of it. I wanted it to look like something my grandparents would have bought at the feed store in the 1930's. With a little searching, I was able to find the rest of what I needed to complete it with the look I envisioned. This is an easy to build project from ready-made parts that can be sourced at most home or hardware stores. It can be completed in an hour or two with simple tools. I like the farm store/industrial/grain silo look and I know that it will look good for lot longer than most feeders you can buy.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. The Tools you will need are as follows.. Drill. step drill bit or a set of drill bits 1/16"" to 3/16"". rivet gun. carpenters square. flexible measuring tape. center punch. T-reamer (optional). dull side cutting pliers. sharpie. grinder with cut off blade (not sawzall as pictured, more on this later) . tubing cutter (optional). Here are the materials you will need.. big metal funnel (tractor supply has these). 8x6 duct reducer (any home store should have these). pie plate from the thrift store (it should be of smaller diameter than the funnel so water won't drip in). 1 3/8"" fence cap (you might have to get this at a fencing store, the home stores don't carry it) . 1/4"" copper tubing 6""-8"" long . 1/16"" cable (old bicycle brake cable will work). 1/16"" ferrules. small fender washers. 3/16"" x 1/8"" rivets (aluminum). metal plumbing tape (pre-punched holes means no drilling or measuring). First we need to cut the end of the funnel off so that the cap will fit. It also makes the opening bigger so that it is easier to fill the feeder with birdseed.. An easy way to transfer the diameter of the cap to the funnel is to make a template out of card stock. After you have traced the circle make sure to draw the actual cut line about 1/4"" to 3/8"" higher so there will be something sitting inside the cap. . Cutting with a sawzall was not the best way to do this. It jumped around and shook and made a pretty uneven cut. I have used a grinder with a cutoff wheel on something like this before and would recommend it as a much better method. A hacksaw might work if that's what you have.. Using the center punch, mark two points where you want to drill holes for the cables that will suspend your feeder. Look inside before doing this to avoid drilling through the thick part of the funnel neck. Now drill with a bit slightly bigger than the cable.. This is the part that keeps the cables separated so they don't hit the top of the feeder. Cut the tubing long enough so that when it is bent to the desired width, the ends will point straight down. Six to eight inches is about right. I used a tubing cutter and a reamer but a hacksaw would work. Next bend it around a round object that is the size you need. I used the front of my drill.. Pass the cable through the cable separator. Push the cable end into the funnel. Put a washer and a ferrule on it. Crimp the ferrule with a pair of cutters, the duller the better, you don't want to cut, you want to smash. Do this on both sides. . Unfortunately, there will be math on this project. Measure around the duct, divide by three. Whew, I'm glad that's over. I used the metric side of the tape to make it easier. Mark the three points with a sharpie. Use the square to mark 3/4"" down from the top to keep things even. Now use a square to transfer the measurement to the bottom of the duct so you don't have to do math again!. Plumbers tape breaks with a little back and forth bending. Bend a piece that has three small holes. Break it off and repeat. You'll need six pieces the same size. If the rivets are a little bit too big for the holes, ream them so they fit.. Center punch the three marks at the top of the duct. Using the step bit, drill to 3/16"". It's pretty easy to drill too far in sheet metal and make a hole bigger than you wanted, so when it starts to go through the metal, stop pushing. For some reason the 3/16"" rivets didn't fit in the 3/16"" hole I drilled so a half twist with the reamer made it work. Now pop those straps on.. For this step it's helpful to put the funnel in a can, bucket or flower pot to hold it while you work. Use a square to center the duct on the funnel. The trick is to keep adjusting until it's the same measurement all the way around. When it looks like it's centered, make some marks so it will be easy to put it back. Make a dot with the sharpie in the center of each end hole in the strap. When you're satisfied with the marks, punch and drill just like before. . Put the top and bottom together and push a rivet through the holes. You can put one hand inside and hold them together while you squeeze the rivet tool with the other hand. Make sure the strap is pushed all the way down on the rivet before you squeeze the handle.. The duct should hang a little below the rim of the pie pan so it will stay full of seed but not spill out. To do this, we will first bend the straps in the solid part just above the small hole on the end. Pliers make this easier. Now hold one of them against the bottom of the duct with the distance of the desired gap sticking out. Mine was about an inch, yours will depend on the depth of the pie plate you found. Make a dot on the duct in the small hole at the top of the strap. Use the square to transfer this measurement to the other marks. Punch and drill just like before. . To center the duct on the pie plate, use the same trick with the square from step ten. Transfer the three marks from the duct onto the plate. Now measure in a about 1/2"" from where you marked the duct. (I used the holes in the plumbers tape as a tape measure.) This is where you will drill. . Center punch and drill three holes. Test to see if the rivets fit, ream if necessary.. Rivet the straps to the inside of the duct with the bent part facing down.. For the last step, put the funnel in the can like in step ten. Lining up the holes can be tricky because you can't put your hand inside at this point. It will help if you put a rivet in the holes one at a time. It takes two squeezes to pop a rivet. I did one squeeze on each rivet and went back around a second time and finished it. For a finishing touch, clean off the sharpie with a Q-tip and alcohol.. There you have it, a bird feeder that looks cool and will last forever. The best way to fill it is with a funnel. If you worry about moisture getting in you could put a tiny blob of silicone on the holes where the cables go through, then pull them tight while it dries. I didn't feel the need to do this as the steep roof will shed water quickly. I remember in the past 3/16"" rivets fitting into the holes in plumbers tape, maybe things have changed or my memory is wrong, but it's not too hard to make them fit. . Participated in the Homemade Gifts Contest 2017. Participated in the First Time Author Contest 2018.",0
Want to attract more birds to your garden with something homemade and simple. The Pine Cone Bird Feeder is the thing for you. All you need is . 1. Peanut Butter. 2. 1 Pine Cone . 3. Bowl. 4. Bird Seed. 5. Spoon. 6.String. 7. Spreading Knife. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Cut a piece of string and tie 2 knots in it.. DO NOT TIGHTEN YET!!!. Wrap the string around top of the pine cone and tighten the knots.. Put peanut butter and birdseed in a bowl and mix it with a spoon.. Then use the knife to spread the bird seed and peanut butter mixture all over pine cone in the . Make sure to fill in the gaps!. Tie the end of the string with pine cone attached to it to any tree branch..,0
"How to make a simple water feeder for birds (using materials you already have at home)!. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. . Materials: . - an old small plastic container, strings, a bigger rock, a smaller stick from a branch.. How I made it: . I've used an old plastic container and drilled two holes on opposite sides. I put a small stick from a branch through the holes and tied it up using a thick string. I've also added more of the string around the upper corners, to provide birds extra landing space and stability. I've also added a bigger rock inside, so it keeps the feeder in place and also provides a landing space for the birds - as well as the stick which is placed in the middle. . This is a really simple water feeder that you can make using materials you can find at home. Help birds find clean and fresh water during winter by making and placing a water feeder in your backyard, in the park, etc.. For a detailed, step-by-step procedure, watch the video.. For birds and other wildlife, water is just as important in the cold months as it is during summer. Even in places with abundant snow and ice, it costs birds precious calories and body heat to melt frozen water. Backyards that provide fresh, clean, liquid water during winter tend to host more avian visitors than do frozen yards. . Here are some tips for providing water for wildlife during the cold months: . - Place baths in a sunny area to make them more visible to birds and to help keep the water from freezing. . - Help birds stay dry and drink more easily by adding several stones to the bath or placing a few sticks on top that the animals can use as perches..",0
"A very quick and simple way to make your own birdseed silo. Without any special materials you can make a perfect functioning birdfeeder from waste material.. One empty milk carton. a pair of scissors. two staples and a stapler. Piece of wire or string. Birdseed.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Find an empty 1 litre pack of milk, yoghurt or something like that. Cut of the bottom with a 2 cm rim. Rinse the inside of the box .. Push a section of the front side inward by making a diagonal fold on each side. . Place the box inside the bottom. Secure with a staple on each side.. Attach a piece of wire or string to hang the box. Fill it with birdseed, and select a place in the garden.. Wait till the birds discover their new fastfood restaurant.. Participated in the Design For Kids Challenge.",0
"The idea to build this log cabin bird house came after storm Ophelia passed over Ireland on the 16th October 2017 causing a lot of damage to property and also uprooting and knocking trees. During a brief let up in the winds I ventured outside for a look around only to hear and see a hedge nearby alive with birds taking shelter from the storm. I don't know if they were frightened or if it was the sheer number of them but the noise they were making was deafening. I would never cut down a tree to make a bird house so I spent some time the following day collecting small branches and sticks that had been broken or had fallen during the storm. This project was made using only hand tools.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Have a look at the video above to see how I built the log cabin from start to finish.. The only hand tools needed for this build are:. A hammer. Hand saw. Tenon saw. Hatchet. Utility knife and blades. Materials:. Sticks . Some pieces of pallet wood (Roof). Panel pins. Polythene. Grass sod. Chicken wire. Staples. Glue. I started off by cutting a piece of the pallet wood to 8 inches (200 mm) x 6 inches (150 mm). This piece will eventually become the floor of the bird house but to start I will use it to set the size of the cabin. Using my tenon saw for a finer cut, I cut a number of pieces of sticks for the front, back and sides.. Next using a utility knife I striped all the bark from the sticks. The sticks I used were from a mix of 3 trees. Ash, hazelnut but I don't know what the third type was. The bark came away easily as the wood was still very fresh.. I set the sticks around the pallet wood base and marked the intersections where they cross over with a pencil.. I then marked a curve to half the width of the sticks and set about carefully cutting out the curve with a sharp utility knife. This process does take a bit of time. I test fitted the joints as I went and did adjustments where required.. When I was happy with the joints I applied a little exterior wood glue before nailing it with a panel pin in each joint.. Once the first set of logs (sticks) were pinned it was just a matter of fitting each log in the same way as before until I reached the height I was happy with. For the entrance I fitted a log as normal and then cut the ope before pinning it. For the last two logs on each side I left then about a half inch longer, this was to create an overhang for the roof.. The roof pitch is somewhere around 25-30 degrees. I cut a few rafters and pinned them together before attaching them to cabin. I was going to add more rafters but felt it did not need them as these rafters were going to be attached to the gables and this would be good enough to hold the roof. For the gable logs I marked them off the rafters to get the correct angle to cut them. I then pinned them in the same way as before.. I needed something to support the grass roof so i used some pallet wood I had. Using a hatchet I cut off the edge to form a miter along the ridge where the two pieces of the wood would meet. You don't really have to do this as it will all eventually be covered but I did. When I was happy with the fit I attached all the pieces of wood for the roof using panel pins.. I added some trim/fascia also make from sticks all around the edge of the roof . This was to hide the edges of the grass when it was fitted and also to hide the edges of the pallet wood i used for the roof.. At this stage I attached the base that I had cut earlier. I just used longer panel pins to do this. I may need to remove the base again some time to clean the inside and it should be easy enough to it by removing the pins I put in.. To help protect the wood and waterproof the cabin I stapled on some polythene and then some chicken wire. This was to hopefully prevent the grass sod from slipping on the polythene. I trimmed off some of the extra polythene at this stage.. I went to a corner of my garden, far away from view and using a knife I cut up some grass sod. Take your time doing this and peel a little at a time until it is removed. Place the sod onto the roof and gently pack it into place and cut off any excess. I am not entirely sure how well the grass roof will hold up over time. It should be fine for autumn, winter & spring in Ireland anyway but I fear in the summer months it will dry out if not watered. Time will tell.. And this is it! The finished log cabin bird house. I hope you like it and maybe have a go making one. It is an easy project to make using only a few hand tools but it will require a little patience when doing the joints. This will probably be the biggest log cabin I will ever get to make so I think that's why I spent the time doing all the joints where I could have came up with something a lot quicker and easier to make. I am glad I spent the time making it and am very happy with the result and I think it was a good way to use some of the fallen wood from the storm. The rest will probably end up in my stove!. If you would like to see more projects from me you can subscribe to my YouTube channel here:Eamon Walsh DIYThank you.. First Prize in the Hand Tools Only Contest 2017. Participated in the Reclaimed Contest 2017.",0
"Birds don’t like soggy sunflower seeds! . I live on Vancouver Island on the west coast of Canada where the winters are mild but can be quite wet. In the past I have had to dispose of a lot of wet, moldy birdseed and clean out the feeders. In this Instructable I am upcycling an old satellite dish and using it as a rain shelter for my birdfeeder.. The feeder originally hung from a tree on a wire and even though the feeder did have a bit of a roof on it the fill hatch at the top didn’t seal very well. In order to employ the satellite dish effectively I decided to mount both the dish and feeder on a fence post; this involved constructing a bracket to support the feeder from the bottom.. This is a fairly easy project and can be accomplished by anyone with even very basic maker skills. The project can be completed in 1 day although if paint is involved allow 2 days.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. 1 Orphaned satellite dish. 1 Bird feeder with 3/4” post mount hole in the bottom. 2 step washers (3/4” shoulder with 1/2” step and ¼” through hole). 1 ½” EMT conduit pipe x 1” long. 1 2-1/2” x ¼” bolt. 1 ¼” nut. 3 ¼” flat washers. 1 ¼” fender washer. 1 ¼” lock washer. 1 1” x ¼” x 14 ¼” piece flat iron. 1 1” x ¼” x 6 ¾” piece flat iron. 1 3/8” x 3 ½” piece of rebar, cut on 45 degree at each end. 4 #14 x 2” pan head wood screws. With exception to the welding (optional) most of the project is doable with very common shop tools:. . Start out by modifying the satellite dish arm to allow it to mount closer to the post. To accomplish this simply cut the curved part of the pipe off (you can use a hacksaw or, as I did, a zip disc on a handheld grinder). Being as the dish will be mounted with the back skyward it is a good idea to drill a small hole in the bottom lip so collected rain water can drain away.. Next cut away the two tails that extend from the back of the dish beyond the lip. Cut them flush with lip on dish. This ensures the dish will fit close to fence post.. I used 1” x ¼” flat iron to form the bracket but there are plenty of options here including a purchased bracket from the hardware.. Cut two pieces of iron; The horizontal piece 14 ¼” and then drill a ¼” hole at one end (1” from end) for attaching the peg to support the feeder, the vertical piece of iron is cut to 6 ¾” and drill two ¼” holes in one end (one at 1” and the other at 3 ½”). The two pieces were welded together at a 90 degree angle (weld the ends without the holes). I also welded a short piece of 3/8” rebar as a corner brace but wouldn’t have been necessary.. Assemble the peg; insert 1 step washer on the ¼” bolt followed by the 1” piece of ½” EMT, then the other step washer, then the 3 flat washers and finally the fender washer. This assembly is then inserted into the ¼” hole in the horizontal leg of the bracket, pointing upward. Slip the ¼” lock washer over the end of the bolt and attach the assembly with the ¼” nut. Tighten.. This is a good time to spray paint the bracket (I used a grey color somewhat close to the feeder and satellite dish).. While the bracket is drying install the satellite dish. Locate it fairly high on the post, the feeder has to nestle up under it. I used large #14 x 2” screws so predrilled with a 1/8” drill bit. Tilt the front of the dish upward slightly so collected water runs back toward the drain hole drilled earlier. Leave the adjustment screws on the dish bracket snug but not too tight, this allows you to tilt the dish up easily to fill the feeder.. Once the bracket is dry you might need to wrap a couple layers of electrical tape on the peg to provide a snug fit with the hole in the bottom of the birdfeeder. With the feeder sitting on the bracket, hold the bracket up on the fence post below the dish, mark the location of the mounting holes and predrill with 1/8” bit. Next install the bracket with two #14 x 2” screws and set the birdfeeder in place on the peg. To fill the feeder you simply push the dish upward on its bracket, remove the fill cap on the feeder and pour in the seed.. Was this a perfect solution? Not quite, the rain is sometimes accompanied by wind; a little wind is no problem but gusts still tend to blow rain into the feeder although a lot less than before.. I hope you found this Instructable helpful and even if didn’t have a satellite dish to upcycle you at least found inspiration for creating your own birdfeeder shelter solution (perhaps from other upcycled material like hub caps, garbage can lids or cooking wok).. Thanks for taking the time to read my Instructable, it is my first and as such may qualify for a win in the ‘First Time Author’ contest. I look forward to your support, thanks in advance for your vote.. Kent at the FrontierShed. Participated in the First Time Author Contest. Participated in the Outside Contest 2017.",0
"Why my interest in a new nest box design?. I inherited an interest in birds from my father, whose family grew up next door to a bird expert. Ruth Thomas studied and banded birds and wrote, “Crip, Come Home” as well as, “Brush Goat, Milk Goat” and a weekly column on birds in the 1940s in the Arkansas Democrat Newspaper. Many of my relatives have fed birds (including hummingbirds) and land-lorded Purple Martins and Bluebirds. I finally upgraded to property that lent itself to land-lording in 1998. My plastic Purple Martin gourds last forever, while my Bluebird houses have been replaced many times over the years. In researching PVC as an option, I ran into the Gilbertson design but thought it was overly complex and had some risk for dropping the nest-box onto the ground, so I designed my own nest-boxes and put them into use in 2016. With only 1.5 acres for 5 nest-boxes, 2017 saw 13 Bluebirds and 20 House Wrens fledged from the new boxes.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Advantages:. PVC post – Entire assembly can be moved inside for winter if desired (may extend product life). PVC vs Wood Nest Box – Cheaper, fewer parts, easier to make and assemble, longer life. Moose vs Gilbertson – Cheaper, fewer parts, easier to make and assemble, heavier and better insulated. Supported from bottom, so no risk of nest-box falling from a top-suspension design. Slit vs Round opening – No sparrows, easier feeding of older nestlings. Mobile, vented floor – No moisture, fly larvae may fall through, easy to expel spent nest. Removable Roof – Easy viewing and photography of nestlings. Removable Nest Box – Easy viewing and cleaning. Bucket Guard – Cheaper than metal and no seams with exposed screws for climbing snakes. 3.5”x36” Steel U-Post. 2”x5’ PVC pipe Post. 4” to 2” PVC adapter. 4”x6” PVC pipe Nest Box. 4” Qwik Cap. 3.75x3.75” hardware “cloth” floor. 6” carriage bolt floor anchor. .67”x11.25”x12” roof. 5-gallon bucket predator guard. Table saw and/or Sabre Saw. Xacto Knife. Trauma Sheers or Tin Snips. 2.25"" hole saw. Hand Drill and Screwdriver. Post Driver or Sledge Hammer. Pre-assembly instructions (see pictures):. 1) Cut 11-12” Square Roof and glue it to rubber Quick Cap . (gorilla glue is good but expands when curing; use knife when done to cut away excess glue). 2) Cut two pieces of hardware cloth and assemble with 6-8” centered bolt. Bolt works as center-weight to keep floor from tilting and as plunger to expel spent nests . 3) Cut 4” PVC to 6” length; cut 2.5x1.25” entrance slot into Quick Cap with Xacto Knife. 4) Put Quick Cap onto Nest-Box and trace opening to cut matching entrance to Nest-Box . 5) Cut two 1.75”, vertical, ventilation slits opposite the entrance slot from upper edge of Nest-Box. (slits will extend ~1/2” below Quick Cap when roof is in place). 5) Cut 2” PVC post to ~5’ length . 6) If planning to add predator guard inverted bucket . a. Use hole saw to cut 2.25” hole in bottom of bucket . b. Measure ~11” down from top of post and wrap masking tape around post; make it level . c. Drill 1st hole along upper edge of tape . d. Measure 2.5” to left and right of hole to mark 2nd and 3rd holes for screws . e. Screw in the three short screw so screw-heads project a few mm. 1) Choose a location. 2) Place a post smaller than 2”; U-posts and retired chain-link posts work well. 3) Cover with 2” PVC post ~5’ tall. 4) Slide optional inverted bucket guard until suspended by 3 screws in post. 5) Add 2” to 4” PVC converter. 6) Add 4” PVC Nest Box. 7) Add hardware cloth base to Nest Box and cover with pine-needles. 8) Add 4” Qwik Cap to top of Nest Box with entry slit matching Nest Box slit . (11-12” roof glued to top of Qwik Cap in pre-assembly). 10) Gelstain post & nest if wanting to blend better with landscape. (Stain inside of nestbox during pre-assembly if wanting darker interior). With just one nest box, I usually get 2-3 broods of bluebirds each year with an average of 5 eggs per brood. With several boxes, I often have two active nests at a time despite the territorial nature of bluebirds in a 1.5 acre space. I can have 10-20 babies fledging per year, so over the past 20 years here, we have had more than 300 bluebirds fledge. The chickadees and house-wrens also like the boxes.. This year with the new box design, we fledged six chickadees (only one brood per year), 20 house-wrens, and 13 bluebirds. The wrens and bluebirds are quite welcome, since anything that eats insects on my property is an asset.. There were no snake attacks. I have had three over the years, so decided to add the buckets during my upgrade this year. We have black rat snakes that are quite talented in getting to nests, and we also have raccoons and squirrels. The slot near the roof has kept out the starlings, but in the wooden boxes, we still got sparrows at times. This year, the new design didn't seem to interest the sparrows at all.. . This file is a Word document with all of the info from this instructable, so it would be easy to download for reference offline while building your own nest box..",0
"My wife wanted a bird bath on our balcony. Unlike a traditional pedestal bird bath, we don't have a garden hose nearby to clean it; so it needs to be easily and quickly removable for taking inside to clean. We also live in a condo, so we can't permanently affix it to certain parts of the building. This is my solution. PVC stand affixed to the balcony railings, with a removable bath.. Parts. Tools . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. The basin is going to need to be screwed in and out of place for cleaning, so you want it high enough that it clears the deck railings. . Measure the height in the railings and add an inch or two as desired (the top connector is going to a little height as well).. Mark a cut line on the PVC to the height you determined in the previous step. Using a hacksaw, chop saw, or radial arm saw cut the PVC pipe to length along the cut line. Just make sure it's a straight 90 degree cut, otherwise the connectors may not fit properly.. Before cementing the connectors in place, you should clean the PVC pipe so they will adhere correctly. Goo Gone and a paper towel worked well enough.. Check the fittings of the cap and threaded plug to ensure they fit correctly. What I didn't do, but should have, take some painters tape and cover the threads inside of the threaded plug. This will prevent the possibility of the glue/cement getting into the threads.. Following the directions on the primer/glue, and only install once connector at a time. Wearing protective gloves, apply a thin coating of the primer inside the connector and outside the pipe. Apply an additional thin coating of the glue over the primer, and push the connector onto the pipe (without twisting it). Wipe off an excess glue.. Repeat with the other connector on the other side of the pipe.. The Gorilla PrimaGlue worked for me in this step, but depending on the material of the basin you chose you may need to opt for a different glue. Apply a thin coat of primer to both surfaces. Then apply a thin coating of glue/cement to both surfaces and attach them (push, don't twist). Depending on the glue you may need to apply pressure for the bond to adhere.. Scrape off any sticker/labels and remove the adhesive residue with the Goo Gone. . Use the painters tape to tape off the opening of the threaded plug, so you don't get paint or primer on the threads. Apply spray primer to the PVC pipe. Apply additional coats as needed. Apply a spray paint as desired.. I temporarily used packing tape to adhere mine in place. My 8"" zip ties were insufficient. 14"" fit well once I bought them. You can measure the diameter for your installation to find what will work best. Two or 3 points of attachment should work well. Once it is firmly in place (and not rotating), you can screw the basin into the top. Fill with water. Now wait for birds to actually find it.. Maybe birds don't like translucent baths two stories up? I took the bath down, masked off the screw threads, and painted the outside. . Maybe too late in the season, I've only managed to get one photo (of poor quality) of birds checking the bath out so far.. Participated in the Outside Contest 2017. Participated in the Outdoor Structures.",0
"When your friends or family have an empty wine box like this one and they don't know what to do with it, you can turn it into a great bird house! All you need is a small wine box and a wooden dowel to get started.Other materials you will need are:- a pencil- a ruler- a small saw- a drill- drill bits- scissors- a thin but strong rope to hang it by- a backyard for the bird house*the dowel should be about 1/2 an inch in diameter and be at least 4 inches long. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. A) Slide the lid off the box and pull out the handle.B) Flip the box upside down.C) Saw your wooden dowel so that it is 4 inches long.D) Mark where 2 inches below the existing hole in the box is.E) Start drilling by making a small hole with a small drill bit, and then change your drill bit so that you are using one which has a slightly smaller diameter than your dowel.F) See if the dowel fits through the the new hole you drilled, and if it almost fits then take a hammer and hit it into the hole far enough that the wooden dowel doesn't move.. A) Put the lid back on the box and drill two holes in the lid centered about 3 inches apart. You should make the holes wide enough for your rope to fit through.C) Maneuver the lid half open with both holes still on the inside of the box, then thread the rope through the holes.D) Cut and tie the rope at whatever length you think will fit your trees or bushes best.. You can put twigs or leaves inside your birdhouse if you want, but the birds will change their nest to how they want it to be. And if birds aren't attracted to it, consider building a bird feeder nearby.Enjoy watching birds make their home!. Participated in the MacGyver Challenge. Participated in the Box Contest 2017. Participated in the Outdoor Structures.",0
"In India, birds like sparrows have notable decrease in number. In summer the temperature exceeds over 48 degree Celsius at midday. We can't see any birds at that time. So I decided to make a birdhouse for birds. The Birdhouse is recycled and harmless to Birds. Small Birds like Sparrow can play on it and eat their food beating the heat. It is made up of Small Coke can.. NOTE: 1. The Birdhouse should not be kept in direct sunlight . Can will heat and it will be unsuitable for Birds.. 2. Big Birds like pigeon can cause imbalance and can pour all your loaded food.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. 1. Can of any size . 2. 2 Zip Ties. 3. Rope. 4. Cutter which can cut the can. 5. Small piece of wood. You can get it from a carpenter.. 6. Dish wash liquid. Cut the mouth of can with the help of cutter. . The cut portion may harm Birds. So please make it safe by polishing its endpoints.. Now, wash the inner side of can with dish wash bar as the sugar remained inside the can can also attract insects.. Now, with two zip ties make the T-shape as shown in Image 1. Then attach with can with piece of wood as shown in Image 2.. Insert the rope in Zip tie so that we can hang it.. Hang it at place where it will be protected from sunlight and add bird food.. Now your Birdhouse is ready. . Thanks for stopping By...... Happy Making!!!!!. Participated in the Beat the Heat Challenge 2017. Participated in the MacGyver Challenge. Participated in the Outside Contest 2017.",0
". I have 33 trees on my property and tons of wild birds. Most of them live in the very tops of the trees where I can't see them come and go very well. I like to keep birdhouses in the trees closest to the house so I can watch and enjoy the birds.. If you have the tools already living in your workshop/garage one birdhouse will cost a little under $7.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. If you are new to working with PVC and want more in-depth information I highly recommend enrolling in the PVC Class taught by audreyobscura!. You will need the following tools and materials to make a PVC birdhouse. (If you have access to a CNC machine this would be SO much easier. You could cut precise wooden circles with cutouts for the front and back of the birdhouse. A different saw would also make this much faster, however, I am a gal with limited access to tools!!). . Tools & Materials. 1. Measure and mark an 8 inch long section of PVC. Mine came in two foot lengths so I ended up making three birdhouses (they make great gifts!). Draw a diagonal line at an angle of your choice starting at the 8 inch mark. Mine was approximately 60 degrees.. . 2. Clamp the PVC to a work table and using a handsaw cut along the angle. As always, tools can be dangerous. Please use caution.. . . . 3. Using a metal file, smooth down the cut edge removing any bits.. . 4. Sand the entire surface with the 100 grit sandpaper. This will remove the words/lettering on the PVC and prepare it for painting. Be sure to rough up the entire surface including the inside of the cut angle.. . Each of the wooden rounds will need holes drilled. The front piece will need the main hole for the bird to fit through and the back piece will need a few vent holes.. I purchased these wooden rounds at Michael's for $.99 each. They are beveled and about 3/4 inch thick. I wish they weren't that thick but they worked for this application. If you can find thinner ones use those! This was overkill.. 1. Using an electric drill fitted with a 1 1/4 inch drill bit, drill a hole in one of the rounds positioning it toward one side (not in the middle).. . 2. Change the drill bit to 1/4 inch and drill a hole half way through the wood. Position it right under the larger hole This will be for the perch later. (You can see in the image that I failed to drill this before painting...big mistake! don't forget this step before painting! The paint just chips off around the hole and will have to be repainted.). . 3. On the other wooden round, mark where three vent holes should go, I lined them up along the top edge in a row. Change the drill bit to 1/8 inch and drill the holes.. . . ***To avoid chipping the wood you can place a piece of tape on the wood before drilling and drill through the tape. The wood I used was really soft, but if you used something harder it probably wouldn't require taping and wouldn't chip so bad. I did one each way and the one I didn't tape chipped really bad (I had to fill it with wood putty). Boo.. . . Choose two paint colors that you like. One for the PVC and one for the front and back pieces. . 1. In a well ventilated area on a covered work surface, or spray booth, spray paint the PVC. Don't forget the back edge! Let dry according to paint can directions.. . . 2. Spray the wooden rounds. Let dry thoroughly.. . . 3. Cut a 2 1/2 inch piece of dowel and paint desired color(s).. . If you have a CNC machine the sanding part of this step won't be necessary. The wooden rounds I purchased weren't actually 4 inches so they had to be sanded to fit inside the PVC.. 1. Using 220 grit sandpaper sand down the edges until the rounds fit in either side of the body of the birdhouse. Dry fit them to assure a good fit.. . . 2. Run a bead of glue (I used Weldbond) around the flat edge of the birdhouse.. . . 3. Inset the back side piece of wood to secure in place.. . 4. Using a quick square measure to find where the front of the wooden round will sit and mark with a pencil. This will tell you where to run the bead of glue.. . . 5. Run a bead of glue. My pieces fit really tight so I used a mallet to gently pound the wooden face into place.. . . 6. Squeeze a dab of glue into the hole on the face and secure the dowel for the perch.. . More drilling coming up!. 1. Fit your drill with a 5/64 inch drill bit (or what matches your eye screws) and drill two holes on the top of the birdhouse. One toward the front and one toward the back. It might be tempting to just put one hole in the center, however, the birdhouse won't hang evenly once a bird decided to nest in it.. . 2. Twist in the eye screws until they are secure. I matched up the front eye screw with the wood to secure it further.. . 3. If your paracord isn't already cut, cut a 24 inch piece and burn the edge with a lighter to prevent fraying.. . 4. Thread it through the eye screws and tie a knot to join the ends.. . 5. Hang in a tree and enjoy!. . Participated in the Box Contest 2017. Participated in the Outside Contest 2017.",0
"Years ago, my son bought me this birdhouse for Christmas. He found it at his school Bazaar, paid 50 cents, and gave it to me knowing I love ""make it pretty"" projects. At the time however, I had a cat who was a very proficient hunter, and felt bad louring birds to their death. He has since passed away, and I just remembered about the birdhouse that has been waiting patiently to get beautified. . I have some fake dollar store flowers, scrap booking paper and mountains of glitter, so I decided today is the day I get this project finished!. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. First you need a birdhouse. This one seemed to be a first attempt, maybe from a kid? It's heavy and well assembled, just not aligned completely. Also, my dog chewed on the perch, so I'll have to fix that.. You will need white multi-purpose glue, a paintbrush, scrapbooking paper, a knife,a cup to mix with, scissors, large Popsicle sticks, Guesso, glue (I used gorilla, you can use Krazy glue or anything sturdy), a hard plastic straw, fake flowers, glitter, glitter paint, sticky gems, sparkle tape.. Mix the multipurpose white glue with water at a 50:50 ratio. . Paint this mixture over the side of the birdhouse. . Place a piece of scrapbooking paper flush against the top edge and smooth down.. Using scissors or a knife, cut the excess paper and press down the edges.. Repeat on other side.. I needed to replace the perch anyway, so I cut it off with the knife before I applied the paper.. Paint on the glue/water mixture.. Place the paper firmly against the wood and trim the excess.. I ripped the top of my paper and needed to patch it up. I used a corner of the same design paper and cut along the edges of one of the flowers, then pressed it into place and smoothed it down with more glue/water.. The get the entrance hole, I poked my fingers through and painted the edges down with more glue/water.. Using the same technique as the sides and front, glue the paper onto the roof.. I used a different pattern on each side.. The side with flowers had leaves that extended past the center so I cut them out and using some of the glue/water mixture, smoothed them down over the plain side.. I tried gluing a different pattern of paper on the wood edges, but it was too rough and textured for anything to stick. I therefor applied a heavy coating of Guesso, and will use glitter paint on it after the Guesso dries. Birds like glitter right?. For the new perch, I was looking for a chopstick, but instead found an old (but very solid) wiggly straw.. Cut the straight part off the straw and glue it beneath the entrance. Hold it tight until the glue is dry enough that you can leave it without it tipping over.. When the glue is completely dry, cut off a single flower from the bouquet of plastic dollar store flowers. Place the stem into the hole in the straw.. Take 5 very large Popsicle sticks (you can get them in almost any craft section), and lay them lined up on a flat surface. . Cover the bottom of the birdhouse in glue and place it gently on top of the sticks. . Add more glue to the front of the Popsicle sticks (to help hold them together).. When the glue is still wet, place assorted flowers against the front of the house.. Wrap glitter tape around the perch if you don't like the color of the straw.. Paint the edges of the roof with glitter paint.. Paint the Popsicle sticks with glitter paint.. Sprinkle glitter over the ""garden"".. Press sticky back gems around the entrance.. Paint over the entire birdhouse with a layer of the glue/water mixture.. Let dry.. Participated in the Before and After Contest 2017.",0
"One of the problems I always had with bird feeders is they get all nasty when it rains. The seed gets wet and clumps and you have to take the feeder down, clean it out and let it dry before putting it back up.. This is my solution. Easy to make with almost no tools, very inexpensive, and the birds love it.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Start by getting a bowl or dish shaped bottom to hold the birdseed. It can be most anything you want. The one in my example appears to be a small jell-o mold. I picked it up at the Goodwill store for 99 cents. The top is a larger and shallower shape. It will be upside-down on the feeder, so make sure it will not hold rainwater. Other things you might try would be metal pot and pan lids or Frisbees – use your imagination and your feeder will be unique.. Cut a support piece from a dowel or broomstick. It might be fun to use a straight section of tree branch for a rustic look. Eyeball the length of this support piece (no measuring required). It should be long enough for birds to get to the food tray, but short enough so that windblown rain won’t wet the seed.. The hard part is putting holes in the top and bottom pieces. In my example, the bottom green dish is soft plastic and I could easily drill a hole. I could also have just poked a hole with a hammer and nail, but I wanted to show off. Don’t make your hole too big – just large enough for your screw to go through.. My top piece was hard plastic. Drilling it would crack the plastic, so I just heated a nail with a propane torch and melted a hole. If you don't have a torch, a lighter will work. Just don’t burn yourself.. I used an ice pick to put starter holes in the top and bottom of the dowel. A small nail would also work to get the screw started. Like the nail I used to melt the hole in the top. Be careful not to stab yourself. You don't need to make a deep hole, just enough to get the screw started.. You will need a hanger for your bird feeder. If you have a screw eye, you could just use that. I didn’t have one, so I made a hanger from a bit of wire using needle nose pliers. You could use a piece of a coat hanger for this. If you don’t have needle nose pliers, just wrap the wire around that nail you used earlier to punch the holes.. Now, assemble your feeder. Careful not to tighten the screws too hard or you might break the plastic. . Fill your feeder with some seed (I used sunflower seed), hang it outside your window, and have fun watching the birds! I hope you try making your own and have fun with it.. Participated in the Before and After Contest 2017.",0
"This is a cheap and easy to make bird feeder for use with apples, oranges and similarly sized fruit. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. The photos show the finished bird feeder. It consists of a vertical ring through which a removable bamboo skewer is fitted for holding the fruit in place. This is zip tied to a horizontal ring, which is also fitted with a (shorter) skewer to prevent the fruit from sliding or turning on the first skewer. The second skewer only needs to enter the fruit a centimeter or so.. The top of the vertical ring is fitted with an eyelet screw for hanging the feeder from a branch or similar with a piece of string or wire.. 1. Two rings made from 2 cm sections of 110 mm PVC waste pipe. I used pipe with a wall thickness of 3 mm for added sturdiness.. 2. Four 150 mm zip ties (you can use shorter, but then tying them will be more difficult).. 3. Two bamboo/wood/plastic/metal skewers.. 4. One eyelet screw.. First cut your two 20 mm sections from a piece of 110 mm waste pipe, preferably with a wall thickness of 3 mm. If you have a band saw available, this step is extremely easy. But even with a jig saw or hand saw there should be no problem.. Drill two holes in each ring opposite each other, as shown in the first picture. The holes should be a little bit larger than the thickness of the skewers. My skewers were 4 mm thick, and accordingly I used a 4.5 mm drill bit.. Drill a smaller hole in the top of the vertical ring for the eyelet screw, according to the thickness of the screw.. Next cut your skewers to size: 170 mm for the longer one, and 110 mm for the shorter one work well. Birds will welcome the protruding ends of the skewers to grab onto.. Nip off the sharp point of the skewers for your and the birds' safety.. If you want to paint your feeder, now is the time. Roughing up the surfaces of the rings with some sanding paper will help the paint adhere.. Loosely fix the two rings to each other with the zip ties as shown in the first picture. The second picture shows the result you should have now. Now adjust the rings so that the holes face in the correct direction, and tighten the zip ties. Cut off the excess lengths of zip tie.. Lastly fix the eyelet screw to the top of the feeder.. Congratulations, your feeder is finished, and can be hanged from a branch. . Birds should flock to it in no time after discovering the treat awaiting them..",0
"This is a variation of the one-board birdhouse available at Lowes.com. Their plan did not allow for an easy clean-out so I modified the floor and a couple of the joints.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. You will need:. Materials:. 1 ea. 1""x6"" untreated cedar dog-eared fence board.. Interior/exterior glue. #6 x 1-1/4"" screws. Paint (optional). Tools:. Drill with hole saw and 3/32"" & 5/32"" bits. Screwdriver to fit your #6 screws. Saw. Brad nailer and 1-1/4"" brad nails (optional). Tape measure & pencil. Cur the following lengths from your fence board:. 2 ea. 9"" pieces for the roof. 2 ea. 8"" pieces for the ends. 2 ea. 5-1/4"" pieces for the sides. You can cut these a bit shorter, 5-1/8"", to allow some ventilation under the eaves.. 1 ea. 3-7/8"" piece for the floor. Lowe's cutting diagram for reference. I changed a couple of things.. https://www.lowes.com/creative-ideas/pdf/One_Board.... For the entrance hole, use an appropriate size for the bird species you want to attract. Center this on one of your 8"" pieces, 3"" from the bottom. If you are using a screw to hold the floor in place, center a 5/32"" hole 3/8"" from the bottom edge. Optionally, you can use a cabinet latch instead of the screw to hold the floor to give the house a no-tools clean out. If you plan on mounting this on top of a fence post as I did, you'll want to use a screw in the front. A cabinet latch would be unusable with this type of mounting. Think ahead, in other words.. Also, drill the 5/32"" holes for the floor hinge screws now in the 5-1/4"" side pieces. These would be drilled 1"" from the back edge and 3/8"" from the bottom edge.. If you use hummingbird feeders, you can use the scrap entrance hole plug for part of a cheap ant moat, I have another instructable that covers that.. Cut 45° angles on the front and back pieces. I use a radial arm saw so I set the beginning of the cut at 5-1/4"" from the bottom edge, cut one side then flip it over and cut the other side.. I bevel the roof pieces and the floor piece with another 45° cut. I like the way they fit together this way. Lowe's plan call for a lap joint on the roof. You can do it this way also. Trim 3/4"" from one roof piece in lieu of the 45° angle.. The bevel in the floor piece simply eliminates any interference in the floor pivot, but you can simply whittle off some of the back edge of the floor if you find it's binding when opening the floor.. Now you can glue and clamp the front and back to the sides. After the glue has cured, I put a couple of brad nails on each joint. Alternatively, you can drill and screw these joints.. At this point you'll want to attach the floor. It's harder to do after the roof panels are on. I know.. Move the side of the house to the edge of your workbench and place the floor in position, bevel side down. Through the pre-drilled hole in the bottom corner, drill a 3/32"" pilot hole in the floor piece. Install this screw loosely. Repeat for the other side. Once you're happy with the way the floor is centered, drill the same hole in the front of the floor piece for the latch screw.. A note on painting. If your house and roof are to be different colors. Now is the time to paint them separately.. After you have installed the floor, glue on the roof panels and secure them with nails/screws once the glue has cured. Depending on your glue, you may need to use a couple of pieces of masking tape across the ridge to hold them in place. I used Loctite PL375 adhesive in a caulking gun and didn't have this problem.. Paint it as you wish! My barn ad stencil was made by Etsy.com seller Glassy Witch, if you would like this stencil or something custom, look her up on Etsy. (Check out the Wikipedia page on Harley Warrick as he painted most of the ""Mail Pouch"" barns across the United States.). Enjoy!. If you cut the 45° bevels, you'll have some triangular pieces of scrap on the bench. You can glue this into the underside of the roof ridge. If you are drilling into the roof ridge to add eye screws, this just adds a bit more strength.. Another barn art idea I had was to use pop cans as tin signs. I used carpet tacks to attach them..",0
"I like to shop in resale and thrift stores for dishes, vintage glassware and surprise items. I've seen a lot of vintage lamps with large glass globes in various colors just sitting forlornly on the shelves and wondered what I could make with them, since they weren't very sellable as is. Then one day it hit me - Bird Bath base!. Next you will find my instructable for an easy Bird Bath using various pieces of glass and a pretty lamp base. Enjoy.... Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. First you will need a vintage lamp with some colored glass in the design. You can find one at your nearby thrift or resale shop or at a garage or estate sale Shown is two different lamps that are suitable. I ended up using the first one, with the iridescent globe.. Next you need a shallow bowl, tray or dish made from glass. Again your resale or thrift store or garage or estate sale is a good source for glass with a pretty design and for colored glass. Your bowl should be about 24"" diameter or whatever looks pleasing with your lamp. Also pick up a couple of glass dishes that stack nicely and look well together. Stay away from pieces that have a lot of intricate design that will not sit snugly with your other pieces. . I found this gorgeous vintage lamp with a large iridescent white globe. I already have a pretty good collection of glass serving pieces that would be perfect for a bird bath so I picked one with etched calla lilies.. I love my Dremel 4200 for cutting holes in glass. In fact, I'm on my second one. For this project I will use a Dremel 1/4"" diamond drill bit with Dremel Cutting Oil.. I also need a pair of pliers, a pair of side cutters, Dremel Metal Cutting Wheel with EZ Lock adapter, Dremel Plastic cutting wheel with EZ Lock adapter and a good glue that is weather resistant and waterproof. Loctite and several others make good ones.. I sell my creations and have found out the hard way that no matter which glue I've used, they eventually fail, which is why I also drill holes and insert a rod to hold everything secure.. Disclaimer: I received NO compensation or recognition from Dremel while I was writing this Instructable. I have no ties or connection to Dremel or any of its employees. I'm entering a contest and hope to win a new Dremel but that hasn't happened during the time I wrote this lesson. I genuinely love my Dremel and use it often. I also have not received anything from Loctite for the above mention. I just happened to have a new tube available. . Since we will be drilling holes in glass you need at least a good pair of Safety Glasses. Your own prescription eyeglasses are not enough. Get a good pair and use them often. Sometimes I use a full face protector so that I'm not inhaling glass dust or getting glass dust on my face.. Wear a pair of gloves that have good gripping since glass gets slippery. Also wear a long sleeved shirt buttoned up to the collar when drilling glass. . I like to use ear plugs when I'm drilling. It's loud and high pitched and I want to keep what hearing I have.. You will also need a stainless steel threaded rod that is 1/4"" diameter and about 36"" long. . I like to use rubber or soft plastic washers and 1/4"" metal washers between the pieces of glass.The amount needed depends on how many pieces of glass you're stacking. Grab a dozen each - you can always use them for your next bird bath. . You also need nuts to fit on your threaded rod. Three should be enough. I forgot to photograph the nuts but you can see one threaded onto the end of the threaded rod. . I added a solar light to this bird bath. You can find those at your local hardware or big box store or dollar store for ,99. . Last but not least you need a topper - something pretty like the splashing bird votive holder I found. I've also used orphan glass lids that are colored or clear, angels, animals, fish, etc. . Remove the lamp shade if your lamp has one. Next remove the harp by pushing up the metal thingeys and squeezing the edges of the harp together. Then lift up. Voila!. Turn your lamp upside down and remove the felted paper that covers the base opening. You won't need it again.. Use your side cutters or a pair of wire cutters to cut the cord. Make sure it isn't plugged in before you do this.. Go back to the top of the lamp. Pull up on the gold fixture. It should reveal a knot of cord wires. Pull them out of the lamp. Easy Peasy.. There is a rod through the middle of the lamp with a threaded area at the top and the bottom. Unscrew the nut at the top using your pliers. . Lift up the pieces of your lamp off the rod then remove the rod from the base piece. Save the rod for another project. . Wash and dry your pieces carefully. . I plan to re-stack the lamp parts the way they were for this design. Using your stainless steel 1/4"" threaded rod place a plastic or rubber washer, metal washer and a 1/4"" nut on the end of the rod.. Finger tighten another 1/4"" nut just above the base piece. See the first picture. . Starting with the base, stack the lamp parts on the 1/4"" rod. Add washers and a nut any place where your parts close around the rod. . Using your Dremel, 1/4"" diamond drill bit and Dremel Cutting Oil drill a centered hole in all the glass pieces that aren't already open. For instance, the large white globe on my lamp has a wide opening so I can leave it as is. . I start with a drop of cutting oil then carefully lower my Dremel bit to create a circle in the glass. I add a drop of oil frequently to keep the area lubricated, which cools the glass and reduces the friction between the glass and the drill bit.. Some people put glass under water to keep it cool while drilling. Others use a drill press and have to rig up a way to cool their glass with water, like spraying it with water or immersing it. I never had any luck with the water cool or the drill press method of drilling glass. I broke a lot of pretty glass and spent hours at the drill press.. That's one of the reasons I love my Dremel 4200. I can drill holes in glass in minutes and I rarely break a piece of glass. I just wish Dremel sold the cutting oil separately because my diamond drill bits last longer then the oil that comes with it.. I chose this small wavey edge glass bowl to go upside down between the lamp part and my bird bath piece, just because it looked nice. Add a metal washer and a rubber washer to the threaded rod then stack that baby on your threaded rod,adding another metal washer and rubber washer.. Glue the glass bowl to the lamp part if you want. I chose not to use glue in this bird bath because the pieces fit together so well and the balance was so good. If I was stacking more glass on glass pieces I would have added a good glue. . Add your large glass bowl or platter for the actual bird bath.. You don't want a piece too deep here. Look around at the birds in your yard. They're bathing in shallow puddles. They don't want to swim. If you've chosen a deep bowl add something to make it shallow - a plate, a pretty lid, an upside down dish. Whatever you have that looks good. . Use the metal and rubber washers both under your bird bath dish and on top. You'll see why in a minute.. If you're using glue add it to the bird bath dish before you put it on top of the dish below it. Follow the directions on the glue. If I'm using glue I will often wait a day or so for the glue to set up before I move my creation again.. The topper not only looks pretty on top of the bird bath glass, it also covers the washers, lets me add a snug washer and a solar light.. Your topper will need to have a hole drilled into it if you've chosen something like I did, with a votive candle place. On top of your threaded rod, after you've placed your drilled topper, place a metal washer and a rubber washer. . If you chose something big like a pretty glass lid as your topper you will need to add your washers and a 1/4"" nut finger tightened on top of the bird bath piece. Follow the instructions in the next step to cut the threaded rod.. Using your wonderful Dremel set up with the EZ Lock adapter and a Dremel Metal Cutting Wheel cut off the excess threaded rod. . First, put on your safety glasses, long sleeved shirt and gloves. This will send sparks flying all over the place and they sting if they get your arm or hand.. I couldn't cut off my rod inside the candle holder so I marked where to cut on the rod, removed it from the bird bath and then cut it off. After that I replaced the cut down rod through all the pieces, including the washers. . Make sure you have a nut attached to the part that remains before you cut the rod off because you won't be able to thread it on afterward. . Then finger tighten a 1/4"" nut onto the rod and snug it down with the pliers. Don't put any muscle into it or you'll crack your glass. Just make it snug.. Remove the long metal sleeve from the clear plastic housing. Just twist and remove.. Remove the clear plastic ""globe"" from the light holder by twisting slightly and pulling of... Place the plastic ""globe"" in your top piece. Mine was a little taller than I wanted so I needed to cut down the clear plastic piece. . Mark the plastic where you want it cut off. . Pull out your Dremel with the EZ Lock Adaptor and a Wheel for cutting plastic. Put on your safety mask or safety glasses and slice the excess plastic off. . You can glue the clear plastic into place if you want. I chose not to because I think it will be easier to clean my glass pieces if they're not glued down. Just place the clear plastic piece, attached to the bulb and solar collector, into the well on back of the bird - where the votive would normally be placed. . . Pull out the orange tab when you're ready to use the bird bath. I hope to sell mine so I'll wait so the buyer gets a fresh solar light.. Time to repeat the disclaimer. I received NO compensation from Dremel for making this Instructable. I own the Dremel used in this lesson and use it often. I find it the most versatile tool I have. Again, I received NO compensation or recognition writing this lesson from Dremel. I plan to enter this Instructable in a contest and possibly win a new Dremel but that hasn't happened now.. I've made many Bird Baths. Some use lamp bases. Others use various glass pieces like bowls, plates, vases, glasses and candle sconces. It's fun to build a tower of various glass pieces then anchor them with a wide, heavy glass light fixture, microwave plate, or bowl to keep them from tipping over. Drill through the pieces and insert a threaded rod and anchor with nuts and washers. Or glue each piece to the next. Or do both to ensure your creation stays together. Next Instructable I'll show you how to make a bird bath tower of all glass pieces. . Thanks for viewing my lesson. Now go out there and create some beautiful Bird Baths. And share your pictures with me. . Runner Up in the Glass Challenge 2017. Did you make this project? Share it with us!. 18,428 Enrolled. Question
 
 7 days ago
 
 . Hi! It looks so pretty I want to make one for my garden. Should I seal the base with something like modge podge to protect from the weather?. 
 
 Answer
 
 5 days ago
 
 . If your base is glass the answer is no. If it's something like the metal lamp base I used the answer is ""I don't know. Mine have never stayed around long enough for me too see how they age. Mod Podge or a spray of clear paint would probably work to protect it but be sure to do both inside and outside.. 
 
 
 3 years ago
 
 . These are so pretty! Thank you for sharing your process! . 
 
 Reply
 
 3 years ago
 
 . You're welcome. Thank you for looking. 
 
 
 3 years ago
 
 . Nice!. 
 
 Reply
 
 3 years ago
 
 . Thanks. 
 
 
 3 years ago
 
 . That looks beautiful! Great idea for reusing them :). 
 
 Reply
 
 3 years ago
 
 . Thank you so much. © 2020 Autodesk, Inc..",0
"What ?Birdhouses. Why ?. - to help the birds- to have a relaxing birds singing in the garden - to play/spend time with kids (during project making) - to create unusual and personalized decoration for Your garden- to be eco ;-). Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. There are no universal birdhouse. Their sizes and shapes depends on birds which are ment to live in them. Do some research what birds are in Your area.Then search for a good house sizes on the internet.. In my case, I chose house for sparrow, so my dimensions are: Entrance - 33mm Height - 240mm Depth - 110mm. Remember: Distance between bottom and the entrance can not be to short to avoid predators (ie. cats). Do some cuttings. In fact You will only need just:- two same sizes sides - one front - one back - the roof. I recommend to cut first the rear, than the front and then You will know how cut the sides and the bottom. The roof should be about 2' (5cm) longer than whole birdhouseMake the hole for an entrance (use drill, or thin saw, or eaven carving, sharp knife). Make small drill holes in front and rear desks to avoid wood splitting. Now connect those parts with the sides with screws. That's all!. Bird's doesn't mind if they live in painted or not painted home, buyt You do. Painted birdhouses could be very decorative and could give something new to Your garden. That's all. You have nice looking birhouses. Now wait and enjoy birds singing in the spring.. If You enjoy this instructable - subscribe my profile as well as youtube channel.. Participated in the Woodworking Contest 2017.",0
"I built this to give my kids a close up observation of our backyard birds raising their young this Spring. It was a fun project we were able to do together and enjoy for many seasons ahead. It's really easy to build and requires only common shop tools. Here's how I did it.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Supplies. Any Common Birdhouse. Suction Cup Set. Tools. Optional. Use a table saw, rotary saw, or miter saw to cut off the back of the birdhouse. My table saw was able to rip through this in less then a minute.. I used 4 suction cups to stick the birdhouse to my sons bedroom window. Hammer a small nail through the center of each suction cup. Then, nail each suction cup to the back of the birdhouse. In this picture you see only three cups on the birdhouse; however, the finished product actually has four. Three would have worked fine, but then I would have had a spare cup with no use.. Clean the surface of the window you intend on hanging the birdhouse. Now, firmly press the birdhouse to the desired location. There are a few extra tips to consider when hanging your birdhouse. You should at least know which birds frequent your backyard. Depending on the bird, their height and hole dimensions can vary greatly. Here are a few common dimensions from AmishGourds..",0
"Recently, I moved into a new house where the backyard is not much else but grass, a couple trees, and fencing. Somehow, the yard just did not have enough life in it. To fix this, my family and I decided on attracting the neighborhood birds to our yard with a bird feeder. This has worked very well, with whole flocks of birds visiting our yard every day for the seed, but still, our yard is quite clear of any decoration. To begin to fix that problem, I decided to build a birdhouse, which is not only good for decor, but also would bring even more birds to our yard. If you would like to do the same for your backyard, or just want to build a birdhouse for the fun of it, then this instructable is for you.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. For this birdhouse, you will need:. -Plywood with a 1/2 inch width. -Plywood with a 3/4 inch width. -A drill (~1/16 inch drill bit). -An electric saw (or a really good hand saw and some muscle). -Sandpaper. -2 hinges w/ screws. -A pencil. -Measuring tape. With the 1/2 inch wide plywood, you will want to cut 2 rectangles with the following dimensions:. 8.75""x6.5"" - door. 6.5""x1.5"" - wall between door and roof. With the 3/4 inch wide plywood, cut 3 rectangles with these dimensions:. 10""x9"" - roof. 6.5""x8.75"" - back. 6.5""x8"" - base. Additionally, with the 3/4"" plywood, cut 2 trapezoids with these dimensions:. 8"" - base. 9.5"" - side. 11"" - side. Draw the dimensions for a bird hole on what will be the door. The center of the hole should be 2"" from the top of the door, and the diameter should be 1.5"". Using a drill, bore holes on the circle. Try to make them as close together as possible. After this, the piece will likely still be stuck, so using the drill, try to drill diagonally by entering one hole and drilling towards another. This should work to free the piece, and form the hole. . Another way in which this could be done would be to drill a hole in the middle, and then using a hack saw, make a cut on the circle.. Now that the piece has come out, the hole is there, but with rough edges. Using sandpaper, sand the inside of the hole until the hole is smooth and circular. In the image above, I could have continued sanding to make it even more circular, but I thought it was good enough. Main thing is to sand until the hole is smooth (Don't want the birds to cut themselves).. Mark out where the 2 hinges will go on the door and the side piece. This can be done with pencil, just in the picture, I have the screw entry points marked with the screws themselves. Make 1 hinge 1/2"" from the bottom of the door, and the other 1/2"" from the top of the door (Note that this is unlike the picture, where the hinges are not centered). Once this is done, drill holes in the marked points for the hinge screws. Finally, place the hinges on the marked places and screw them into the door. . Next, find one sidepiece, and connect the door to the 11"" side of the trapezoid shaped sidepiece. Make the bottom of the door be a shade more than 3/4"" from the bottom of the sidepiece. This is to make sure the door can swing freely into the door frame. Once in position, screw the hinges into the sidepiece. . Using nails longer than 1"", connect the pieces of the birdhouse. Start with the base and the back piece. Hammer the back piece onto the base, allowing the base to be underneath the back piece. Make sure the base edge is flush with the back. . Take a sidepiece, and position it so that the 9.5"" side is flush with the back. Also, make the 8"" base flush with the base, so that the bottom of the sidepiece becomes part of the base. . Next, connect the 6""x1.5"" piece to the 11"" side of the sidepiece. Make it flush with the front of the sidepiece. Be sure it is positioned so that it makes the third side for the frame of the door. . Connect the sidepiece holding the door like the other sidepiece is connected, but on the other side. Be sure the door can fit in the resulting door frame. . Lastly, fit the roof onto the birdhouse. Center the roof widthwise. Make the back of the birdhouse flush with the back edge of the roof. . After putting all of the wooden planks together, you should have a completed birdhouse! Of course, if you would like, you can add paint, add a perch, or anything else to customize it. Keep in mind, the dimensions used in this instructable by no means need to be followed. If there is a certain type of bird you would like to attract to your backyard, make sure you do research on what the proper dimensions for the birdhouse would be for the best chance of seeing it, including what hole size would be needed, and adjust them accordingly. If you do not mind who visits your backyard, then just follow these dimensions to be safe. Hopefully, this instructable serves as a good guide for building a birdhouse. If you have any questions, comments, or advice on improvements, just leave a comment below!.",0
"This instructable is more about caring about our little friends Tit Birds, and reasonable usage of food products rather then the feeder itself (because it's not working wery well).. So why do we care about Tit Birds?. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Because they are cute as hell!. Also they're great helpers at the gardens. During the Winter they eat bug larvas hidden in tree bark, and at the Spring and Summer they eat bugs themself. They eat all bugs but a lot of them are harmfull pests.. In order to survive the Winter, Tits (and it was quiet a discovery for me, when I googled the name for translation) need to have a reliable source of fat in their ration. And this is where we'll talk a bit about salo.. Here in Ukraine we love salo (I'm not the author of the picture), it is a national product, and you can read about it in this wikipedia article (https://en.wikipedia.org/wiki/Salo_(food)). Basicaly salo is raw pig fat with skin and some meat inclusions (or without meat at all), which can be preserved by salting, smoking and other ways. Salo is a great Winter fat source for Tit Birds and they like it a lot.. But first, we have to make the feeder (if you decided to do so rather than use simpler way about which I'll talk at the end of the instructable).. I've got a pair of these cheep wooden spatulas that came as bonus with some bakery products. The markings on one of them are representation of future transformations.. And here's the transformations and the tools I've used to accomplish them.. I finished it with a coat of boiled sunflower oil. This is the feeder now, and I'll show you how it works a bit later.. Because now it's time to prepare our salo. And this is a ""rational usage of food products"" part.. In our family we always collect leftover pieces of this product that aren't that fresh anymore to be eaten (although it can be kept in the fridge for a long time), and we use it for Tit Birds at Winter. But at first we have to cut off any salt or seasonings because it's not good for the birds. I'm planing to melt those cut offs into technical grade lard and make outdoor candles with it, but this is a project for the other day.. When we have our pieces ready, we can attach them to the feeder with a twine using holes and notches we've made in the spatula earlier (now their mysterious nature is revealed!!). The simpler way to feed a Tit Birds with a salo I was mentioning, is just to tie a twine to the piece and tie other end to the branch. But it's not that easy, sometimes, to tie a knot in cold conditions, and you have to take the twine off the tree at the Spring, because it can grow into the branch. In this way my feeder is winning, because you can just hook it on and even reach a higher spot. But in the same way it looses, because strong wind can knock it off the branch, and currently local cats heve already stolen the thing. Also you can bunch a few pieces of salo on it, which is harder to do with just twine, so maybe making deeper cut for hook opening can redeem this design.. Unfortunately I didn't photographed the birds at my feeder, because it's hard to get close enough without scaring them, and my camera gives me more frustration than photos. So here's some pictures from google image search results.. Aso I'm understanding that such product as salo may not be available in you country but it can be substituted with a bacon, for example, or lard, or any animal fat in any other form until it contains no salt or seasonings. Just make some research.. So. This is it. Thank you for your attention and have a nice Ti... time... I was thinking about time..",0
"The goal of this ible is to show you how to make a simple birdhouse out of four nails, a bit of glue, and a scrap of plywood (at least 14 inches x 19 inches, anything bigger is gravy). This is a great project to do with kids!. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. This bird house is tailored for chickadees, but you can of course modify it to suit whatever bird you are trying to attract. I chose chikadees because they are friendly birds that stick around through our cold Canadian winters, and can easily be tamed to come eat out of your hand, especially if you are giving them tasty treats like sunflower seeds.. The house I am building is meant for chickadees that live in northern climates. Depending on the bird and climate, the size of the hole will varry. For Chickadees, 1-1/8 inches is the normally quoted size, but this will be a bit too small in northern areas where they get plumper. In Canada and part of the norther United States, increasing this to 1-1/4 inches is a safe bet. You will also notice that there is no peg; putting a perching dowel is a feature that will attract different birds. In these dimensions, sparrows would quite like the house if it had a perch.. For this project, you need . The tools required are. If this is going to be cut by kids (be it by hand or electric depending on age), pre-drawing the lines will be nice. If you are doing this with a table saw and are comfortable using the fence, you can get away with a list of the dimensions and just use the fence to size everything.. What you will need are two pieces that are 4 inch wide for the front and back. The front should be 8 inches long, and the back needs to be at least 11 inches long, but you really want to get it 12-14 inches long. The first 9-1/2 of the back make up the wall, and the rest will keep going below the bird house so you can easily fasten it. If your piece of wood allows it, you can make the house a few inches higher.. The sides should be the 2x the width of your ply (so with my quarter ply, that's half an inch) plus 4 inches. So the sides are 4-1/2 x 9-1/2. Since you will be cutting the slant for the roof in the sides, you can keep them as long as you want if you are just cutting up scraps and won't re-use anything else, and just trim it to size when you add the taper.. Lastly, the base is going to be a 4x4 square, and the roof a 5x6 inches.. The hole should be centered on the front piece's width, and 6 inches up from where the base will be.. The walls will be 8 inches high in the front, and 9-1/2 in the back.... or whatever lenght you ended up with after the kids cut the pieces.. Laser lines on saws are genrally pretty gimicky, but this is where I actually like having one. Since we can mark our sides using the front and back and draw a line between the points, we are getting a pretty random angle. Following that line with the laser guide (not to position the saw, but rather just the rotation of the base), you can get the correct angle to your saw very easily.. In preparation for installing the base later on, we want to drill two holes in each side. These holes will be very close to the bottom edge, and about half an inch in from the front and back edges. The drill bit size you select should match the nails you are using, so that they can slide in and out, but not fall through. This is because our base just rests on the four beds, for a dirt cheap mechanism. No need for hinges, and it will hold just fine.. You will also have to drill the opening for the birds on the face plate. In this case, I am making a 1-1/4"" hole that is centered just over 6 inches away from the bottom edge (kinda eyeballed it).. Adding a knob to the underside of the base by gluing a bit of scrap to it will make it easier to handle the base.. Everything except the base just gets glued together. You can get away with using 2 clamps, but 4 is better. Assemble all the walls at once. Once that is dry, you can glue on the roof.. Now that everything is done, you can slide the base in and inster the nails to prevent it from falling back out.. You can now go out and install your bird house. For chickadees, it should be at least 4 feet off the ground, and as much as 12 feed up. If you have more than one, make sure they are very spaced out, as the chickadees could get a little territorial.. Participated in the Homemade Gifts Contest 2016.",0
"What ?. It's winter now, so it's good idea to feed some birds. Not everyone has a good bird feeder and not everyone has an ability to make one. So, I will present fast and easy way to make bird feeder which can be hanged in the garden or on the balcony.. Ingreedients:. -fat/lard. -seeds. - cake forms. - straw . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. First You need to heat up the fat. Not much, just to make it fluid.. Then mix it with the seeds. . Mixed fat&seeds now can be putted into cake forms. Remember however to put the straw(or small stick) in each one.. When mixture get cold and will be solid, get it out from cake forms. Then remove the straw. It will create a hole for the twine (or tape). Put the twine there and now You are ready to hang bird feeder on the tree/balcony.. Thank You for reading my instructable. If You want more-subscribe my channel as well as my Youtube channel..",0
"hi all.first of all im sorry for my bad English. this is my first post on instructables. this is a really easy to make finch house that too many kind of finches love it.. its natural. its wood. its your handmade. :). this finch nest (finch house) tested in cage of Zebra finches, Java finches and Gouldian finches.. in the first pic u see two chick of zebra finches (Both female) that goes to the nest for rest n sleep.. i hope it will be helpful for you guys.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. this is all you need for making this house.Tools :. 1. Drill (its better to use of corded drill instead of cordless because coconut is very strong.). 2. Hole saw (For finches i used 51mm (2 inches) hole saw but you can use any size for any bird). 3. Knife or something to extract coconut meat.. Material :. 1. Big Coconut. 2. Small wood stick (10cm (4 inches) is enough). 3. Sawdust or Cottonseed or any other things for make the nest soft.. first of all you should make your coconut clean and cut of all hairs. (coconut hairs can use instead of Cottonseed). coconut has 3 eye and one of them is easy to open. so open it with knife and extract sweet water of coconut.. pick a hole saw due to the size of the bird that you make this nest for. 50mm (2 inch) is good for finches.. select the area that you want to make it entrance of bird house. its better to choose it under coconut eyes because the house should be a little deep.. in the center of the area that you choose for entrance drill a 5mm hole before using hole saw.. use the hole saw to make the entrance and due to size of your wood stick make another hole under it.. you should extract the coconut meat from the entrance hole and i suggest to do it easily to prevent cracking.. after extracting if you have some cracks like mine you can fill them with wood glue.. insert the wood stick to the hole and use wood glue or mdf glue to fix it.. your finch nest is ready. fill it with any material that u think its better for your bird.. i used cottonseed in on of finch houses and also used sawdust for another one.. last three pics are another model of nest that has bigger entrance and it can use for bigger birds.. if you have finches in cage its better to fill the nest with cottonseed and give the finches a little grass or something like that. Finches love to build their own nest.. for fixing the bird house in cage there is too many ways that depend on your cage and the place that you want to fix it.. i used thick wire and hang it of the top of the cage and after that use a little epoxy to paste it into the cage.. i hope this instructable being useful for you and your birds..",0
"Raw cedar stick. ( I had several young cedar trees I had cut down for making hiking sticks and other things...)Drill Forster bit ( or a bladed drill bit in a pinch)Eye screwAircraft cable and hardware for making loops ( optional)Hand saw Suet. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Cut to length you want, I'd keep it no more that a foot or so...Remove any branches. You don't want birds that can only sit on a perch to feed on this feeder. Birds that can clutch to the side of a tree. From the web sitehttp://www.birdsforever.com/suet.html""BIRDS THAT ARE ATTRACTED TO SUETOffering suet in a wire cage or suet log is a low-maintenance bird feeder. You refill only once every week or so, you never need to scrub the feeder, and you can leave it in your yard year round. Presenting suet in your backyard will also attract a greater variety of birds for your enjoyment. Some of the backyard birds that enjoy suet include: - Woodpeckers - downy, hairy, red-bellied, red-headed, northern flickers, and pileated; - Chickadees, tits, nuthatches, brown creepers, Carolina wrens, tufted titmouse,""Keeping the ""perches "" off the feeder reduces the amount of non local birds from the feeder... or so I've heard.. Pretty self explanatory ... tap a starter hole if necessary with drill. Scew it in tight so it gets a good bite. . Use the forstner bit. It cuts a nice clean hole. I drilled at least two on a side . I alternated or staggered the locations so as not to drill through the stick . Drill in enough to hold food but not to go all the way through.. I used thin diameter aircraft cable. Why? 1. Already had it.2. Adds the ""man"" made affect!3. Prevents ( hopefully ) squirrels from clmbing down to the feeder.If your using aircraft cable, make the loop, using aircraft cable hardware, to the eyelet. . Since it was my feeder, I waited to complete my hanging cable until I picked the location I wax hanging it. I measured how much cable I needed and then cut it and finished with another loop. I used a cheap aluminum carabeener to secure it. Gifting the feeder? Cut the cable and make a loop at end, just estimate length. You can also use rope, string or heavy fishing leaders ( metal ones ) Or whatever you want. . Gets messy but load up the feeder holes with suet! I made mine so I could take it down and refill if I wanted to . That's why I used the carabeener. . The birds have slowly begun eating from mine. ( this photo taken while my dog was busy scaring away the evil birds!)Thanks for reading! Have fun!.",0
"I am very fond of repurposing anything headed for the trash heap as some people may have noticed and here I have an opportunity to salvage a juice carton and give the birds a little snack.. It is easy to do and needs few tools.. I had to replace the early pictures of the completed feeder shown which were inadvertently deleted, so you will see a dramatic difference in colour at one point in the project. I could pretend that I did it on purpose to draw attention to what was happening in that step, but I wont. . I suggest that the feeder be located under some kind of overhand to reduce the amount of moisture that might get in the seeds.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. All you need for this project is a beverage carton with a spout on the top. and a few tools. a ruler. a craft knife. a glue gun and a short piece of waterproof tape. and of course some bird feed. Carefully pry open the sealed flaps at the tope of the box, keeping the screw cap.. Wash the box very well so that there is no trace of juice left in it.. When it is dry, take the ruler and measure about 1 1/2 inches from and parallel to the bottom of the box and score a line for about 3/4 inch from the corner. You do not need to cut through the box at this time. Turn the box over and score another line as above.. Repeat this for all 4 corners. . When all four corners are scored parallel to the bottom of the box, measure up one of the corners 1 1/2 inches fom the score line. Score a line from the end of the score line furthest from the corner up to the nick that you put on the corner to mark 1 1/2 inches up from the score line. Turn the box over and perform this step on the other side of that corner.. Repeat this for all 4 corners.. You may have noticed a slight change in the appearance of the box. The earlier pictures of the feeder were accidentally deleted and so the earlier steps were shown on different box. Sorry if it leads to confusion.. Go over each of your scored lines parallel to the bottom cutting through as smoothly as you can.. Then with you thumbs push the corner of the box inward along the angled scored lines. . I have shown these openings from several angles.. When you have pushed in the 4 openings, refold the top opening and ensure that the cap is in place.. At this point you can fill the feeder with seed.. You will see the top edge of one of the two unfolded edges has a tab on it. Take this tab and insert it into the space between the folded edges and the edge without a tab. While holding it in place, have a friend apply hot glue. Some hot glue does not hold for more than a minute, so a this point quickly apply a strip of waterproof tape on both sides of the top flap. . Now take the bird feeder outside and make some birds very happy. . Because of the cap at the top of the box, you will be able to refill the feeder. I recommend using a funnel to aid in pouring the seed into the box.. Participated in the Outside Contest 2016. Participated in the Makerspace Contest. Participated in the Backyard Contest 2016.",0
"ok for this i wanted a safe way to stop ants from getting in my Hummingbird, and Suet feeders, yes water works but its hot and dry in the south and it dries out, so i tried essential oils as a barrier, seems to work well. You will need old water or soda bottles. scissors do not run with them!. wire or coat hangers the metal kind.. cotton or some absorbent material to hold oils. some essential oils, peppermint, lemongrass, cedar, etc . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. cut bottom of bottle off save it for later, poke a hole in lid, and in bottom center.pass wire thru. on wire near top add a small wire to hold cotton balls in place. add cotton balls. ok put a few drops of each oil you use on cotton, then push bottom on wire to make a hold and slow evaporation of oils. note you could use a poison but i don't like the thought of that.. Participated in the Backyard Contest 2016. Participated in the Outside Contest 2016. Participated in the Summer Fun Contest 2016.",0
"Here's a sweet little birdhouse design that doesn't require a lot of time, tools or materials.
The ""house"" is an empty soda can, making it the perfect size for tiny wrens that enjoy close quarters. The pop top makes a great natural perch and larger birds or predators can't get through the 1 inch ""doorway"" to pester the tiny tweeters. 
Using a spray adhesive, bark and natural moss are glued to the entire surface of the can to provide insulation and camouflage.  
The finished wren house is finally attached to a tree limb using ZIP TIES.
No lumber or nails were used, making this finished birdhouse eco and tree friendly.
This project is FUN and easy-peasy!  Let's get started!. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. The can needs to be clean so it won't attract ants, wasps or other sweet-seeking bugs. Rinse it out thoroughly in hot water
Mark the holes where you need to drill, making sure the doorway and perch are in the right position. 
Using a dremel, drill the holes on both sides of the can where you marked them. Aluminum is soft, but it's also tough and can get a little squirrely.  Control the drill pressure because once the metal gives to the bit, it really GIVES. Be careful and don't let the bit get away from you.
Now push each zip tie through the holes and connect the loose ends temporarily with a piece of tape. This way you won't accidentally cover the holes when you camoflauge the can.
Drill a couple more holes on the bottom for drainage. I hear baby birds are messy and they won't wear diapers.. Spray adhesive is TOUGH.  Used the right way, it'll hold almost anything together. Read the directions on the can before using it.
You might want to use a stick, as pictured, so you don't get the adhesive all over your fingers.
For the best adhesion, spray BOTH surfaces of what you want to glue together. Wait  30- 60 seconds, then press the surfaces together.
In this case, spray the can and spray the bark.  Wait 1 minute and press the bark onto the can. 
Wait another 5-10 minutes for the glue to bond before adding the next piece of bark. Continued until the can is totally covered with bark. Add sprigs of moss and and a few fir twigs or whatever is handy for you. 
I used dry bark and natural moss gathered from my property, but any natural, slow-to-decompose material will work to camouflage the soda can.. I chose a pine that was about 25' tall.
I wanted the birdhouse to be fastened to a limb at least 8' above the ground, so out came the ladder. 
The wind on my mountain usually blows from the North, so I chose a limb that ran North to South.  
As it turned out, the diameter of that limb was too big for one 7"" zip tie, so I connected 2 zip ties together, head to tail.  Problem solved.. The little wren birdhouse is now in place, ready and waiting for a lucky wren husband and wife to move in and start a family. 
No lumber or nails were used, making this finished birdhouse eco and tree friendly. . Participated in the Green Living & Technology Challenge.",0
"A fancy decorative birdhouse, made for indoor display or outdoor use. Design is based off of the famous Habitat 67. Habitat 67 photo credit https://upload.wikimedia.org/wikipedia/commons/9/9... I designed the file using AutoCAD to create a DXF file for laser cutting. Using a series of cutouts and extensions, similar to finger jointing for a stronger assembly. . Tools and Materials:. Computer and AutoCAD. Laser Cutter or access to laser cutting services. Plywood. Plexiglas. Stain. Polyurethane. Wood Glue. Plexiglas Adhesive. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. I used two sheets of 12""x24"" craft plywood 1/8"" thick. Sanded and stained them with Minwax Golden Oak.. Smoothed the finished stain with fine steel wool. . Created a laser cut file for the wood and Plexiglas.. Laser Cut the Wood and Plexi.. Smoothed the edges with fine sandpaper and coated with Polyurethane. . First assemble the Plexiglas pieces using the Plexiglas adhesive. . Coat the edges of both pieces let stand for 30 seconds before attaching. . After holding the pieces together for two minutes apply an additional bead along the edge. The adhesive will fall into and fill the cracks. . Assembly all sides of the Plexi and let stand. . Lay out the wood pieces for assembly after they have thoroughly dried from the Poly. . Use the wood glue, apply a light layer on the inside edges of the grooves before assembly. . I used a Q-tip to apply the light layer as seen in the photographs. . To begin I laid the back side of the birdhouse face down and glued the sides to it, one by one. . As seen in the photographs the pieces fit within one another using the grooves.. I used the wood glue and assembled each piece individually until all the sides were installed.. Lastly for the wood assembly, lay a light layer of glue on all the edges (facing up) already installed. . Install the front face of the birdhouse.. Let the wood assembly dry over night. . The last step is to attach the Plexiglas and Wood to one another. . The Plexiglas contains three L shaped connectors on each side.. These slide into the six holes on the front face of the birdhouse, and down to lock into place.. The last piece is the ""key"" also made of Plexi it is 1/4"" wider than the pool and contains two small teeth.. After sliding the pool down, two small 1/8"" square holes are exposed above the pool from where the L connectors slid in. The key slides into this gap, fills the holes, and keeps the pool from being able to rise. . The clear Plexi is able to hold water if used outside, a source of drinking water or bird bath. . The front edge is 1/2"" shorter than the sides to allow the overflow during rain. . Participated in the Summer Fun Contest 2016. Participated in the Outside Contest 2016. Participated in the Makerspace Contest.",0
"If you go on you tube and search for hummingbird bath, you can find a video of humming birds playing in a shallow pan of water with fresh water being circulated by a small pump. Try https://www.youtube.com/watch?v=-vsXFH0YbZE Not my work but has made Wifey dear want one so she could watch the little birds skim the water and occasionally stop for a real bath. However, she didn't want a power cord stretched out the window so it needed to be solar powered.. I found a small solar powered fountain pump at harbor freight. The same model can be found on amazon and home depot. It only has about a 9 inch lift and that is probably in very bright sun. All I needed is two to three inches of lift so this is sufficient. The model has a solar panel with 16 feet of cord so the solar panel could go on the roof with the bird bath on the ground. The output of the panel is stated to be 1.5 watts at 7 votes. I expect it could be replaced with a small 6 vote lead acid if that was necessary. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. The bird bath consists of two baking pans. A deep one to act as a water reservoir and a shallow one to act as the bird path. I added the solar powered fountain pump, a couple of washers, some 1/2 in outer diameter, 3/8 in inner diameter hose and some hose clamps. Due to the deep pan not being deep enough, I used extra hose to lift the shallow pan up a bit. This was attached with some sealant. Hopefully, the sealant will conform to the edge of the pan and stick. The nonstick coating on the shallow pan was giving me some problems. I may replace it with some self adhesive gasket. The adhesive should stick to the deep pan rim without too much trouble. . The shallow pan fits inside the deep pan and the handles keep it from falling in. Unfortunately the deep pan needed to be a little deeper as the pump was a little higher than I thought. To fix this I glued some of the hose to the bottom of the shallow pan and you will see the tape holding it in place in some of the pictures. Getting a deeper bottom pan would probably be better but wifey dear wanted it today. . Using a 1/2 inch drill I drilled a hole in the handle of the shallow pan. Feeding some of the hose through the hole from the upper side I put the pump adapter on the hose and tightened it down with a hose clamp. The hole was a little tight so the pump is likely going to be lifted with the upper pan when removed for cleaning.. Wifey dear acted as the hand model. . Stretch the hose to the other side of the pan and cut it off about 6 inches past the other side. Drill another 1/2 in hole through the bottom of the pan on that side near the edge. When the hose is pushed through this hole it will essentially be contained by the friction fit of the holes. Double the hose over and tighten a hose clamp over it to close off the end.. To drain the water back into the lower pan, drill a hole in the shallow pan opposite the opening for the pump. Using some sealant, glue two washers over the hole. The thickness of the washers will determine how deep the water will be, assuming the pan is level. . Drill some holes in the hose pointed slightly downwards. Be conservative as you don't want to blast the little birds out of the pan or lose all the water. . Place the deep pan on a surface, fill with water and put the shallow pan on top. You can see I will need to level the surface a bit but having a slight tip may be beneficial to the birds. Just make sure the water will drain back into the lower pan and not out the side. . When you get enough sun the pump will spray some water out the holes in the hose.I was able to get a couple of photos of the action. One around 1pm and another around 6pm. Both show a couple of sprays and some dripping. . Once it is leveled up and running, some decoration can be added to make it prettier. Maybe the bottom pan can be painted and some plants or moss added.. Participated in the Summer Fun Contest 2016. Participated in the Renewable Energy Contest. Participated in the Outside Contest 2016.",0
"The other day I came across a video on the internet of a hummingbird feeding bar. I immediately thought that was a clever idea. Upon searching for hummingbird bar, I came across these nifty ones from Perky-Pet: http://www.birdfeeders.com/perky-pet-hummerbar-hum...Their feeders cost $19.99 and $29.99. Cool looking, but too expensive. I decided to make my own and I am very happy with the results. This Instructables explains how I made my 2 x 24"" feeding bars (but you may choose to make 1 x 48"" bar instead) for ONLY $12.60.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Materials:- 4 ft. Fluorescent Tube Protector ($3.47). - Epoxy putty ($5.77). - 4 x 15/16"" (#212) Screw Eyes ($1.18 for 8). - Red Nail Polish ($1.00). - 2 x Small S hooks ($1.18). - String (free). - Cork (free). Total Cost: $12.60. Tools:- Rotary tool with cut-off wheel or Hack Saw. - Wide boxing tape or Saran Wrap. - Drill. - Level. - Hole Saw . - Old soldering iron (optional). - Sharpie pen. The tube protector comes with black stoppers on each end.Tape the holes of those stoppers from the outside, then epoxy the inside. Let it set then wash the inside really well a couple of times. . NOTE: Since each tube protector comes with 2 stoppers, you will not be able to use the 2 x 24"" tubes simultaneously unless you procure 2 extra stoppers. I am alternating my tubes. . This is the most intricate part of the whole project.Fill the tube with water almost to the top. Cap it and lay it flat on a level surface. Leave enough air inside for the buble to spread all the way across the tube. The water level will be used to determine where the flower holes will be drilled. . Stabilize the tube so it won't roll. Looking from the side, the water level should be 4/5 of the way up the tube. The 2 flower rows should be about 1"" apart (measured on top following the contour of the tube). Adjust the volume of water inside if needed. . Find the top center of the tube (the equal distance between the ends of the tube and the rows of flowers) and mark an X with a Sharpie pen. That spot will be where you fill the tube. . Mark the mid point of the water line on both rows of flowers with dots. Starting on the water line dots you just created, measure every 1.5 inches on each direction on both sides.. Once both rows are dotted, roll the tube to align the top center X to the water line. Measure 1"" from each end of the tube and mark that spot on the water line. Those marks will be where you hang your feeder from. . Now that you have a tube with 2 rows of leveled dots about 1.5"" apart and X markings on the top center and ends of the tube, it is time to start creating the holes. . I created my feeding holes using an old soldering iron (easier) but you can achieve the same result using a drill. The holes should be around size 3/32. Make holes on each dot you created. For 24"" tubes, that will be 24 feeding holes. . NOTE: Skip the center dots and end dots of both rows.. Using a hole saw roughly the same diameter as the cork, make a hole where the top center X is. The cork should fit snug but does not need to seal. The only purpose of the cork is to keep animals out of your sugar water. . Using a small drill bit, make pilot holes where the top end marks are. Screw in a screw eye on each side. Make sure each side goes in roughly the same depth into the tube. Using the epoxy putty, cover the point of the screw inside the tube. That will make it safer for cleaning and prevent the screw to rust. . Paint each feeding hole with a red flower using the nail polish. The easiest way I found to do this is to make an asterisk using the hole as the center. You may need to do 2 or 3 coats of nail polish until the color is a vibrant red. NOTE: There are other ways of doing this... red stickers, red wire connectors, etc. The key here is durability, easiness to clean, and the color RED!. Next step is to hang your feeder. It needs to be as level as possible. Use the level to accomplish that. I hung mine with screw eyes attached to the ceiling. The screws are about 26 inches apart. That helps to stabilize the back and forth movement of the bar in case of strong winds. I used fishing line to dangle the bar to about 6.5 feet high. S hooks make it easier to hang and remove the feeder for cleaning (every 3 days or so around here... it varies with the ambient temperature. Warmer climates require more frequent cleaning). Use a bottle brush to clean the inside of the feeder.Once your feeding bar is hung, add your HOMEMADE ""nectar"" through the filling hole. A funnel makes that task easier. Cork the filling hole. NECTAR RECIPE: 1 part white granulated cane sugar dissolved in 4 parts of drinking water. Mix the 2 ingredients then heat it up to a rolling boil. Remove from heat and let it cool completely before adding to the feeder. IMPORTANT: Do not use the ready to use red nectar sold in stores. Do not add food coloring to your homemade nectar. . . Participated in the DIY Summer Camp Challenge. Participated in the Outside Contest 2016.",0
"This instructable is how to build a bird feeder from a used tin can and twine. I built this for my mom for her birthday and she absolutely loved it. I works phenomenally and the birds seem to love the twine perch to stand on. To my surprise, you really cant tell it's actually a tin can until you get really quite close, and the twine serves as a great contrast to the metal. This is a design that is versatile enough to fit in any location, and you can change the wrapping material on the outside to make it fit any style.. Materials consist of:. - Tin Can. - Jute Twine. - Scissors. - Razor Knife. - Can opener. - Large Popcicle Stick/ Tongue Depressor. - Hot Glue. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. First you have to prepare the can by removing the labels and using the can opener to cut around half of the lid. Then fold the loose lid back in the can. Make sure to not leave any sharp edges around the rim which might injure or cut the birds in some way. This is why you should not cut off the other half of the lid, and rather fold it, because if it is cut, it exposes a sharp edge which could cause injury to the birds while they eat. . In this step it you need to pick which size of can to use because that will determine some design choices later on. I think it would look really cool to build around 5 or more of all different sizes, and hang them scattered around in a small tree. The rustic twine and the reflections and modern appeal of the tin can would really go nice together, especially on a large scale design.. In this step you have to wrap the can with your twine. You can use thin twine like I used or use twine up to half an inch and have it mimic rope you might find on a dock. This step is where you can determine the overall design and anything from a quaint bird feeder in a rural area, to a rustic style bird feeder near the beach. . I used hot glue to tack it down in the middle of the bottom of the can, and started my wrap there. On the bottom side I had to glue it down in multiple spots each spin, but once I got over to the sides, I was able to tack it down about every 5 turns. Make sure to wrap the twine around the base really tight because the bird feeder will be out in the elements. . After about and inch or so of wraps around the side, make sure to glue your popsicle stick down as a perch for the birds, and wrap around that as well. When I got the the very end of my can, I entirely glued the string down for the last few wraps, and then continued to wrap around the popsicle stick on the bottom. I glued the end of the twine to the tip of the popsicle stick, and added a small length of twine to hang it with.. At this point all you need is to fill it with bird seed and hang it up in your back yard or garden. The birds love it, and even though there is only one perch, the same amount of birds still hang around it. It is a great replacement for our old feeder, and it surely looks a lot better. Another added bonus is it is squirrel proof, and nearly impossible for them to land on the small perch.. This is my first instructable, so thank you very much for viewing it! This is a great project to do over the summer with your kids, and you can teach them about birds, wildlife, and nature. I hope you can use it and make one of your own! . - Brandon, 16 (Modern Rustic Workshop). Runner Up in the Animals in the Wild Challenge. Participated in the Trash to Treasure Challenge. Participated in the Outside Contest 2016.",0
"This Instructable will show you how to make an easy and inexpensive bird feeder from materials laying around the house. The tea cup and saucer we got for free from a CraigsList curb alert. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Tea cup and saucer. Velcro. E600 (or another strong epoxy/adhesive, OR hot glue with epoxy for added support--something non-toxic). Bird seeds. Before you glue anything down, decide how you want your bird feeder to be set up. We've learned with our own bird, Cecil, that birds won't really dig for seeds, so an upright cup probably won't attract many birds. An easy to peck through layer of seeds, will. . When you've decided on the placement of the cup, use hot glue and/or a strong non-toxic epoxy to cement the pieces in place. Make sure to follow the manufacturer suggestions on how to use exactly. Also make sure to clean up any glue strands etc. so the birds don't accidentally ingest it. . We decided to use velcro to secure the bird feeder because our balcony is a bit oddly put together. Just slap a strip of extra strong velcro to the bottom of your saucer and the other end to where you want your bird feeder to stay and you're good to go. . The bird feeder is going on the window away from our container plants as we've had problems with bird seeds being knocked into the containers and sprouting. . Your local pet and hardware stores will have a variety of seeds, usually ones specific to the birds in your area. We have a mix of wild bird and song bird seeds. . Now that your bird feeder is all set up, sit back and wait for the birds to come. We've been very lucky this summer and have had a wide variety of birds coming to our balcony---we think partially because of the seeds, but also because of our own bird, Cecil. . Will update soon with pictures of the feeder in use!. Runner Up in the Animals in the Wild Challenge. Participated in the Makerspace Contest. Participated in the Outside Contest 2016.",0
"I got the idea of making a bird feeder from the fact that in our area are various birds and this way it is easier to watch them.. It is self-dosing because you can fill the bottle with seeds and turn it upside down and the seeds will flow only when the flower pot saucer will start to get empty.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Materials: . Tools:. First of all, You have to cut down the bottom of the bottle. Thereafter, assemble 2 pieces of wood, I used 3 nails, but You can use screws. This two will be the bottom and the back of the feeder.To attach the bottle, I drilled two holes in the back of the feeder and I placed into 1-1 screw with 1-1 nut and screw washer. Between the nuts and the screw washer I attached the builders tape. This tape will hold the bottle.After placing the bottle (upside down) in the bottle's holder, I made a 'roof' to protect from the rain, for that I used the 3. piece of wood.Finally, I put the flower pot saucer under the bottle, and I filled the bottle up with seeds. . I put the bottom of the bottle into the bottle to avoid birds flying into it - optional.. I found a tall tree at the end of the yard what I think this is the best place for birds feeding.I placed a screw in the upper part of the back (above the roof) for the wire, that I used to wrap around the feeder and the tree.. Runner Up in the Animals in the Wild Challenge. Participated in the Outdoor Structures Contest. Participated in the Outside Contest 2016.",0
"This project is not an act of cruelty, but helping/ forcing invasive slugs into the food chain! . In Denmark, where I live, the slugs have invaded the gardens. Not more than 5 years ago, there were hardly any slugs in our garden, but they have come from other countries and keep on laying eggs. They have no natural enemies here and therefore there are now thousands of them in our garden! They are gross, and they eat our vegetables and flowers. When we collected them for this project, ALL of the slugs you see in this picture, were literally found in about 2 m^2 of our garden in about 5 minutes. Gross! . However: Birds, hedgehogs and other animals can eat them! They just don't know, because it is so recently that the slugs have come here. So this is the plan: To teach the birds and hedgehogs to eat them. . What you need: . How it works: Slugs can't swim, and birds and hedgehogs need water. So every time you find a slug, place it on the brick island, and it won't be able to escape! Then when the birds and hedgehogs come to get a drink, they will notice the slugs. And eventually, they will eat them! Once they find out that they can eat them, they will automatically start looking for them other places in your garden! So basically, this is not a cruel way to get rid of your slugs, but a way to help/ force them into the food chain. A lot of people use poison or salt to kill their slugs, but using this method, you are feeding birds and hedgehogs instead, with the same results! . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Even though this is a slug killer, we don't want them to suffer. Therefore you must place the birdbath in a shady place, so they don't dry out in the sun. . Also, as you place the slugs on the brick, make sure that you don't accidentally push them into the water - again, we don't want to make them suffer by drowning. . Place the brick in the middle of the birdbath. Make sure that the brick doesn't touch the birdbaths edges, so the slugs can't escape. Now fill it up with water! Put just about 3 - 5 cm (1,1 - 2 inches) water in the birdbath, no more. This is because we don't want hedgehogs to drown. The poor bastards aren't that smart ;) . Snails are harmless, so please don't put them on your island. These small fellas are just chilling out in your garden, and you don't want to hurt them. It is only the invasive slugs we want to keep down! . As I said before, there are A LOT of slugs in our garden! . ALL of the slugs on these pictures, were found approximately inside the red line I drew on the picture, in about 5 minutes! It is completely out of hand... . Just use a trowel to pick up the slugs and place them onto the brick island, but be careful not to harm them. . Like I said before: This project is not an act of cruelty, but helping/ forcing invasive slugs into the food chain! . Now all you have to do, is to wait. It probably wont work the first day, but in about a week, it should be starting to work! . Now all you have to do, is to look out for slugs to place on the island, so that there are always a bunch on the brick. If you do this once daily, it should be enough! . Good luck with your invasive slugs, I hope this will work for you, as it is for me and my mother! :) . Runner Up in the Animals in the Wild Challenge. Participated in the Outside Contest 2016.",0
"Hi. Welcome to my birdhouse. This is my first own building project and I'm not a native speaker so please excuse any misspelling. Have fun.. Tubebird. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. First you need wood. Much wood. I used this wooden board. Then I sawed the wooden board in little parts. Two with 40cm x 12 cm and two with 13cm x 12cm. Then I filed the corners with sandpaper. . On the bottom line of one of the long boards I drilled three holes size 3. The edge of the second board was attached to this using some old screws. . Next I drill a hole in the first side and in the other side only a pit. I have to widen the pit. Next I took a rocket stick and put it through the hole.. Now I saw the next board with 46cm x 12cm. On the bottom side I drilled five holes. Second I hold the plank aslope and fix it with screws. Before this I already sawed too small boards so I have to fix it in two part, but it`s aslope again for keep away the rain. . Finaly I used foil to make the house rain save. With a tacker I attached it to the wood. Next I cut the overlaying foil.. Now just put the apples on the stick and wait for the birds. You should drill the apples before sticking them.. I hope you enjoyed my instructable. Questions and comments are welcome and please vote for me cause I want a T-shirt. 8-). Thanks Tubebird. ;). Participated in the Outdoor Structures Contest. Participated in the Animals in the Wild Challenge.",0
"What if your pigeon could transfer a message, a USB disk or even a mobile phone (or camera). Your dreams can now become true!!!. What is a homing pigeon?(https://en.wikipedia.org/wiki/Homing_pigeon). The homing pigeon is a variety of domestic pigeon (Columba livia domestica) derived from the rock pigeon, selectively bred for its ability to find its way home over extremely long distances. The wild rock pigeon has an innate homing ability,meaning that it will generally return to its nest, using magnetoreception. This made it relatively easy to breed from the birds that repeatedly found their way home over long distances. Flights as long as 1,800 km (1,100 miles) have been recorded by birds in competitive pigeon racing. Their average flying speed over moderate[clarification needed] distances is around 80 km/h (50 miles per hour) but speeds of up to 140 km/h (90 miles per hour) have been observed in top racers for short distances.. Because of this skill, homing pigeons were used to carry messages as carrier pigeons or messenger pigeons. They are usually referred to as ""pigeon post"" or ""war pigeon"" during wars.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Here 's all you will need:. 1.a piece of cloth (e.g. an old t-shirt). 2.scissors. 3.needle and thread. 4.a zipper. 5.a ruler. 6.a marker. 7.. two pieces of elastic ribbonv. 8.a rectangular object (e.g. a cell phone). 9. of course a...........pigeon. tip:you don't need to be too accurate, but the more accurate you are, the better the aesthetic outcome will be... . carefully sew the zipper on the upper side. You are almost there! . Now you should sew the elastic ribbons strongly onto the ""backpack"" from corner to corner.. The length of the straps should be somewhere between 10-15 cm, but you'll probably need to try it on your pigeon first.... tip: As you can see in the picture, I temporarily used a stapler in order to try the length of the elastic on the bird, before sewing it shorter at its final length.. . Second Prize in the Make It Fly Contest 2016. Runner Up in the Animals in the Wild Challenge. Participated in the DIY Summer Camp Challenge.",0
"This Instructable will show how to make a gravity feed bird feeder from some salvaged PVC pipe, cheap and forgotten Frisbee, and a few PVC plumbing fixtures.. Last Cedar and Plexiglas bird feeder (A Gift) met it's demise after about 15 years of long cold winters and hot humid summers. Still useful and intact is the post and squirrel baffle.. I could not bring myself to pay $30-$40 for another feeder, so had to figure out a way to make a new one at a fraction of the cost.. Due to the materials and tools I already had, total cost for this project to me was about $14.. The concept comes from a deer feeder I built some years ago.. Entering this in two contests, so if you like, please vote.. OUTSIDE contest.. Animals in the Wild contest. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. This really is a simple (relative to the tools you have) project with minimal supplies needed.. These are the tools I used, but I am sure you can can make things happen with some other basic tools you have handy. NOTE: For the vertical cuts of the notches I used the flush cut saw, then used the 1/8 inch drill bit to drill a series of holes for the horizontal line. I kept working the drill with holes until the notch came out. Hacksaw or some other cutting tool could work too.. Pretty simple... Drill a 1/8 inch hole in center of cap and insert screw and knob.. NOTE: Thickness of PVC is about 1/4 inch. I had to cut my screw down about a 1/4 inch to ensure a snug and tight fit.. Dry fit everything together. If there are any modifications you want to make, then do them now before priming.. NOTE: That object to the right of the feeder is the mount that will be attached to the bottom of the feeder after priming and painting. That part will insert into the post and baffle unit That will be the last item attached before placing on the post. . Painting your bird feeder. After about 24 hours to let your primer coat cure, get the paint colors of your choice. We used an exterior latex paint. Again, extra paint we had stored in the cabinet from another project.. This mounting plate came with the post and squirrel baffle. I simply salvaged it from the old bird feeder that met it's demise.. Looking for feedback on different types of bird feed. I pretty much buy the best deal available.. If you like, please vote Animals in the Wild contest and Outside contest.. Participated in the Outside Contest 2016. Participated in the Animals in the Wild Challenge.",0
"Bats will travel for km's for finding food, especially fruit bats. . Buildings and concrete have forced the bats to move out of the cities. This small creature has a lot to offer and we should help it in anyway we can. . This is an instructable for building a simple nest for the bats i have flying round my house. I believe its a good idea to keep them around. They help a lot in controlling the number of small insects, especially mosquitoes. . The aim is to built a small, cheap, light-proof box. (is light-proof a word?)The idea is for the bat to be able to grab on the mesh wire and walk / climb her way up inside the nest.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. No special tooling needed. A sharp hand saw, and a screwdriver or hummer will do the job but any other electric tools are welcome :). I used a miter saw, a band saw, a drill and a nail gun.. The material to be used is wood and fine mesh wire. No glue and no paint/varnish is needed. For my prototype, i will use scrap osb wood. It is light, weather proof and free. The osb was part of an old dog-house from a neighbor.The mesh wire is taken from an old cooker hood.. For the final product, i will use 8mm marine plywood.. Measure twice, cut once. These are the parts dimensions and the parts transferred on the osb. Make sure you do straight cuts. Upon assembly, the light must be kept out, so a firm straight joint is necessary. The piece i had was 52x63cm, which was more than enough.. These are the parts cut. The saw dust aids in visual drama :). Time to put the pieces together. Can be either screwed or nailed. Either way, keep it simple.I used nails for this attempt.. First nail the two sides and in between nail the mesh wire. Then the front, the roof and the bottom lid. Finally, the long piece behind it for hanging/fastening.. This is the finished prototype. . This is the final design. I used 8mm marine plywood and tried to give some optical beauty to the nest. Hope to be more attractive to the bats :). I miter cut the pieces for a better fit, used hinges for the bottom lid (helps the observation) and fastened the mesh wire on three wood rails. This way, there is a space between the wire and the rear flat. Also, a series of small holes on the front help the air circulation.. Hope you liked it and more important, i hope you built one outside your house. Bats need a good home :). Runner Up in the Animals in the Wild Challenge. Participated in the Reclaimed Wood Contest 2016. Participated in the Outdoor Structures Contest.",0
"Natural cavities are rare where I live. Old bricks are removed & replaced by concrete, aluminium & pvc, old trees are removed & replaced by exotic species & bamboo, old people are removed - also - & replaced by younger specimens, electronic devices, labradors & portable bbq's.. Like I said before, it's really hard being a cavebird these days. . This spring we added a lot of bird houses in our garden, but despite all those efforts we couldn't avoid civil wars between species. A couple of Starlings killed 6 young Great Tits to pirate the house they were in, for example, and Wrens are nesting in the balcony nests of Barn Swallows.. Pressure is on, and so to avoid these dramas, we decided to change to another level & drown the local real estate market.. More boxes, at minimum cost & effort.. Like always, the solution was in the beer.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Since the time we arrived in Northern France, I'm keeping all those beer kegs aside - to use them later, you know.. For what it's worth: I didn't empty them all on my own. I think.. Yes I used one to make a safety helmet, but that makes thus minus one from the pile of shame growing in my workshop.. Thanx to the birds, I finally found a decent idea to reduce the waste, ànd to continue the drinking.. 'Our birdz are in the need, you know' I said to my wife. 'I'll build them houzez, màààààààny houzez!'.. So, for this project you'll need such a steel beer keg. Or more than one.. Advantage: those kegs are leightweight, sealed and have a reasonable useful volume inside.. Depending on the species you want to favorise, you'll need to drill the right entrance hole.. Knowing that the edges of freshly cut beer keg steel are razorsharp, I decided to insert pvc covers.. So, use a clock drill to cut the hole in the side - diameter: same as the outside diameter of this pvc cover.. Btw, it's not the cover itself in which I was interested, but the ring - of course.. Remove the external hardware & drill a big hole in the top of the keg.. Diameter: as wide as the pvc cover you'll be using. . I choose 80mm covers, since it's just the biggest clock drill I have.. Like in every house building project, after the rough work it's time for some plumbry.. Take the entrance cover, cut a ring from a connection, insert the cover in the keg & glue the ring from the inside to the backside of the cover to seal that ring nice in place.. For what it's worth: the edges of the maintenance hole are razorsharp, also, so ask a child to glue the ring in place. Children have smaller hands than you. And they heal faster, also.. I had the chance having drilled a maintenance hole that was just a tiny bit smaller that the bigger pvc cover I wanted to use, and so the last could be just pushed in place.. No risk that it will run away from its own. Or that it will be pushed out by a bird. Even not a very strong bird.. The only way to remove it, in fact, is by an exploding bird.. Interesting suject.. Like every house, also this one needs to be isolated.. Steel is nice conductive material, you know, and to prevent thermal loss, thermal bridges, undercooled baby birds & condensation on the walls, I inserted a roll of cardboard in the keg & spent 15 minutes to poke it to the sides of the keg. Yep, thàt's why the top hole was made so big... Once in place, a nice layer of wood chips was brought in to prevent the cardboard from moving ànd to isolate the floor.. Since this operation closed the entrance again, I drilled it out, again, with the right clock drill & added some elmers glue to keep the hole more or less immobile. Dirty, but effective.. 5 or six layers of cardboard closed the roof and ready was the device.. I didn't need a waterproof cover for this one since it went straight into our barn, but if you want to use these devices outside a roof won't be a luxury. Imagination, it's all yours.. Place it high & place it dry. Avoid direct access to predators like cats - or stupid drunken sailors - and try to have a large fly-zone just in front of it. . The more bird houses you'll be adding, the more choice you'll give to those birds. Make big entrances & small ones. Small birds can use boxes with big entrances but small birds will be chased by big birds if big birds don't find what they need elsewhere. Birds logic, deadly effective.. Entrances needs to be directed opposite to the prevailing wind direction. It's not funny when rain chases inside and you need to grow at least two more weeks to be able to leave the cradle.. Let's drink for a better world my friends, the birds need our help!. Runner Up in the Animals in the Wild Challenge.",0
"This is a step by step instructable on how to make a birdhouse. . You will need: . Finishing nails . 3/8"" Plywood . Wire . Wide head screws . Tools: . Hammer . Saw . Measuring tape . Pen (Not really a tool!) . Screwdriver . Drill. 1 1/4"" or 1 1/8"" hole saw. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. There are 7 pieces to this birdhouse: the floor, the walls (4 pieces), And the roof (2 pieces).. Cut dimensions as written: . Floor (#1) 4"" x 4"" . Side Walls (#2 & 3) 4"" x 8"" . Roof Side Left (#6) 4 3/8"" X 6"". Roof Side Right (#7) 4 3/4"" X 6"". Front & Back (#4 & 5) Shown in next step.. The front and back of the birdhouse overlaps the sides, therefore making the front and back 4 3/4"" wide. Cut your plywood to 4 3/4"" x 10 3/8"". On one side of the plywood, Mark the middle of the board. (2 3/8"") . If you are using a miter saw, all you need is photos one and four. . If you are using a hand saw, after you have marked the middle of the board, measure 2 3/8"" down on each side. mark from the middle to these lines. (Photo 2) . These are perfect 45º angles. Next, cut the board 8"" from the bottom of where the roof would be, (At the bottom, where the eaves would be.) Cut two of these.. On piece number 4 or 5, make a mark 6"" from the bottom, and in the very middle. (Of course! Who wants an uneven hole?) Drill it with a 1 1/4"" or 1 1/8"" hole saw.. Nail side wall #2 onto floor #1. (Picture 1) You can see how it will stand. . Nail the front wall onto the side of pieces #1 & 2. If you want to do it like my instructions, have the side wall to the right.. Nail the back wall on (#4), the same way as the front.. Make a mark at 7 1/2"" (From the bottom) on the front and back walls, on the left side. this will mark where to put your hinges (Nails) on. Put your board in place, and clamp it on. Nail it on, and test to see how well it opens and closes. If your nails are not at the same height, your opening side will not open straight. . Next, at the bottom left of of the front, put a nail in about halfway in. Next, bend it until it almost touches your opening side. this will keep it closed. You can turn the nail to get the side open.. First, nail the #6- 4 3/8"" x 6"" roof board onto the left side. (It doesn't matter, but I wanted to say a side.). Nail the #7- 4 3/4"" x 6"" board onto the other side, overlapping the other one by 3/8"".. You don't have to hang your birdhouse, you can also screw it to a tree or a fence post.. Screw in one screw each on the front and back, right where the two roof boards meet. Cut 2' of wire and wrap it under each of the screws. Screw in the screws, and hang it! . Thanks for viewing this instructable! If you like it, please leave a comment, or vote for it if it's in a contest. Enjoy!. Runner Up in the Animals in the Wild Challenge. Participated in the Outdoor Structures Contest.",0
"Years ago, my husband brought home a stack of metal spools used to store MIG wire. He sewed wire cloth onto the spool in a somewhat rudimentary fashion, and called it a bird feeder. A raccoon demolished it, the spool was chunked into a pile, and that was the end of that. Fast forward a few years, and I found myself with a backyard that had become a bird oasis. It seemed like a good time to drag out the old feeder and give it an overhaul. The result is a large feeder that is very durable, can be painted, easily filled, will feed many birds at once, and will also last a very long time. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Gather the following materials for your feeder: 1 large metal spool (mine is a 12"" spool) These spools are typically used to hold MIG welding wire, but can also be used to hold other wire. Check with local welding supply stores. Any welder should be able to steer you toward a pile of these spools, free of charge. 1 roll of hardware cloth You will need enough cloth to cover the front, back, and circumference of the edge of the spool. A 10' x 3' roll will cover almost nine 12"" spools.1 roll of galvanized steel wire (I used 24 gauge, with a 10 pound work load)A short length of chain that can be shortened, used to hang the feederThe following tools are necessary, if not very helpful: Sheet metal scissors Felt-tip pen such as a SharpieDurable hand protection, such as leather glovesNeedle-nosed pliersWire cuttersA tool with a tiny hook on it, such as a small latch-hook or crochet hookOptional: Spray paint. Unroll the wire fabric on a flat surface. You may wish to use gloves at this time, to protect your hands from scratchescaused by the wire. Place the empty MIG spool on the wire, then trace around the outer edge in order to draw the size you will need to sew the fabric to the spool. Repeat, making two circles. Place the spool on its side, at a straight edge of the fabric. Using the Sharpie, mark the width that will be required. Holding the fabric against the spool, roll the spool and the wire in a completewheel rotation in order to determine the length. You can also simply use a tapemeasure. It all works, right? Be sure to leave a gap in the side length in order tofill the feeder. Keep in mind, the gap should be small, to avoid birds getting stuckinside the feeder. You might also consider closing the gap, then creating a hole that is large enough for a funnel tip to fit into, for filling. Once you have drawn the two circles, and one long rectangle, use the sheet metalscissors to cut out the shapes. . Place the spool on a flat work surface. Lay one of the wire mesh circles on top of it, and secure the circle to the spool with temporary ties. You may use small pieces of wire, trash / bread ties, etc. Align the side wire to the side of the spool, using temporary ties to secure it. You may wish to combine a tie to secure both pieces of wire in the same place. It is not necessary to make multiple ties, but do make certain the pieces will notmove around while you are stitching the edges. . Using a length of wire, secure it to the spool by twisting, or even wrapping it around the spool wire a few times. You may then begin stitching, just as if you were sewing clothing with a whip stitch. It is not necessary to place a stitch into every single 1/4"" space, but do sew the stitches close enough so bird food will not fall out. Pull the wire taut, using needle-nosed pliers, to save your fingers. I found it easier to not use gloves during the stitching process. You will not be using a needle to sew in the traditional sense, but rather will rely on the stiffness of the wire to act as the needle. It is difficult to guide the wire exactly where you want it to sew, which is where the hook tool will come in handy, to pull it through the 1/4"" squares. Don't use a piece of wire that is excessively long, as it will tangle, bend and get in the way. No more than a yard's length is easier to work with than a lengthy amount. Stitch through the top screen, go through the spool, then exit the outer mesh. Repeat this process all the way around the spool. If you encounter sharp bits of wire edge, you can crimp them down with a tool, or press them with a gloved hand. Don't worry about imperfections, as they can be hidden by spray paint. Also keep in mind, you should press or trim any sharp edges of the wire, to avoid harming our feathered friends. See the next step for additional stitching tips. . Image #1:Needle-nosed pliers will save your fingers, especially after all the stitching that will be necessary. Image #2:If you run out of wire, simply wrap a strand around the spool, or twist it onto the previous wire, and continue stitching. Image #3:Not all of the holes will be complete. No need to worry, simply stitch into the nearest hole that is secure. Image #4:These little sticky-outties are dangerous for both humans and birds. Be sure to either fold them down, and include them in the stitching, or snip them off, making certain to press the sharp edges down with a tool. Image #5:Occasionally, all that yanking on the wire, and a crimp now and then, will cause the wire to break. Simply wind the remainder onto the spool, add a new piece of wire, then continue. Image #6:There are several options to end a short piece of wire, including this one. Just run the remaining length along the spool, then stitch over the tail of the previous wire.. You're halfway finished at this point. Flip the spool over, place theremaining piece of wire on top, and begin stitching in the same mannerused for the other half. I find it is easiest to complete this project whenworking at waist level, especially in a brightly lit area. . Once you have completed the stitching process, be sure to crimp downany sharp edges. You may now add a way to hang the feeder. I just dug through an old junk drawer, and found a short length of chain. Using two pair of pliers, open alink on one end of the chain, then secure it to the wire of the spool, and closethe link. Select the length of chain you desire, open the end link, secure to thespool, and close the chain. You could also use string, rope, or other hanging material, though it would be bestto select something that is durable, and able to withstand the elements of nature. . Once your feeder is complete, and hanging, you may want to give it a good mist of spray paint. This will not only protect the feeder, but will reducethe sharpness of any wires you may have missed. Gotta protect those littlebirdy feet, you know. It is easiest to suspend the feeder while painting, so you can access all ofthe angles at one time. Be sure to let the paint dry thoroughly before adding bird food. . This particular MIG wire spool is rather large, and as a result, holdsa lot of bird food. If you have quite a bird population as we do, don't worry about the food mildewing, but if you only have a few visitors, tryto find a smaller spool, then you can hang many of them. . In our area, the Cardinal population is quite large, so we tend to fill thefeeders with black oil sunflower seeds, though there are other choices.Just be certain the seeds are not too small, such as Nyjer / Niger Thistle (Guizotia abyssinica) seed, or too large, such as striped sunflower. We have many other visitors to the feeders, including: CardinalRed-Wing BlackbirdHouse WrenSparrowTufted TitmouseOccasional BluejayOccasional Indigo BuntingChickadeeUninvited StarlingBe sure to hang a Thistle sock near your feeder, to attract the Purple and Golden Finch. .",0
"Using a spotting scope is great fun but you may want to record what you see. I have been digiscoping before with my DSLR camera. It is fun but requires a lot of logistics. When the camera changes focus the lens moves. This greatly complicates the mechanism as I had to build rails to keep the camera aligned with the telescope. I took apart a tripod and used the legs as my slides. The coupling to the scope was sewer fitting with hose clamps. Because of the weight and bulk it was not stable on a tripod. I sewed a sand bag that I placed on the rear deck of the canoe. Next I beached the canoe, laid on a pad in the hull and operated the camera. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. What I really have been lusting for is one of those giant lenses you see all the professionals use on their DSLR. The Nikon lens is $9,995.00 not a toy I will ever own. . Our modern cell phones take reasonable pictures. It seems a natural to marry the two together. This is not a new idea as there are adapters on the market to couple the two. The problem is they want my hard earned money for these and none of them allow you to use your waterproof case that I like to keep my iPhone in.. My friend suggested coupling a telescope and cell phone you could name it a, ""TELEPHONE."". Of course you will need a cell phone, telescope and good tripod. The adapter I crafted used some scrap wood, a hose clamp, a left over scrap of metal with a 1/4 X 20 bolt and knurled knob, scrap of PVC 2"" pipe, two screws and a spring cell phone holder. Optional gear is a protective case for the cell phone, ear buds, adapter cable, sport bag and closed cell foam for transportation. . The further the item being viewed the more camera movement matters. Using the volume switch on the ear buds works as a shutter release. Since the cell phone is in a waterproof case it is necessary to screw in a cable to attach the ear buds. . Like most projects this evolved as I used it. I needed to have the phone offset to the right and up to make the camera lens line up with the eye piece on the telescope. The pictures explain it better than a few thousand words. . Build an L bracket of wood screw on the metal strap, Attach the wood with a pipe strap to the scope. Mount the scrap metal (old flash bracket for an SlR) to the L bracket. Use the bolt to attach the cell phone clamp. This will depend on the shape of your camera, tripod, and cell phone.. I am totally impressed with how much fun this is. Indulge me as I show some images I took on the waterfront. You may have to look close to see the item when photographed with a normal lens.. The original bracket had to be adjusted such that the cell phone clamp did not push the volume button. I had not realized when held down the shutter takes a series of rapid pictures. This also prevented from using the ear bud's low volume as a shutter release.. The long distance in fog increases the fuzz of the image.. Keeping the tripod steady and using a time lapse will improve the image quality. Notice the island has seals hauled out on the beach. Zooming in with the telescope eye piece also reduces image quality. . To eliminate the vignetting you can zoom in with the phone. This does reduce the image quality as it does a digital zoom.. The second adaption was to clamp the phone tight to the eye piece. I carved a short section of 2"" PVC pipe with my band saw and a utility knife. I cut an arch and slit in the scrap of PVC pipe to make a custom clamp.. The great thing about the tripod telescope and cell phone is it is so easy to pack it flat. The quick disconnect was used on the scope and the bracket for the phone stays attached to the scope. The phone can be used while setup on the telescope. Even the front looking selfie camera can be used, since the clamps are out of the way. The entire package quickly fits in a sport bag with a shoulder strap. . You've got to build one of these. Keep me posted of your changes to this fun idea. . Even if you don't build one you can vote for this project. LOL. . Click here for the link.. This is my latest version. I used a monocular, bulldog clamp and a book end along with some plastic clips and some bolts. It is not as powerful a telescope but is much more portable. The book end protects the monocular from touching the bottom of my canoe when I lay it down while attached to the tripod. The wide end provides a rest that keeps it stable from turning over in a rocking boat. . I find this very portable I was able to use the monocular without the iphone. Then I put little pieces of foam to index the phone to the eyepiece. When in place I clip it on with the clamp. The hardest part was bending the book end at the perfect places. I used a metal nibbler to cut out so the buttons would be easy to push. . The normal view with the phone has the river bag in the foreground and the tall ship in the background.. The next shot is close up with the ship and the last one is a zoomed version of the Hawaiian Chieftain.. . Participated in the Flat Pack Contest.",0
Two incredibly easy DIYs to make using old tea cups! . **Check out the FULL TUTORIAL ABOVE**. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Tea Cup. Block of vegetable shortening. String. Small metal washer. Essential oil . Tea (optional). Scissors. Wooden stick (or pencil). Pot. Tie the end of a piece of string to your metal washer (this helps weigh the wick down). Melt down desired amount of vegetable shortening. Add essential oil (make this as strong or weak as you like) I added about 1 teaspoon. Open and add tea bag (optional) It adds a little extra sent. Pour melted contents into tea cup. Drop the wick in (the washer will bring it to the bottom). Wrap the remainder of the wick around a wood stick or pencil that can stretch across the top of the cup. Centre your wick and let it harden and cool . Trim wick once candle has set. Tea cup and saucer. Old necklace or chain. E6000 glue. Tape. Place a line of glue along the teacup. Glue it to the saucer with the handle facing up. Tape in place and let it dry overnight. Remove tape. String necklace/chain through the handle. Hang on tree or post outside and fill with bird seed.,0
"Well, as you can see I made a birdhouse this spring and if you like it, too, you're welcome to make one yourself :). You'll need:. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. At first you have to cut the Wood and Glass Parts. I attached the .svg-files, everything you'll need is in them.Red Lines: CutBlack Lines: Engrave. The next step is a little bit tricky. This will be the ""backdoor"" where you can open the birdhouse to clean it after the birds left. I used magnets here, because, well I had some magnets here and I liked the idea.. You'll have to drill some holes for the magnets in the two wood parts as you can see in the image.Be careful not to drill completely through the wood!. Afterwards you can glue the magnets in the holes. Be careful again to place the poles in the right direction!. So now it's time to glue everything together. I think it should be clear, which part belongs where. Also you can see it in the pictures :). When the glue is dry (2-3 days later) you should glaze the outside of your birdhouse with woodstain. I made 3 layers and waited 1 day inbetween each time to let it get dry.. Now it's ready. You can attach some hooks for hanging it up, otherwise you can attach a stick on the bottom to set it up in your garden.. Maybe I will upload some fotos of the glazed, finished birdhouse.. Have fun :). Participated in the First Time Author Contest 2016.",0
"I like getting creative with my birdhouses. It's a lot of fun watching a bird fly into something amusing. This time I made one that looks like a SawStop table saw. I call it the SawSquawk. Check out the video then follow this Instructable to make one yourself.. Click here to read my blog post on this project and download my cutting templates.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Cut a bottom that is 5"" square. Drill holes in the bottom for air flow and drainage (ew). . Cut two 7""x10"" boards for the front and back. Use the front side cutting template to cut the entry hole. I used a scroll saw, but a jigsaw or coping saw would work too. (I like how the blade tilt crank slot is the hole. LOL). Cut two sides that are 5.5""x10"". . Use glue, nails, and/or screws to put these together to make a 10"" tall box.. Cut a 9"" x 14"" board for the top. To make it look like a table saw, cut two shallow grooves that are about 3/8"" wide for the miter slots. They should be placed about 1/3 from each end of the board.. Paint the table top gray, then mask off the ""insert plate"" area using the template and paint it red. I use paper towels to cover the rest of the table top.. I cut two wooden brackets with mounting holes, then glued and nailed them to the sides of the box. Make sure they are flush with the top of the box. Center the the top and screw it on through the mounting brackets. Make sure your screws are short enough so they don't stick through the top.. This is the fun part...accessorizing your table saw birdhouse! Don't skimp on this part because it really makes the birdhouse look like a table saw. I provided templates for some of these parts, but you will just have to WING the others! ;) Get detailed and be patient!. Cut two cranks, paint them, and screw them on. I placed a nut between the crank and box, and left them a little loose so they can spin. (These can work as a perch for birds, even though perches are not actually recommended, since they help predators get into the birdhouse.). Cut the power button. I also cut a small block that I could use to attach the button. (If you look at a picture of a SawStop, you can see what I was trying to emulate.). Cut and paint the saw blade and riving knife. Glue them so they are centered on the red ""insert plate"".. Make a miter gauge and fence for the table top and paint them like the SawStop. I glued mine in place, but you could leave them loose. People who see my birdhouse always try to move them, so that's a fun option.. Note: I used wood glue to attach the parts. Normally it's not a good idea to use wood glue on painted surfaces, but I've found it works well on signs and things like this that will not be under stress or load.. I recommend painting the logos on if you will be placing the birdhouse outside. Paint pens might be a good way to do this. Another option would be to get vinyl or weather resistant stickers. I will be keeping this birdhouse indoors so I can display it at woodworking shows, so I simply printed the logos on paper and attached them with spray adhesive. (I may go back and paint the logos when I have time.). If you place your birdhouse outside, put it about 5' or 6' off the ground on a fence or tree so that you can see it out of a window. I put birdhouses in locations that I can see from my dinner table. Look at the birdhouse occasionally to see if there is any activity. If not, try moving it to a different spot.. With any luck, you will be grinning when you see a bird fly into your table saw birdhouse. Don't forget to clean it out after the birds leave the nest, so that new residents can move in..",0
"keep squirrels off of your Bird feeder.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. the single 4"" aluminum vent pipe was to skinny, the squirrels could still climb it.. solution, double them up! get two and snap them together, this gives about an 8"" diameter tube.. cut a circle out the diameter of the tube, then cut out the center for the bird feeder pole.pop rivet 4 small brackets to hold the tip to the tube.I added duct tape to the inside just as added insurance to keep the joints together.. get our create two to four ""L"" brackets and a stainless steel house clamp sized for your reader pole.clamp the brackets to the pole with the ss tube clamp at a height that the squirrels can't jump to.. slide the baffle over the pole and let it rest on the hold up brackets.add your feeder accessoriestip off with house. sit back and watch the birds eat and the squirrels be frustrated..",0
"What is a view-sight and why might you want one for your camera?. I invented the term ""view-sight"", so no wonder you never heard of one. It's that pointy thing on top of my camera in the photo. I made it because the camera I recently bought did not come with a view finder, only a LCD screen. This camera has a 30x optical zoom, and I planned to use it for bird photography. But most wildlife photographers prefer a viewfinder because it helps them focus on the subject. In addition, a LCD screen can be hard to see in bright sunlight. Let's just say I may have bought the wrong camera for bird photography, because I have been having a terrible time finding the bird on the LCD screen when using zoom. But the camera has great features otherwise, so I decided to see what I could do to remedy the situation.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. My goal was to design something that would help me quickly focus on a distant bird with the camera zoomed out at up to 30x. Also, it had to be simple and compact, because I chose this camera so I could carry it in my pocket, rather than hauling around a large DSLR camera and telephoto lenses. . Doing some research, I found there were magnifying lenses for the LCD screen, also electronic sighting devices, available for otherwise good small cameras without viewfinders. I wasn't too impressed with what I found, and besides, ""if you can make it, why buy it?"".. I began thinking about the simple gun sights used on rifles. They are fairly accurate without resorting to electronics or telescopic sights.. You can see the final product on the intro photo. A magnet holds the brass sighting device onto a small square of steel that is glued to the top of the camera. This way you can easily remove the sight whenever you want to.. Three components make up the view-sight, they are made from:. Brass strip, 1/4"" x 1/32"" thick.. 1/2"" rare earth magnet.. 3/4"" x 1/8"" thick steel bar.. Also glue and black paint. . Everything is available at your local hardware store. . The sight itself is made from a 2-1/2"" length of brass strip. I bent about 3/8"" of each end up, then used a triangular file to make a V notch on one upturned end and a point on the other. Brass cuts nicely.. The brass sight should fit snugly into a groove in the 3/4"" wide steel bar. First I cut off a 1"" long piece of the steel bar with a hack saw. Next came the only difficult part of the project, making a shallow 1/4"" wide groove into the small steel piece. Holding it in a vice, I marked the outline of the groove with a sharp knife. Then I used small files to cut the groove. Make sure the brass sight fits snugly into the groove. I painted the steel piece with flat black spray paint.. The steel piece will be glued to the top of the camera directly over the lens; but do not glue it just yet. You can see where I put it on my camera, it may be different on yours. Just be sure it is not covering or interfering with any of the controls. . Glue the magnet to the top of the brass sight, about in the middle. Shiny rare earth magnets are difficult to glue; I suggest lightly sanding the contact surfaces of both parts, then use epoxy. Glue these pieces first and let the glue harden before going to the next step.. Now you can glue the steel piece to the camera. . Use a silicone based adhesive like E6000. This is the last step; after the glue is applied but still not set, align the sight with the image in the LCD screen. Put a drop of adhesive on the bottom of the steel piece and set it, with brass sight and magnet attached, onto the camera. Then align the sight with a distant object; at the same time align the camera, in zoom mode, so that the object is in the center of the viewfinder. I did this by focusing upon a small light at about 30 ft. distance.. I'll be testing it out for a while before I consider it a success. . So far it has been a help, especially for finding birds in trees..",0
"Save the bird-skulls from serious smacks! Birds often mistake the reflection off our window glass for clear skies. Head-first collisions kill thousands of birds every year. Those of us who put out feeders may create an even more strike-prone situation, unless we provide birds with a visible barrier they know they can't fly through. I've seen a number of ways to alert birds to the presence of a window so that they don't fly into it, but most seem to be more visible than I'd like. Taping bird-netting over the exterior of the window provides them with a visible barrier, and me with an unobstructed view of the visitors to my feeder. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. You will need: . You'll be blocking the window from easy cleaning, and I'm not fond of having to take the treatment down and put it back up on a frequent basis. I use Rain-X to give it a stain-resistant coating. (Once upon a time, there was an even better product called ""Glass Wax,"" but I haven't been able to find it in many years.) It'll last through up to a year of rain without needing to be washed, because the rain beads off so well that it leaves no water-marks. Bird-poop can be washed off with a hose or a hard squirt with water from a spray-bottle; if it's dried on, you might be able to dislodge it by wetting it, allowing the water to soak in, and then blasting it with water. . Bird netting is usually used to protect fruiting bushes, vines, and trees from hungry birds. It's made of fine-filament plastic, with a mesh-size of between 1/2"" and 1"" (1 - 2.5 cm). Even the smallest package of netting is probably sufficient for a large patio door, but check your dimensions before purchase. . I find that I can't really see the netting from a distance, unless I specifically focus in on it. I have had only one bird-strike since I put the netting up, and it was a low-speed impact. ( Drunken bird? ) Other ways to help protect the birds is to make sure that the feeders are within three feet (one meter) of the glass--if birds do mistakenly fly at the glass, they won't have built up much speed before the impact. .",0
"During the first week of May each year all my classes do watercolor painting for Mother's Day. Sadly no one is in school this spring so I am teaching my Mother's Day Watercolor from my home to theirs.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Watercolor Paper. Watercolors. brushes. pencil. masking tape. cup for water. sponge. vase of flowers for inspiration (even a photo of a flower arrangement will work). Tape the paper to a flat surface. It is important to tape the paper and not remove the tape until the paper is completely dry. Watercolor paper stretches the it gets wet (you will see in later photos) It shrinks back to its flat shape as it dries. If you remove the tape when it is wet it will dry rippled instead of flat.. Next LIGHTLY draw a vase shape. . Using the largest brush you have, wet the entire back ground of the paper, trying hard to avoid getting any water in the vase shape. . Keep that space as dry as possible.. Using that same large brush, make a puddle of paint with the watercolors. You want it very light to represent the ""air"" around the vase and create your background. More colors can be added as you work on the painting, however, be aware of the colors you use. If too many colors are mixed on the paper they may begin to turn muddy. I stay away from Black and Brown for my ""air"" Also I try not to use too much green because I know I will be using green in my flower design. . If there are large puddles on the painting they can be blotted a bit with a damp, clean, sponge. . Because we left the vase shape was left white it represents clear glass . You can see the stems inside the vase. . Using a smaller brush, make a puddle in the green watercolor paint. Starting at the bottom of the vase paint a stem coming out the top. Paint as many stems as you like. . Paint the flowers either by looking at your reference, or just make up your own. This watercolor technique that I teach my students is very spontaneous . The colors will mix together on their own and create lovely transparent patterns. I ask that they don't labor too long over the painting because it will begin to get dark and muddy. Sometimes less is more!. It is hard to see from these photograph, but I want you to notice the paper is very wet now and rippled under the tape. It is very important to let the painting dry completely before removing the tape. I generally leave the paintings over night. . When your painting is completely dry remove the tape. I love the little white edge created by the masking tape. . Happy Mother's Day....This will surely be one to remember!. This is an entry in the Work From Home Speed Challenge.",0
"Make an interactive way to help students learn the functions of Scratch coding blocks.. You will be creating a push switch glossary that describes the functions of five Scratch blocks: hat, stack, boolean, reporter, and c-blocks. When some of the switches are pushed, they will play two different recording of the functions of that Scratch shape block. Other switches will only play one. Read on to find out why!. 5 - 1"" inch binder clips. 5 - large paper clips (2 in). scotch tape. 10 alligator clips. 1 Makey Makey. small cardboard rectangles (1 1/2 x 2 1/2 in). cardstock or paper. computer (to access Scratch editor). Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Print the Scratch block shape description sheet here. You may wish to print the sheet on cardstock to make it sturdy. You can use the shape block names (in the first row of the table) to label the switches.. You will be recording yourself reading the functions of each shape block in Scratch.. Go to the Scratch website here.. Go to the sounds tab. You will record yourself reading the functions for each shape block. You can name each recording ""hat1, hat2, stack1, stack2"" etc.. Name each recording to match the shape block.. Enter this code in Scratch.. You may test the code with the keys on your computer.. DISCLOSURE: I am a total Scratch newbie: I have never worked with lists before I started working on this project. This code is still a work in progress. I could only get one button (up arrow/hat block) to correctly say the two recordings. The stack button says the first recording correctly when the switch is first pressed, but then says both recordings on the second press. I am stuck on how to fix this. The rest of the buttons say only one recording each - as of right now.. I learned how to make these switches from Scrappy Circuits. On one cardboard rectangle, attach two binder clips and one paper clip to make a push switch. Here is a video showing how to make the switch. You will need to make five switches. Cut out the labels from the shape block sheet you printed. Tape a label to each switch (hat, stack, boolean, reporter, and c block.. Each switch will need two alligator clips. You will connect each switch to earth and the corresponding outputs on the Makey Makey. The binder clip that remains flat connects to earth. The binder clip with the bent up paper clip connects to the arrows or space bar outputs on the Makey Makey.. hat = up arrow. stack = right arrow. boolean = down arrow. reporter = left arrow. c block = space bar. Now, when the push switches are pressed, one switch is a BOSS (hat) because it works. The stack switch is trying its best, but can't keep up with hat yet. And the boolean, reporter, and c block switches don't know know any better. They are content (for now) to be one trick ponies..",0
"The Sociable Syllables Activity Pad was created as an Assistive Technology teaching tool for Hard of Hearing students. In my classroom experience and after conversations with Hard of Hearing Consultants, 3 tips came to mind in the creation of the Sociable Syllables Activity Pad to support these students. . 1. Vocabulary: Pre-teach curriculum vocabulary and concepts. In order to have better success, learning keywords ahead of the lesson can be essential for Hard of Hearing students.. 2. Use of Visuals: Visuals provide verification of what was heard and can also provide ongoing reference during class for Hard of Hearing students.. 3. Word Endings: Grammatical features that are impacted by hearing loss, while pronouncing words, can include omitting certain word endings: . a) /s/ - which impacts plurals, possessives and noun-verb agreement . b) -ed - which impacts production of past tense . c) -ing - which impacts production of progressive tense. For this project, my goal is for Hard of Hearing students to practice saying the words, syllable by syllable, while properly pronouncing the word from beginning to end. This Assistive Technology teaching tool could definitely extend beyond Hard of Hearing students as others may benefit from its use dependant on their learning needs and styles.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. 1 - File Folder. 2 - Cardboard . 3 - Packing Foam Puffs . 4 - Tinfoil or Copper Tape . 5 - Printed Curriculum Vocabulary Words . 6 - Printed Images to match Vocabulary Words. 7 - Printed Title Cover and How To Play Instructions . 8 - Elastics (optional) . 9 - Adhesive (glue stick/tape/glue gun). 10 - Makey Makey Kit . 1. Cut out the curriculum printed images.. 2. Glue images onto cardboard pieces.. 3. Cut matching cardboard pieces that will be assembled to the back of the cardboard with the curriculum image.. 4. Cut and glue tin foil pieces to the backs of the curriculum images and the secondary cardboard pieces.. 5. Cut packing foam puffs in half lengthwise.. 6. Glue gun each half of the foam puff on the tin foiled secondary cardboard piece. . 7. Glue gun the tops of the foam puffs and quickly adhere the curriculum image cardboard piece.. 8. Repeat the steps until all curriculum printed images are assembled. . 9. Option to assemble the cardboard pieces using elastics.. 1. Glue the Title Cover on the front of the file folder.. 2. Option to add the Unit of Study and glue it on the cover.. 3. Open the file folder and glue the How To Play instructions on the left side of folder.. 4. Position and glue the 4 curricular image pressure switches and matching vocabulary words on the right side of folder. . 1. Using copper tape (or tin foil), adhere a path from image to image to make a full circuit, ensuring that the tape connects with the bottoms of each of the pressure switches. . 2. Attach one end of an alligator clip to Earth on the Makey Makey and the other end to the top left image. The clip must be on the bottom piece of the pressure switch.. 3. Attach another alligator clip to the top of the left image. The clip must be on the upper piece of the pressure switch. Choose a command on the Makey Makey to attach the end of the alligator clip. For my example, I used the up/down/left/right commands.. 4. Repeat attaching an alligator clip to each of the remaining 3 images with the clip being on the upper piece of each of the pressure switches. Choose commands on the Makey Makey to attach the end of the alligator clips.. 5. Ensure the red cord is plugged into Makey Makey and into the computer.. 1. Login to Scratch or create a new account.. 2. Click on Create to code a new Scratch script. . 3. The variables used were Events and Sound.. 4. I recorded my voice to say the word and how many syllables the word had.. 5. I then recorded each syllable and allowed for a 2 second wait in between syllable.. 6. Finally, I recorded the full word. . 6. As students press on each of the images, they would hear me talk, and repeat what they hear each time to reinforce words they would come across in the unit. The visuals on the Sociable Syllables Activity Pad would help them recall words and help them with their word endings as they have to pronounce words correctly from beginning to end.. Click here for the project page on Scratch. . . This is an entry in the First Time Author Contest.",0
"Hello Makers! . I'm glad to share with you this wood storage cart made for our educational MakerSpace! It's common to have a lot of wood scraps so it's very important to have an organized workshop for security matters, so I hope you find this project useful. . Note: I see a lot of projects where people use circular saw machines or else, but we don't have a lot of tools so my design is easy-to-assembly. . -----------------. Hola Makers! . Encantada de compartir este carrito organizador de madera para nuestro MakerSpace educativo! Es muy común tener muchos sobrantes de madera y la seguridad es primero por lo que es importante mantener el taller organizado, espero les guste el proyecto. . Nota: Muchos proyectos que encontré usan sierra circular o máquinas complejas que nosotros no tenemos, por lo que me enfoqué en el diseño de un armado simple. . Materiales:. 4 llantas (tamaño a su gusto). 1 bolsa de pijas para madera de #8x1"". Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. I got inspired by ""Tamara's Scrap Wood Storage Cart"" found on youtube but I didn't have enough budget or machines to do it similar, so I recommend to make your own design. I used Fusion360 to model the idea, I only wanted to use 2 plywood boards with the 3D design I was able to analyze how much material will be used or how It will be assembled.. I recommend you to first sketch or model if you can the idea depending on materials or budget you may have. . Or you can download the PDF for the plans! . ----- . Me inspiré en el proyecto de Tamara encontrado en youtube, pero no tenía tanto presupuesto, materiales ni máquinas para hacerlo tal cual, por eso elegí primero modelar en 3D mi diseño para calcular la mejor distribución de piezas, el armado y aprovechamiento de materiales ya que sólo quería utilizar uno o dos paneles de triplay. . Yo recomiendo que primero hagan su diseño ya sea en boceto o 3D dependiendo de su presupuesto o materiales. O pueden descargar el PDF con el plano.. My local wood store offers the wood cutting service, so I asked them for less cuts than what I designed first (You can see the actual cuts in PDF attached file) because I only wanted to use 2 plywood boards and use a piece of it for another wood project. . You can either call this stingy or clever for using less material. (This project was low budget). ------. La maderería local ofrece el servicio de corte de la madera, por lo que modifiqué el diseño para menos cortes y sólo comprar 2 tablones completos además de poder usar el sobrante para otro proyecto. . Pueden descargar el PDF con la imagen de cortes. Llámenlo ser tacaño o astuto por usar menos material pero recuerden que este proyecto es de bajo presupuesto y poco tiempo de armado. . It took me 1hour to build this wood cart (time-lapse video), think first which pieces will be together to make it less complicated, specially if you're by your own. . Assembly tips: If you can always have 2 drills is better: one with the drill a bit thinner than the wooden stem, the second one with the cross tip to screw the stem, this is very practical and effective.. -----------. Me tomó 2 horas armar el carro de madera, piensen primero cuáles son las mejores piezas para armar primero especialmente si lo arman solos. . Truco de ensamble: Si pueden tener siempre 2 taladros: 1 con la broca más delgada que la pija para guiar, el segundo con la punta de cruz para atornillar las pijas es muy práctico y efectivo. .",0
"Teachers teach ALL students. Sometimes our learning needs to look different depending on the student. Below is an example of an easy lesson you can create to make sure all of your students are working on essential skills.. This project would work well for Adapted Learning students as well as Visually Impaired students.. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Using the shape PDF I cut out shapes and wrapped them in HVAC tape. You can also use tin foil. You can use however many shapes you want for this project. I chose to use all 9 shapes on the PDF.. For this step you will want to apply a conducting piece of HVAC tape or tin foil to the board where your shape will connect to. I just cut out circles for this step. Next, I made a pressure switch out of each shape. I cut out pieces of foam to raise the shape above the conducting circle that is attached to the board. I used a hot glue gun to make sure all the pieces would stay connected.. Now I cut a hole in the board where each wire can poke up next to the shape. I ran alligator clips to all shapes and connected them. I also ran copper tape from each shape to the bottom of the board to make the ground connection. On the back side of the board I taped down the wires and labeled what action went to what clip.. Once my board was set up, I created a simple code that allowed each command to say a different shape. Since I had 9 shapes, I needed 9 keyboard commands.. Here is the link to the scratch program.. The last step was to connect all the alligator clips to the Makey Makey and the board. I also created a QR code so that students can scan the code and head straight to the Scratch Program. . I used an iPad to play the Shape Board, but a computer will also work.. Further Ideas:. After creating this activity, I plan to make a color board and an alphabet board so that kids can practice spelling their names!. This is an entry in the First Time Author Contest.",0
"For this project, students will make a scene from a novel or a story and then use the Makey Makey and Scratch to tell what is going on in the scene. This is a great way to help students visualize while integrating coding in! . -A novel or a book with a scene to create. -Play-doh. -A Makey Makey. -Computer that can access Scratch. -Paper and pencil . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Have students read a book or a chapter from a novel and draw a sketch of what they are visualizing. In addition, have then write why they included each part in the sketch. Next, give students Play-doh and ask them to recreate the scene. Also ask them to write a 3-5 sentence summary about what they created. They should be prepared to say something about each component of the scene they created. . Students will go to scratch.mit.edu and hit start creating. . Students will do a recording for each part that they included in their scene.. Start with adding a ""when space key pressed"" code block which can be found under events. . Then go to sound and add a ""play sound until done"" code block. . Click on the pink ""Play Sound Meow until done"" code block and from the drop down menu select ""record"". . Pick one component of the Play-doh scene to talk about.. Students will hit record button and talk about one of the what they sculpted. For example, they might say something like ""In this chapter, the main setting was a river so that is why I sculpted a river. During the chapter, Serafina hid in the bushes near the river."" . After the recording is finished hit save. . You can also change the name of the recording to river for example if you want. After the recording is finished, go back to the code and select the name that you have given it. . Drag over another event ""When space key pressed"" block and add a play sound code. From the drop down menu, hit record and record yourself talking about another part of the scene that you made out of Play-doh. My scene has three parts so I did three separate recordings. . During this step you want to plug the Makey Makey into your computer. . For each event of your code, make sure you have different keys. . For example, my code used the space bar, the up arrow, and the down arrow. . Here is a link with the code: https://scratch.mit.edu/projects/389932699/editor. Attach one of the alligator clips in the space slot and then attach the other end of the clip to the Play-doh creation that fits with that key. . Attach the rest of the alligator clips to the corresponding Play-doh creations and then plug them into the correct Makey Makey slots that fit with your code. See the video for more specific guidance. . In order for the Makey Makey to work, it needs a complete circuit. Make a ball of Play-doh and stick an alligator clip inside of it and attach the other end of the alligator clip to Earth. . Make sure that the different Play-doh parts do not touch. . Then put one finger on the Earth ball of Play-doh and another one on a part of the scene. . When a part is touched, then the recording in Scratch will play. . See the video for a demo of how it works! .",0
"This guide will share with you how to create a hands-free voting booth using the Makey Makey and Scratch. This project allows voters to step on a pad on the floor to cast their vote for their favorite book character. It is based on two Makey Makey projects: Ultimate Stomping Pad with Makey Makey and Make Your Own Exit Ticket or Data Tracker. By completing this project you will learn how to create a pressure sensor for the Makey Makey and create a script in Scratch to tally votes.. The inspiration for this project came from the desire to provide some type of self directed program for children during a library summer reading program. The stomp pad element will allow users to participate in a hands-free manner and to prevent the spread of disease via high contact items.. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. This project will require the creation of a stomp pad for each voting selection. Makey Makey has created an excellent Instructable to show you how to create a stomp pad.. The stomp pad is a pressure switch for the Makey Makey that is constructed with cardboard, aluminum foil, copper tape, wire, duct tape, and rubber bands. When the stomp pad is pressed it will complete an electric circuit when paired with the Makey Makey. The Makey Makey, in turn, will control your Scratch program. With each press on the stomp pad a vote will be logged in the Scratch program.. To create your stomp pad you will need to cut two cardboard pieces into matching rectangles. Pictured stomp pads are roughly 4x3 inches. You will then need to cover each of these cardboard pieces with aluminum foil. Be sure to leave some extra foil at the end to fold over your cardboard edge. Glue aluminum foil to cardboard. (Picture 2). Next, you will secure two of the white connecting wires found in your Makey Makey kit to your stomp pad. Lay your cardboard pieces side by side as if they were a book laying open. Using clear tape, secure your wires to your cardboard squares near the center of the aluminum foil to maximize the connection in the circuit. (Picture 3). Now, you will reinforce the electric connections with your wires. Cut several small pieces of your copper tape. Use the copper tape to connect the exposed part of the wire to your aluminum foil. Cover this connection and the edge of your cardboard with duct tape. (Pictures 3 & 4). It is time to connect your cardboard pieces together. Line your cardboard up side by side and place duct tape over the seam. (Picture 5). Close your cardboard ""book"" and then cover the outside seam (or spine) with duct tape as well. (Picture 6).. To ensure that your circuit is not completed until someone presses on it you will now add an insulator. Add 5 rubber bands to your stomp pad as pictured (Picture 7).. You have now created a stomp pad! You will need one stomp pad per voting selection. In this example, we are allowing students to choose from four different book characters. (Picture 1).. It is time to connect your stomp pad to your Makey Makey. There are two wires coming from your stomp pad. One wire will be connected to your Earth and the other will be connected to a key press (such as an arrow). . Let's code!. Now we're going to code our voting booth using Scratch. Scratch is a free, block based coding program available from MIT. We're going to code a program to keep score of votes and use the Makey Makey as the controller for this program. The Scratch program that we will create will include the creation of variables and a score keeping mechanism. To create this program you will need to have the following Scratch skills: how to change and add sprites, and how to change your background.. To begin, you will change our background to something fun. We chose a space theme. We have also added text to our background via the background costume. You will then add the sprites that you would like voters to choose from when they vote. We have added 4 sprites. (Picture 1). You will now need to create a variable to represent each of your voting options. From the block choices select variable (these are orange blocks). Your options for variable blocks will now appear. Select ""make variable."" (Picture 2). Now name your variable (Picture 3). Create a variable for each voting selection. Our example has a variable for caterpillar, elephant, cat, and dog. (Picture 4).. A variable is a new item of your own creation in your code!. You will now create a code for each one of your sprites using these variables. (Pictures 5-8). Each sprite will contain three coding sections. The first section will set your variables score to 0. The second section will tell your variable's score to change by 1 when the appropriate key is pressed. This part will be controlled by your Makey Makey. The third coding section will show the final score for each variable.. Section 1: Set your score to 0. Section 2: Change score by 1. Section 3: Final Score. Pictures 5-8 outline the code for each sprite. We have used the same code for all the sprites with a few alterations. The variable used for each sprite should be the one that represents it. For the elephant sprite we used the elephant variable. Each sprite's counter will respond to an individual key press. For our example we used the arrow keys and each sprite responds to one arrow (up, down, left, or right). . It's time to put it all together! In order to create the hands-free voting station you will now connect your stomp pads to your Scratch program using the Makey Makey. . Your Makey Makey will be used to control the keys that you have selected in your Scratch program. In our example we are using the arrows (up, down, left, right). Each sprite in your Scratch program has a point counter that will respond to one of these arrows. You will now need to connect your stomp pads to each one of these keys on your Makey Makey.(Pictures 1).. Your stomp pads have two wires coming out of them: one that is Earth and one that will connect to your key. Using your alligator clips connect these two wires to the Makey Makey. Clip the alligator clips to the wires on your stomp pad. (Picture 2). Clip the other end of the Earth cable to the Earth bar. Then clip the other end of your other cable to one of the arrows (or your selected key). (Picture 3). Repeat for all stomp pads and remaining keys. Make sure to mark your stomp pads in some way to make sure they connect to the matching key press. We glued a picture of the character we wanted represented on each stomp pad (Picture 4).. Once you have connected all of your stomp pads to your Makey Makey you can plug your Makey Makey into your computer with the USB cable. This will power it on. If you step on your stomp pads you should see that the light on the Makey Makey comes on for each key press. It's working! Once you press the space bar your final vote count will appear. Who won the vote?. Place this project on a table and allow your students to vote for their favorite book character. Then reveal the winner!.",0
"This 3D printed switch will allow the user to turn a Makey Makey into a ""finger slide"" for a ""click"" in gaming or could be right/left arrows to scroll through presentations. The addition of right and left terminal mounts for the ground wire makes it flexible to meet the hand dominance needs of the user.. What you will need:. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. 1. In order for the screw to make clean contact with the paper clips, bend the smaller, center part of the paper clips about 90 degrees.. . Be sure to rest your thumb on the ground (Earth) clip to complete your circuit.. This is an entry in the First Time Author Contest.",0
"Chess is a game that is a ton of fun and can be played by people of all ages! No matter what age you are, it’s always a good time to learn to play, because of the many benefits to playing. . In this guide, you will learn how to create a talking chess game. Your project will be connected to a Makey Makey to allow it to be interactive for players to use to remind them which Chess piece can perform what actions.. Makey Makey . Chess Game . Printer . Copper Tape (can substitute aluminum foil, or pencil *6b pencil works best) . Aluminum foil . Tape . Computer . Programs: Scratch. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. 2. Click on Create to code a new Scratch script.. Click here to visit the code at Scratch.com. Print out the Chess sheet. Click here to print. Add a strip of copper tape leading to each of the six pieces used in a Chess game. If you don't have copper tape, you can use aluminum foil or a 6b pencil. . Makey Makey works when you complete a circuit, so using a foil bracelet is one way you can do this. . Tear off a 6-8"" long sheet of aluminum foil. Fold it in approximately one inch folds. Wrap it around your wrist and then tape it closed. It should be close to your skin so that it’s comfortable, but somewhat tight. An alligator clip should be able to fit between the foil and your skin, but needs to touch your skin.. Plug in the Makey Makey USB to your computer. Connect six alligator clips to the copper tape on the paper (one to each piece) . Connect the other end of each clip to the matching input on the Makey Makey Note: You can decide which color alligator clip corresponds to which key. . Connect one alligator clip to Earth, and the other end to your foil bracelet. . Play Chess and run Scratch as needed..",0
"Our Music students have to complete songs on the recorder to earn belts (pieces of colored yarn) until they achieve Black Belt status. Sometimes they have trouble with the finger placements and ""hearing"" the song come to life. . Materials: . cardboard . masking tape. Makey Makey with USB cable. computer with https://apps.makeymakey.com/piano/ . aluminum foil . alligator clips . recorder . recorder image on paper. Hot Cross Buns song from: https://apps.makeymakey.com/piano/ . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Place foil strips by taping the aluminum foil to the back of cardboard. Place alligator clips on the right side of the cardboard while lining the left side of the cardboard to the holes on the paper recorder.. Place the other end of the alligator clips on the Makey Makey. The hole closest to the person is hole 1 match up with right arrow on Makey Makey. Hole 2 matches up with the up arrow on Makey Makey. Hole 3 matches up with the left arrow on Makey Makey. Hole 4 will be for ground wire and labeled Earth on photos.. The paper recorder is matched up with the cardboard for holes 1,2,3 and ground wire aka Earth. The real life recorder is laying next to the paper recorder. The cardboard foil is connected to the Makey Makey. The Makey Makey is connected to the computer by USB and the https://apps.makeymakey.com/piano/ is pulled up.. Hot Cross Buns has the arrows and holes to touch.. . Playing Hot Cross Buns on the Makey Makey using the holes the students would use on the recorder.. 1-2-3, 1-2-3. 3-3-3-3, 2-2-2-2, 1-2-3. while holding/touching the ground/Earh spot on the cardboard.. I am playing Hot Cross Buns on the Makey Makey while my son plays it on the recorder..",0
"What is a barge? . A barge is a type of flat-bottomed boat that is used to transport goods on rivers and canals. First barges were towed by horses who led the boat down rivers by pulling them. Now they are self-propelled and run on their own engines making it so they can carry much more weight in less time. . How much can one barge hold? . An average American barge can hold 1,500 tons or 3,000,000 pounds of weight. That is like having over 230 full grown elephants on one barge! . In this instructable you will be making a small cork barge and seeing how strong and how much weight your creation can hold. . Why do corks float?. Floating or sinking of an object does not depend on its weight, it depends upon its density. Things denser than water sink in water whereas things having less mass than water float on it.. Cork – Several corks long round ones work best. Those with the mushroom head could be used, but you will need to flip them opposite each other to create a strong structure.. Hot glue gun – Any type will work just fun be sure to have parental supervision. You cannot use any water soluble glue like Elmer's glue because it will melt away when put in water.. Testing supplies:. Large bowl or sink – A large bowl is a great option so you do not need to fill it will as much water. . Water – Enough to fill your bowl or sink well enough to place your barge in without touching the bottom or the edges. . Weights – You will want to pick small items that can easily stack, things that have different heaviness, and items that are water resistant.. *Optional . Small scale – A kitchen scale or small mailing scale. This is used if you want to know exactly how much weight your barge can hold.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Start by seeing how many used corks you have around the house. Be sure to ask your adult if there are any you can use, and don't remove any from bottles yourself.. Lay them out trying to make a large flat surface. You will need to move them around and see how large you want to go on your first try. There are no wrong ideas here so be sure to have fun.. With your glue gun, glue together all the corks keeping it flat on the table while you do it. This will help keep them as level as possible so you have a good base to stack your items on top.. Leave plenty of time for the hot glue to cool before you try moving it. Patience is key for this step!. For those using mushroom top corks you will want to lay them opposite tops to bottoms so that they make a straight line not a semi-circle.. In this last step you will want an area that is okay if you get water around your station. Great places to do this are your back or front porch, in your shower or tub, in the kitchen or bathroom sink, etc. . Have all of your plastic waterproof toys ready to slowly add to your barge one by one.. Think of it as reverse Jenga and try to get as many items on as you can. Weight will play a big part on how long your barge can stay afloat, but balancing the items from middle outwards will allow you to get the most on at at time.. At some point your barge will sink with the weight of your items though. When that happens stop adding new items and then remove those that sunk. Count how many you were able to get on and keep trying several times placing them on different spots and in different orders. . For those who want to know exactly how much weight their barge can hold use a kitchen or small postal scale to weigh all of the toys that sunk into the water.. Once you’ve gotten the hang of creating your barge try making it even larger in your next model.Does adding sides help or make it sink faster? Does making a perfectly flat surface on top of the cork help or make it heavier? . See what the limits of your cork are and your ability to balance the items. . Keep a running tally with those in your household to see who can get the most on. The person who gets the most weight on the barge before it sinks wins!. For more information about Science City, visit ScienceCity.com or follow us on Facebook @ScienceCityKC. Remember, to tag us or hashtag #ScienceCityKC or @The_Maker_Studio on Instagram..",0
This is how to make a money saving machine in tinkercad with electric motors. When you feed money in the machine the first motor grabs the money and then two rollers grab the money and feed it into a container for saving the money. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. click edit grid in tinkercad and make grid 600mmx600mm. Take a box out of basic shapes in tinkercad and scale it to 400mm long 120mm wide and 20mm tall.. Take a box out of basic shapes and scale it to 53mm tall 49mm wide and 120mm long we will be calling it box #1.. Take a box out of basic shapes and scale it to 103mm tall 35mm wide and 98mm long we will be calling it box #2 and make it into a hole.. Select box #1 and box #2 then align them in the middle. . . Then group box #1 and #2.. Then turn 90 degrees we will be calling this piece mechanism box.. Take a cylinder from basic shapes and scale it 115mm tall and diameter 20mm we will be calling it cylinder #1.. Take a cylinder from basic shapes and scale it to 151mm tall and diameter 5.77 we will be calling cylinder #2.. align cylinder #1 and cylinder #2 in the middle.. Move cylinder #1 up 10mm.. Group cylinder #1 and cylinder #2 we will be calling this piece roller. . Turn roller 90 degrees.. Align roller in the middle of the mechanism box.. Move roller up 25mm.. Duplicate roller then move it down 25mm.. Get a useful gear from all shapes on page 3 in tinkercad.. Turn gear 90 degrees.. Align gear with roller in the middle.. Move gear until it is 1mm from the mechanism box.. Duplicate gear then move it up 25mm and group.. Take a cylinder out of basic shapes and scale it to 18mm tall and diameter 34mm.. Take a cylinder and scale it to 44mm tall and 7mm diameter.. Select both motor cylinder #1 and motor cylinder #2 and align them in the middle and group we will be calling this piece motor.. Turn motor 90 degrees.. Align motor and mechanism box in the middle.. Move motor up 63mm.. Align motor and mechanism box then ungroup mechanism box.. Move motor to the right 60mm. Click the gear below the motor and duplicate it then move it up 28mm then group.. Get a motor from components in tinkercad.. Turn motor 90 degrees.. Turn motor 120.5 degrees set aside.. Get a box from basic shapes and scale it to 20mm tall 20mm wide and 5mm wide. Move motor mount up 50mm.. Align motor mount with mechanism box in this way move it to the right 30mm then group.. Align motor in this way then move motor to the right 15mm and move it up 15mm and group.. Align mechanism box with main box in like this.. Move mechanism box up 15mm.. Move mechanism box backwards 60mm and group.. Get a box out of basic shapes and scale it to 76mm long 10mm wide and 3mm tall we will be calling this piece money grabber.. Turn money grabber 45 degrees.. Align money grabber and mechanism box like this.. Move money grabber up 35mm.. Move money grabber forward 28mm.. Move money grabber to the left 28mm and group.. Get a box out of basic shapes and scale it to 20mm tall 10mm wide and 120mm long.. Turn money ramp -45 degrees.. Align money ramp with mechanism box like this.. Move money money ramp up 14mm and backwards 57mm and group with mechanism box. Get a box and scale it to 120mm wide 278mm long75mm tall and set it aside we will be calling this piece money box.. Get box and scale it to 65mm tall 260mm long and 120mm wide then make it into a hole then move it 6mm above the work plane.. Align money box hole and and money box in the middle then move money box hole forwards 10mm and group money box hole and money box.. Align money box and mechanism box like this then group.. Get a box and scale it to 54mm wide 65mm long and 55mm tall then move piece down 10mm then align it like this and group.. Get a box and scale it to 38mm tall 4mm wide and 73mm tall this we will call this piece money guide next align it like this then move it to the right 20mm then duplicate money guide and bring it over to the other side and group.. congratulations you have completed your money saving machine. . This is an entry in the First Time Author Contest.,0
"This easy project is great for anyone looking for a safe way to prop up your phone.. In the world of remote teaching, educators are having to record video lessons using our phones. This 3D project will teach you how to design and print a cell phone holder to help you record those lessons without having to ask a family member to hold your phone, or to precariously balance your phone while you teach to your students.. . Tinkercad - for making your own design. Or you can duplicate and edit mine.. Ruler. 3D printer and filament . Phone. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Before we open Tinkercad you need to measure your phone and decide what kinds of angles you need your phone to be positioned in.. For my phone holder I wanted a variety of different angles to capture the variety of lesson I'd be filming. You want at least a 45 degree angle for filming down at a surface and a 90 degree angle so you can do a straight on view. . Here is a good right triangle calculator so you can figure out side lengths for a desired angle: https://www.calculator.net/right-triangle-calcula.... Before you move on - measure the width of your phone. It is important to know how wide you need to separate the wedges in Tinkercad. If the spacing is wrong, you either will not be able to fit your phone into the holder, or your phone will slouch and you will not get the angle you were looking for.. My phone with its protective case was 12mm. We don't want that cellphone toppling over in the middle of filming. Starting with a sold base is important. . I'm sure there is some mathematical way to calculate the area and weight of filament to counterbalance the weight of the phone...I used guess and check, and lucked out. You want a large heavy base to counterbalance your phone. If your base is too light, it will tip over and your phone will come crashing down. . My base is 100mm by 100mm with a height of 5mm. To save you all some time, I made a youtube tutorial to watch. This is far superior to reading my written directions.. To make a 45 degree wedge:. Using the Basic Shapes menu -> select the Wedge. Adjust the length to 30mm and the height to 30 mm. To save filament I cut my wedge into multiple triangles rather than one large wedge. If you want the segment it, adjust the width to 5mm. Then raise the wedge up 5mm so it sits on top of the base flush with the corner. Move the wedge in 10mm from the edge. Duplicate the wedge and move the copy 20mm (so there is a 15mm gap). Repeat until you have 5 equal wedges.. Thats it! . Just repeat this process with the rest of the angles you want. If you are having trouble, I recommend watching the youtube tutorial.. After you are done building it in Tinkercad, export it and print it.. For my prints, I use my school's XYZ DaVinci 1.0 AIO with PLA filament. Best of luck! . This is an entry in the Work From Home Speed Challenge.",0
"I am a K-5 STEAM Lab teacher who sees 3-6 classes each day. When students come to my lab I like to meet them at the door and welcome them to class and then again at the end of class say goodbye to each student. That personal greeting is part of building relationships with each student and that is very important to me. My problem is that the short transition time between classes means I am often cleaning up and prepping for my next class as the students leave. I created the Goobye Bell so each person gets a personal message from me as they leave class.. 8"" X 10"" cardstock (your color choice). Pencil. Markers. Aluminum foil. Copper tape (optional). 2""-3"" circle tracer. Glue stick. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Draw or trace a large hand on the 8"" X 10"" cardstock. . Color the hand in as you like with markers. Trace a 2'-3' circle on the aluminum foil. The size will depend on the the size of the hand you drew in step one. You want the foil circle to easily fit inside the hand. Cut out the foil circle.. Cut the foil circle in half and trim a small strip (approx. 1/8""-1/4"") from the straight side of each half circle. Glue the two half circles to the middle of the hand on the cardstock. The circles should be 1/4""-1/2"" apart depending on the size of the hand (mine are 3/8"" apart) The two pieces must not touch.. NOTE - If you do not have copper tape use 1/4""-1/2"" strips of foil). Cut the tape or foil strip long enough to reach from the middle of the left half of the foil circle to the bottom of the page and fold over the back of the cardstock about 1"". Repeat with another strip of copper tape or foil from the center of the right half of the foil circle to the bottom of the cardstock and 1"" up the back.. ** If using copper tape that is not conductive on both sides fold over about 1"" of the tape and stick it to itself before attaching to foil circle and cardstock. You want to be sure the conductive side of the tape is touching the foil circle.. Record 4-8 separate audio goodbye greetings in Scratch (scratch.mit.edu) Give each recording a distinct name so you can identify it when writing the code.. Create your code. Here is my code to get you started. Goodbye Bell. I used 8 different greetings to give more variety. When I tested with only 4 greetings I found the program repeated the same greeting multiple times. More greetings limited that happening. The program could also be written with only one greeting.. Connect one alligator clip from the Space port on the Makey Makey board to one of the copper (or foil) strips at the bottom of the cardstock. Connect the other alligator clip from the earth bar to the other copper (or foil) strip at the bottom of the cardstock. Connect the Makey Makey to the computer. . . This is an entry in the First Time Author Contest.",0
"I am an ART teacher /teaching from home. I spend my days creating activities for my students and delivering them on line so they can create at home. I like to offer projects with materials that they hopefully have on hand, unlike when we are in my ART room at school. This is a fun and easy printmaking activity that can be done from home because you do not need a press. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. The supplies are very basic as long as you have a cupcake tin in the kitchen!. Paint *I am using my grandsons paint set. (www.kidsmademodern.com) they are brightly colored, water based paints, similar to poster paint or tempera. any paint you have will work including acrylic or even oil paint. . brush. cup for water,. thin sharpie. Paper. Begin by painting the underside of the clean muffin tin. Use a lot of different colors.. When all the surfaces have been painted carefully lay the paper on top of the tin and gently rub each area. . when it is lifted, the paint will be offset onto the paper. . You can do a second print, or ghost print with the remaining colors. . I used my ghost print to make my Colorful Dot-to-Dots drawing.. Using a sharpie (or any drawing tool you are comfortable with) create decorative lines to connect your dots. . On another print I made X marks on each surface before I printed it. When I made my connecting lines I arranged them into more of an X pattern.. You can also use the other end of the paintbrush to make marks in the paint before you print it. . Have fun. This is an entry in the Work From Home Speed Challenge.",0
"Giving the circumstances that the world is going through right now, I wanted to join the people on the 3D printing community that are helping with their projects. . This project isn't much but I thought of sharing it anyway. joining the #stayhome trend to show the importance of self quarantine to help decrease and slow down the spread of the coronavirus.. this is a desk-top item that shows the words ""Stay"", ""Home"" respectively depending on the angle it is seen from.. I designed this model using Fusion 360 and below are the steps to create your own or use this method to create other text or anamorphic art.. It can be 3D printed on any settings with some support.. Post processing is optional.. 3D printer (can use online printing servies). Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. In Fusion 360, I used the ""Text"" tool from ""Sketch"" menu and wrote the word ""STAY"" using a bold font. Then I extruded the text using the extrude tool to a generous length the longer the better, because the access wont matter at the next step). Then on the other axis of the design I wrote the word ""HOME"" using the same bold font.. Then again, using the extrude tool I pulled the word ""HOME"" to intersect with the previously extruded word ""STAY"" and chose the option ""Intersect"" from the Operation menu.. So I was left with the shape in the picture above, all the parts at which the letters of the two words intersect each other.. Now in the ""bodies"" selection menu on the left side, we find that many bodies have been created.. I went ahead and highlighted the bodies I want to keep in the image above.. Then I selected all the bodies except these that I want to keep, and hit ""V"" on the keyboard or just simple toggle the light bulb icon next to each body to hide it until I was left with the second image. . Finally I drew a simple rectangle using the sketch tool and extruded it downwards so it becomes a base for the letters to sit on.. You can use any shape of base you like.. Finally I gave the edges of the base a ""Fillet"" to round them off.. If you haven't tried modeling it yourself, go ahead and download the model attached! and print it using your preferred settings.. Using support is advised.. You can use different color for the base by pausing the printer, changing the color, and hitting continue to print the letters with a different color or material.. This is an entry in the 3D Printed Contest.",0
"This rocket payload can snuggly fit a Lego person in it with the top on. It has been made to fit on a 1/2"" thin wall PVC pipe with the pipe sanded out a little. . P.S. all units are in Millimeters and units go LxWxH. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. First, grab three cylinders and place them on the work plane. Then take two of the cylinders and resize it to be 27mm by 27mm. After that, take the last one and resize that one to be 17.63mm by 17.80mm. Then make the height 10mm. Finally, take one of the 27mm by 27mm and make that height at 2mm.. Now take the other 27mm by 27mm and size the height to 45mm. Then grab a hole cylinder and make the measurements 24.75mm by 24.75mm and the height 54mm. After that, align and group the two-cylinders together. . Now take the 27x27x2 cylinder and align it with the 27x27x45 one. Group both of those shapes together. When that's done click on the whole shape and raise it up 4mm off the work plane. . Finally, take the last cylinder and align it with the payload body. After that, group those shapes together to finish off the payload body. . Now take three more cylinders and a paraboloid. Make one of the cylinders 27 x 27x 2.05. Then another one 24.75 x 24.75 x 2. Finally the last one, as 19.62 x 19.62 x 9.76. For the Paraboloid, it will be 27 x 27 x 22.23. . Now, take the paraboloid and raise it up 4mm. Then, take the 27 x 27 x 2.05 and 19.62 x 19.62 x 9.76 and raise those up 4mm also. . Take the two thin cylinders and align them together. MAKE SURE THE 27 x 27 GOES ON TOP. Then bring the 27 x 27 down 2mm. After that, take the 19.62 x 19.62 x 9.76 and align that with the other two shapes. Finally, group those three shapes together. . Now take the paraboloid and align it with the shape you just made. Then group those two shapes together. . Ta-da you have successfully created a pay-load that could fit a lego person in. . I have shot a rocket with this nose cone before it works. but you do have to add some tape so the nose cone part won't fly off. Because of that, I would extend the bottom piece on the nose cone by a little. But, anyway it's a really cool model rocket piece.. This is an entry in the Space Challenge.",0
"When designing this clock, I initially imagined a planetary gear system, but with the style I had in mind, I couldn't quite work out the gear ratio that I wanted. After some research, I came across cycloidal gears and knew this had to be the basis for my clock. . Cycloidal gears work by pushing the cycloid gear against the pins on the perimeter. The number divots in the cycloid gear determine the gear ratio. The stationary pins are designed to have one more pin than the number of divots in the cycloid gear. These gears get their name from the cycloid shape that's used to form the cloud-like shape of the gear. Imagine following a single point on a bike wheel and tracing out the shape that point draws as the wheel turns and the bike moves forward. Here's a good visual for it. Now imagine wrapping this shape around a circle and creating a cloud shape. That's how you get your gear. Students of physics might be more familiar with the brachistochrone, which is a type of cycloid that maximizes the speed of a ball getting from point A to point B. Here's a link for more on the brachistochrone. . Designing this was definitely a challenge. I opted for the mathematical and programmatic way of generating the shape, plotting points using javascript to generate an svg to work with. While the cycloid shape came out fine, there's another step to making the bubbly shape of the cycloidal gear. Imagine drawing a circle of some diameter (that matches the stationary pins) that follows the cycloid path. The inner perimeter of this traced path is your cycloidal gear. For technical reasons, I couldn't import svg files into fusion 360 and have the stroke width recognized. I tried using my svg generating website to convert an image of the svg with the correct stroke width to an svg with the stroke instead becoming a path, but the lowered resolution failed to work with my 3D printer. . Eventually, I hope to have a static site generator for cycloidal gears, but I went for the brute force method here with some help from this fusion tutorial.. So now you might be thinking, cycloidal gears are gears which means the output shaft would spin opposite of the input, causing half the clock to move clockwise and the other counterclockwise. Don't you worry. I'm no fan of tricky clocks, so I found a way around this using yet another gear. A planetary gear. I've kinda had this one on the backburner and finally got it working after numerous prototypes. It's a print in place planetary gear that can screw into more planetary gears of the same print type. This one is made short to fit the clock and is fitted with a screw-on output shaft. It acts as a direction reverser so the cycloidal gear for the hours turns the same way as the cycloidal gear for the minutes. The smallest physical gear ratio I could make is 2:1 for the planetary gear, explaining why there are only six ""teeth"" on the hour cycloidal gear rather than twelve. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Apologies for the semi-assembled part picture. I had the electronics hot glued down and no spare parts to make another due to shipping limitations.. What you will need:. * You can skip these parts using color change with prusaslicer. The diagram above will be better than I can explain here. I took out the ULM2003APG chip (stepper driver) and soldered wires directly to it to reduce space. You will have to do this too to fit everything in the electronics box. Another advantage aside from space is the lack of led lights using up power. Although I highly recommend testing the stepper driver using the board before soldering anything. Don't forget to add a coin cell battery to the RTC module. It should last for a year or two. . Screw the stepper motor onto the minutes frame using M2.5 screws (laptop screws or similarly small). If you can't find any, this should do the trick. Now hot glue the wire mess and you're done with this step!. Now for the testing. A few things to note. I used this DS3231 library for the RTC clock and the AccelStepper library. Start by setting the time for the DS3231 using this code. Open the serial monitor once uploaded and type in YYMMDDwHHMMSSx. For example: 180730w165130x for 2018-July-30th at 16:51 and 30 seconds followed by an x for the ending. What's nice about the RTC module is that it's powered off the coin-cell battery, keeping its place even when the arduino is off.. Let's test the stepper motor now. Use the code below to simply run the stepper motor.. #include <AccelStepper.h>. #define FULLSTEP 4. AccelStepper stepper(FULLSTEP, 6, 8, 7, 9);. void setup() { . stepper.setMaxSpeed(1000); . stepper.setSpeed(-550); }. void loop() { stepper.runSpeed(); }. If you don't have an RTC module, you can see the speed to -33.967 which is equal to one rotation of the stepper motor per minute.. I have yet to make code that works with the RTC module to accurately drive the clock, but I will make sure to post the code when I do.. Normally, the sun gear (center) of the planetary gear would be the input and the three planet gears would be connected with a triagonal piece and an output shaft. To achieve the 2:1 ratio, the sun gear is still the input, but the outer ring will be the output with the three planet gears remaining stationary. Make sure to fit/glue the bearings in the planetary gear before inserting filament.. I used three pieces of 2.85 mm filament, melting the ends to flatten and keep the planetary gear in place. If possible, use a holding iron you don't like, or the flat base of the soldering iron to make things easier to melt.. The rest is just stacking on on the other. Follow the order below. I hot glued the planetary gear holder piece to the minutes pin frame.. Finalist in the Clocks Contest.",0
"This is a fun and easy printmaking project that can be completed with limited supplies and no printing press!. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Monoprinting is a form of printmaking that has lines or images that can only be made once, unlike most printmaking, which allows for multiple originals.. This Instructable explains how to make a lovely and easy print., without a press. I chose to make a Flower, however, any imagery will work with this printmaking technique. Landscapes are an option as well. The trick is to work quickly so the paint doesn't dry.. It was necessary for me to relocate due to Covid 19, therefore I do not have access to my usual art supplies. I needed to ""borrow"" paint from my 4 year old grandson. The paint I used is a water base, similar to any poster paint or tempera. (It is made by a company called Kids Made Modern and I am finding it is GREAT for kids...and me!) This technique can be used with acrylic or even oil paint. Watercolor paint doesn't work as well, as it bleeds together too much. . Paint. Brush . paper. cup of water (to wash brush in between colors). baking tray. Paint your design (flower) directly on the clean surface of the baking tray.. Gently place the paper onto the image, once in place rub gently at the same time trying not to move it around and smudge the print. . I wanted to make mine into a card so I placed a folded paper into the tray. If you do this make sure the fold faces to the right so the print ends up on the front of the card!. Have fun!. . This is an entry in the Work From Home Speed Challenge.",0
"Intro. Hello! For this instructable, I’m going to be turning an old and rusty brake disc from the scrap heap into an interior décor desk clock, with the use of power tools, CAD, Generative design and 3D Printing. This project took me around 3 days from start to finish, however hopefully after reading this instructable you should be able to fast-track your project by avoiding the mistakes I made along the way. Why did I choose to do this project?. After helping finishing off a project car, I was left with a pile of parts destined for the scrap yard. However, with the current state quarantine, I missed my opportunity to get rid of this “junk” – fortunately this left me enough time to think of a good project which I could do to help prevent some of it going to the scrap yard.. Besides, as a First Year Engineering Undergraduate with a free summer, I have to use my degree teaching and time somehow!. What you will Need. To complete this project, you will need the following materials and Equipment:. · A used (or new, if you like that new-car smell) brake disc - Any size or shape will do; However, I recommend using a disk will a less protruding hub mount (so the clock as a whole isn’t as thick). · Access to a 3D Printer with Filament – This will be required to print the base of the clock, as well as the mount for the clock to sit in the brake disc. For my project I used an Anet A8 using around 200 grams of Generic Grey PLA filament. · A Clock Module – For my build, I chose a generic 56mm clock module. I recommend using this format, as the modules are cheap and easy to model. · Bolts (and potentially Nuts) – This will depend entirely on the brake disc you are using. If you choose a disc with threaded holes (such as the one I used) on the hub mounting face, you will be able to bolt the adapter straight onto the disc. However, if not you can use bolts and nuts hold the clock module on with the Wheel lug Holes. · 2mm Rubber material – This will form the feet of the stand. · Paint of your colour – This will be used for finishing the base. · A handheld power sander and power drill (wire brush, rotary sanding and rasp attachments) – These tools are needed to remove and prepare the surface of the brake disc (and bolts if necessary). · A pressure washer / Hose, Degreaser, Alloy Wheel Protector, sand paper and wire wool – required for thoroughly cleaning and preparing the surface of the disc. You will also need to be able to use a CAD package (In this tutorial I used Fusion 360, as that is what I have been taught with), as well as slicing software (This tutorial uses Cura). However, I must also recommend that appropriate PPE in the form of Gloves (at least), Eye protection and a Dust Mask be used when making this project, as you will likely be dealing with both fumes and iron oxide dust / particles. A well ventilated work area is also recommended. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Once I sourced my brake disc of choice for the clock project, the first step was to remove any surface grime and loose rust with a pressure washer (a hose will work too). I made sure to wash any internal cooling vents thoroughly, as grime and rust tends to accumulate there the most.. After drying the disc out, I began to scrape away the thick outside rim rust with a rough file, however it quickly became apparent that this was a slow and ineffective method of removing the oxide layer. After switching to a rotary sanding attachment for my electric drill, I was able to make quick work of the rust. This attachment was also useful for removing the outside lip on the disk (left behind by the wear from the brake pads).. With the lip removed, I was then able to sand down the flat surfaces with an electric hand-held sanding tool, using low grit sand paper. I made sure to keep regularly lifting and moving the sander, as the rust tended to accumulate and clog the sanding surface (I worked in a circular motion around the disc in the same direction of the wear marks, helping to emphasise the pad contact area). I also power sanded the exterior rim to help shine and remove any residual rust.. Once this was done, I used a wire brush drill attachment to remove the rust on the curved and depressed surfaces which cannot be treated with the sander, such as the hub mount sides and cooling vent ends. While this didn't create a perfectly smooth surface, it removed most of the rust leaving a shiny and textured finish. . The next step was to use a rasp drill bit to remove as much rust as possible from inside the cooling vents. This also didn't leave the surface perfectly shiny, however removed the majority of the large rust spots and made the disc presentable. I repeated this whole process on the reverse side of the disc, followed by going over all surfaces with a finer grit sand paper on the power sander (120 grit worked well at this stage). The final parts to finish were the threaded holes on the face of the disc which I would be using to mount the clock module. As road grime had accumulated over time clogging the threads and making them unusable, I used a Tap and Die set to clear them out. Further continuing on the theme of refurbish over purchase, I managed to find two very rusty 8mm bolts of the right thread pitch in a toolbox of old collected fasteners, and using the wire brush attachment for the power drill cleaned them up to a usable standard again.. When most of the rust had been removed from the disc, it was time to prepare the disc for treatment and surface protection. I rinsed the disc again to remove any dust particles (You can also use soapy water to help remove residual surface oil or grime), and once it dried used Brake Cleaner to remove any stubborn grime and oil (while my disc felt clean to the touch, a considerable amount of grime came off with the cleaning rags, so I highly recommend this step). . Finally, I applied a few layers of protective alloy coating to the disc to help prevent re-oxidation. This is the point where you get to step back and admire your handiwork!. With the brake disc now in its final state, it was time to make the CAD models needed to produce the 3D printed parts. As each brake disc will be different, and will have experienced a different amount of wear up until this point, the key measurements need to be taken were the Disc Diameter, Disc mount protrusion, Internal and External hub mount diameter, Hub Bore, as well as any stud holes and distanced from centre. For this final part, I also used the internet to find the “Bolt Pattern” for the alloy wheels of the same car (My donor car was a 2004 Toyota Rav4, which online sources say has a bolt pattern of 5x114.3, or 5 evenly spread bolt holes, with an imaginary circle with a diameter of 114.3mm passing through the centre of each of the bolt holes). After collecting these measurements with a pair of electronic Callipers or a tape measure (for circumference to calculate disc diameter), I used my chosen CAD package to produce a basic model of the brake disc. If you are not producing any renders, this model doesn’t need to be complicated, and only needs to have the features listed above in the model to be representative enough of the disc. However, I as I wanted to produce renders of my disc, I also modelled the vents, chamfers, fillets, threads and surface finishes. (I find adding surface finishes along the way helps to visualise the final product). With the Disc CAD’ed up to the desired standard, it was time to model the clock module. Using both callipers and online engineering dimension sheets, I collected all the necessary dimensions to produce an accurate model.. With these two components modelled, it was then time to design the clock module mount. This will depend entirely on the chosen disc, as some wheels (such as mine) will have additional threaded holes on the surface which can be bolted straight into to act as mounting points for the mounting bracket. However, if your disc does not have such threaded holes, I would recommend using a set of nuts and bolts through the lug nut holes to mount the clock bracket to the disc. As most clock modules come with a threaded head, I used this to mount the clock to the mounting bracket, and used the Hub bore to centre the module mount. Again, as I was planning to render the project, I modelled all the fasteners as well, however this is unnecessary for most cases.. The final part to do was to design the desk support bracket for the disc. Keeping my 3D printer build volume and disc dimensions / centre of mass in mind, and that I would be splitting the base in half for manufacture, I made a basic holder and base with rubber feet for the disc, using the Loft tool to produce a nice looking sweeping curve between the two parts. I recommend that you actually leave a hole directly under the disc through to the bottom surface, padded with some 2mm rubber sheet. This will reduce the load on the stand, and will help reduce material usage as the weight of the disc (in my case, over 5 Kg / 11lb) is not being supported entirely by the plastic stand.. At this point, if you are pleased with the result, you can move on immediately to exporting the printable parts as .stl files, ready for slicing. However, I thought this was the perfect opportunity to test my generative design skills, and produce a stand which saves on material, time and looks more interesting than a flush Loft.. This will be a short guide to using generative design with Fusion 360 – it is a very powerful tool, using complicated iterative simulations and calculations to gradually remove material from a design in a load-dependant manner, however we will only scratch the surface for this tutorial. I have compiled two animated clips to visualise the generative process of the chosen holder design for you (labelled ""Generative - Back"" and ""Generative - Front""). As design outcomes are generally impractical or impossible to make using ""tradition manufacturing"" (E.g. 3 Axis Machining), 3D printing is an excellent solution for manufacturing the final stand.. First, I reversed the stand loft (I.e. using the timeline in Fusion 360), and navigated to the generative Design Workspace. I needed to then select the Preserve Geometry (Locations where material will be placed in the final design, such as the base and holder of the stand), the Obstacle Geometry (Locations where material will not be placed, such as all other parts of the design file including the rubber feet, brake disc and clock module), the Structural Constraint (The contact surface which should not move / will resist the load, such as bottom face of the stand base), and the structural load (In this instance the weight and torque force of the brake disc). This final one was tricky to judge (especially as the desk is supporting the brake disc directly). I chose to apply loads of 3.5N tangentially to the vertical mating faces of the disc holder (leaning torque force), and 10N to the horizontal mating faces of the disc holder (weight and downward force), in order to account for an accidental knocks and pushing the clock (twisting and pushing down actions).. With these conditions defined, I selected the material as ABS plastic under the material selector (Unfortunately Fusion 360 does not include PLA in this list, however ABS has similar enough properties to not impact the final design too much for situations such as this). For more complicated projects, you can alter other settings such as safety factor (the scale factor of which a design can withstand a certain load), however for this project these settings do not need to be altered and can be kept at standard. . Finally, I checked the simulation parameters were OK and (recommended if your computer is powerful enough) ran a preview of the Generative Design. As the preview appeared promising, I sent off the study to the cloud to compute the final outcomes. This computation process can take several hours to complete depending on the simulation (which, in my case, it did).. When the results were finished and prepared, I was able to look at all the returned options, and selected the most appropriate design to use based on ease of manufacture, strength and material cost (as outlined on the right of the viewer). The Generative tool will return designs that, while computationally meet the parameters, in reality are not feasible (for one or more of the three reasons listed above), as you can see from some of the results I received. This is why it is important to filter the results individually after they are computed.. At this point, you can complete any final modifications to the final design (e.g. removing unnecessary parts or residual points which do not add to the part) and export out of Fusion 360 the printing designs as .stl files.. Being a visual worker, I wanted to create a set of high-quality images and renders in order to get a good idea as to what the final product will look like, and I also wanted to take the opportunity to improve my rendering skills.. First, I assembled all the parts of my design into a single CAD file, and moved to the render work space. The first step to producing a set of high-quality renders was to allocate material surface appearances to all the components. The best way to do this is use the “Allocate Bodies” setting to turn entire components into one solid surface finish (choose the finish which is either the most used by that component, or has the most faces in hard to individually select positions, such as “satin steel” and the brake disc internal fins), then individually allocate the secondary surface finishes.. For most situations, the standard fusion 360 render environment (solid colour) will be more than sufficient, as it will produce renders where the focus will only be on the design (and also reduce processing time, as there is less background to render, which is advantageous to less powerful computers). By adjusting parameters such as camera angle, altering light intensity, light angle, exposure, focal length and material surface finish, I was able to alter the outcome of renders in any way I wanted.. With these settings adjusted, a quick in-canvas render gave me an idea to how a full render will turn out, and if I was satisfied with the results, the next step was to prepare a full render. I recommend for non-professional situations you set render quality and resolution to standard, as this will help reduce the time for rendering and will be more than good enough for most applications.. Rendering is a process of trial and error – If you do not like how the render appears, adjust the parameters slightly and try again until you like the result!. Although I was very pleased with the solid colour background renders, I wanted to produce some more complex and professional renders of my design. Whilst the stock environments in Fusion 360 are good, I didn’t feel that they complimented the design well. As a result, I downloaded and used free online High Dynamic Range 360-degree images for the renders (Royalty free from HDRI Haven so I could upload it to instructables – However, credit for the Auto-Shop environment image to Oliksiy Yakovlyev, and the Office Scenery image to Andreas Mischok). There are thousands of scenes such as these online – search “HDRI 360” into a search engine to find them.. Once I had downloaded the chosen image in resolution, and imported the file into fusion using the “attach custom environment” feature under scene settings, I was able to adjust the orientation of my design to get the best view-point. For this part, I was forced to use 4K images, as my computer is not powerful enough to process 16K scenery images, and crashed upon scene selection. However, this was fixed with the use of the Depth of Field setting, which blurred the background of the scenery, removing the pixelation and also helped draw attention to the clock design from the scenery.. To further improve the appeal and depth of these renders, I also chose to include some additional environment elements. It was important that these elements didn’t draw too much attention or take long to model, but helped emphasise the design and aesthetic of the render. For the Auto-shop Scene, I chose to model a work table, two hex bolts, a spanner and a wheel nut, and for the Office Scene I chose to include a computer desk model which I had modelled earlier for a degree computer lab, allocating the appropriate surface finishes and canvas (Fusion 360 Screen) to all the new additional elements. . It is important to remember that in almost all situations (excluding renders with very reflective surfaces) you don’t need to model what a camera can’t see! Save the time or use it to make the on-screen elements more appealing.. Once I was happy with the scene setup, I performed the renders, and also made a short spinning animation of the model (I chose not to include a guide for it in this instructable, as I am not experienced enough to produce particularly appealing animations as of yet, and don't wont to make an even long wall of text!). Following this, I began preparing the models for 3D printing.. In order to 3D print any design, you must first “slice” them into layers, using slicing software such as Cura (I opted for this piece of software as it is easy to use and supports a wide range of commercial printers as standard, not just Ultimakers).. To slice the parts to be printed, I opened the exported .stl files, rotated the parts into a good orientation for printing (the least overhanging parts as possible is generally a good option), and adjusted the print settings. For my model, I used a layer height of 0.3mm in order to reduce the print time, and because I would be finishing the stand after with fine grit sandpaper and Paint, so the layer lines would not impact the final product. You can also increase the printing speed to reduce print time, however you must make sure that it’s not too fast so that the printer cannot keep up or causes significant defects from vibration. As I was using generic grey PLA, I opted to use a hotend temperature of 200 degrees and my build plate disabled (I would recommend ~50 Degrees Celsius, however my Anet A8 bed connector melted and burnt on previous print so I opt not to use it, and use glue stick and masking tape for first layer adhesion instead – they don’t call them “fire-starters” for nothing!), however your settings will vary depending on firmament type so check with your manufacturer for the best settings.. With the slicing settings set, I saved the GCode file and transferred it to the 3D Printer for printing! The total printing time was around 18 Hours for all 5 printed parts, using a total of 201 Grams of filament (including supports). With the 3d printed parts fresh off the printer, I removed all support and brim material with a pair of short clippers (I used the pair supplied with my 3D Printer), and used fine grit sandpaper to smooth out the outline of the base (a small ""elephants foot"" was left behind by the printer, which interfered with the mating surface of each side of the base) as well as the layer lines on the surface and top of the print. This is the part of the build where ensuring your 3D printer is properly calibrated will pay off - I needed to do a considerable amount of hand sanding to get a flush fit with the brake disc and ensure the parts were up to scratch. . After cleaning the parts of plastic dust from sanding, I used a two-part epoxy adhesive (Araldite Rapid) to join the two base sections, waiting over and hour for the bond to harden and set. I also applied the adhesive using a nail around the join with the base section of the print to strengthen the print and prevent it detaching from itself.. With the base joined, I again used fine grit sandpaper to remove the excess adhesive, and to clean up the join for painting. after masking taping over the contact surfaces with the brake (to make sure the surface dimensions are not altered), I applied several even coats of spray-on Black Matte Paint (I had originally intended to use a Red Glossy paint as shown by the renders, however I did not have enough to finish the project to a satisfactory standard), letting each layer dry before a further application.. With a satisfactory surface finish and everything else complete, all that was left to do was remove the masking tape and assemble the clock.. Overall, I have found this experience very rewarding – It has allowed me to practise and improve my practical skills, as well as my CAD Modelling and Rendering, whilst providing me with the satisfaction of saving material, once considered junk, from the scrap heap. I am very pleased with how the clock has turned out, especially considering I accomplished this task over a period of 3 days, and I personally really like the overall aesthetic of the design and parts used.. There have been several different points of improvement which I have learnt and would use should I repeat this design and build again:. · If I were able to choose the Brake Disc (E.g. buying one from a scrap car / disassembly yard), from a range of options, and not just what I had on hand, I would opt for a smaller disc with a less protruding hub mount. Whilst the clock is still desk size, it is large and heavy so a smaller clock would be better. Other factors such as drilled and grooved discs would also provide more pleasing aesthetic aspects to the design (personal taste). · I would double check that my printer was perfectly calibrated. Whilst it is not the best machine available, a few more minutes of double checking would have saved my much more time down the line of the project. · Go straight to using power tools. I spent a reasonable amount of time trying to manually prepare the brake discs, when I should have used powered tools from the start to save time (and energy!). · Choose a disc will less rust and preparation needed. While it was definitely possible to turn a very rusty disc into an interior standard piece of decoration, I would not recommend using a disc with that much preparation required (especially one which has been exposed to the elements as much as the one I used had). ·Use a 3D Printer with a larger build volume. Whilst my printer is more than sufficient to make the stand in two halves, there is still a visible line down the middle of the stand where the two halves have been joined together, despite significant effort to sand and smooth that area, so printing the stand as one piece would prevent this issue. If you have managed to make it this far through my Instructable… Thank you for reading! This project has been great fun to build, and now stands in pride of place on my desk (fingers crossed I won’t be missing any more lectures from now on!). If you have any questions, please don’t hesitate to message either in the comments below, or me directly – I will try to answer as best as I can!. Finalist in the Clocks Contest. Did you make this project? Share it with us!. 16,445 Enrolled. 
 
 
 1 day ago
 
 . Great results, and very thoroughly presented too. Nicely done : ). 
 
 Reply
 
 1 day ago
 
 . Thank you! I'm glad you like it. © 2020 Autodesk, Inc..",0
"I had never dared to sculpt in 3d, but when I saw the Instructables tutorial ""Sculpting in Fusion 360"" it seemed so simple that I decided to make a succulent pot for my mom, you can see her Instructable here: https://www.instructables.com/id/Adorable-3D-Printing-Owl-Succulent-Pot/. Basically I followed the same steps that the tutorial mentioned, but instead of a funny ghost I made an adorable owl. You can download the model from here: https://a360.co/2xSZq2h. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. First I made two spherical shapes for the owl base, one for the body and one for the head.. With the ""Edit form"" and ""Subdivide"" tools I moved and divided the faces of the initial top sphere to make the shape where the owl's eyes go, this shape is a little flattened. I only made one eye, then with the “mirror” tool I made the other eye.. I also formed the wing with the same tools from the previous step and with the ""Insert edge"" tool, the wing consists of a small lateral promontory and the tail consists of a little mountain towards the back.. I made a flat cut at the base of the owl so it can stand. For this I made a sketch with a rectangle at the height of the base.. I did a sketch at eye level with a couple of lines to locate a sphere in the correct position of the eyes. I used the Create -> Sphere tool. I created the eyes as a new body.. I combined both spheres, made a fillet at their joint, then made an internal hole in the geometry with the Shell tool and kept only one half with the Extrude tool.. I made a sketch at nose level and with the Revolve tool I gave it the rounded shape it has, I made this geometry as Join.. I mirrored the geometry with the Mirror tool, at that moment I was able to admire the complete owl.. I did a sketch with a big circle and then I extruded a hole in the owl's body.. From this moment on, all you have to do is: create sketches, make many circles to your liking, extrude and mirror.. I made 2 base planes at 40 ° and 140 ° to make the side holes.. There are many holes! I made these medium holes one by one, in the next step I will tell you how to make holes faster.. I created 4 planes to make small holes for each remaining space on the owl's body.. Make the main small holes, you only need to make a row of holes.. Make the paths where the holes will go, I used the ""Fit point spline"" tool.. Extrude each main small hole in different operations.. Use the ""Pattern on path"" tool to multiply the Extrude operation along the Spline the required number of times.. Mirror all holes.. I made a cylinder as a base, simulating a table and put a wooden material included in the library of fusion materials. I put white material on the owl's body and black material on the eyes.. I downloaded a free succulent model from the internet (https://www.cgtrader.com/free-3d-models/plant/pot-plant/baby-aloe-plant) to complement the owl pot model.. I set the size of the final image and rendered it.. Remember to visit my mom's instructable and vote for it! . https://www.instructables.com/id/Adorable-3D-Printing-Owl-Succulent-Pot/. I hope that you all enjoyed this Instructable! . Thanks for reading and watching. Miranda.. Finalist in the Sculpting Challenge.",0
- This is a Bookshelf with a unique staggered shelf design.. - It also has inbuilt soothing warm-white LED diffused lighting.. - With wireless On/Off and brightness control through Amazon Alexa voice commands!. This is a great looking and eye-catching con,0
"Do you want to make a unique planter by yourself? Want to challenge yourself creating 3D design for your indoor planter pot? Because I am a Huge Fan of Sheep, I created the design of sheep. Here I show you how to do it with the help of Tinkercad software. Let's get started!. Tinkercad. Dremel 3D Printer. Dremel Digilab Slicer. PLA Filament (Red, Blue, White, Light Grey, and Yellow). Hot Glue. Little Rocks and Soils. Plants and Flowers. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Grab a torus. Scale it into the length of 127.62 mm, the width of 57.90 mm, and the height of 150.81 mm. Grab a cylinder and make it a hole. Make the length of 128.72 mm, the width of 231.58 mm, and the height of 152.11 mm. Group them together.. Grab a half sphere for the eyes. Scale it into the length of. 11.58 mm, the width of 11.58 mm, and the height of 5.79 mm. Duplicate it into 2. For the nose, grab a sphere. Make it the diameter of 4.63 mm. Grab a mustache from the characters tab. It is optional. Scale it into the length of 3.50 mm, the width of 19.43 mm, and the height of 4.63 mm. Grab a sphere for the mouth. Scale it into the length of 6.68 mm, the width of 13.89 mm, and the height of 5.09 mm. Duplicate it and rescale it (because the bottom lip is smaller than the upper lip) into the width of 13.89 mm, the length of 8.73 mm, and the height of 5.55 mm. Arrange them all proportionally as in the picture.. Grab a paraboloid. Scale it into the width of 62.53 mm, the length of 61.37 mm, and the height of 53.26 mm. Drag a sphere. Scale it into the width of 37.05 mm, the length of 68.85 mm, and the height of 17.37 mm. Rotate it 22.5 degrees. See the picture. Drag another sphere. Make the diameter of 23.16 mm. Group them altogether.. Put the hat on the crescent body. Duplicate the crescent body and make it a hole. Group them together.. There are some steps to make the Sheep. The result will be like this.. To create the head, drag and drop sphere into the workplane. For the size, see the picture. Rotate 15 degrees as shown in the picture.. For the ears, use sphere and scale it as shown in the picture. Put it in the upper side of Sheep's head. Rotate 45 degrees as shown in the picture. Duplicate it into 2.. To make a face, you need eyes and mouth. For the eyes, use a sphere and duplicate it. To make a mouth, use round roof and duplicate it for holing. For the scale, see the picture.. For the main part of the body, use a cylinder and grab another cylinder for the holes. Group them together. Make the details for the Sheep's wool. I use a sphere for the wool. Copy and paste it as many as you want. Play around with the scale and the position. The final result should be in the picture. It is very difficult to explain it in words, so I embedded my design in Tinkercad. Therefore, you can see the exact measurement. Lastly, do not forget to add the Sheep's tail by using a sphere.. For 1 front leg, use 2 spheres and make them the shape of ellipses. For the scaling, see the picture. Do not forget to rotate it and group both of them together. Attach the body and duplicate it to create 2 front legs.. For 1 back leg, you need 3 spheres, too and make it a shape of ellipses. For the scaling, see the picture. Do not forget to rotate it and group both of them together. Attach the body and duplicate it to create 2 back legs.. Grab a sphere. Scale it into the length of 77.92 mm, the width of 77.63 mm, and the height of 40.18 mm. Grab a cylinder and make the diameter into 87 mm and the height of 81.93 mm. To make the details, use spheres as accessories for the cloud. The size is up to you. Play around with it. Copy 1 layer of the cloud twice, so you have 3 layers of the cloud. Group them altogether. See the picture as final result.. Grab a sphere and scale it into the length of 770.2 mm, the width of 77.22 mm, and the height of 35.31 mm. Grab another sphere and scale it into the length of 81.23 mm, the width of 81.44 mm, and the height of 41.38 mm. Make it a hole and group the spheres altogether. To make the details, use spheres as accessories for the cloud. The size is up to you. Play around with it. Group them altogether. See the picture as final result.. Grab a box. Scale it into the width of 212 mm, the length of 190 mm, and the height of 30 mm. Grab another box and scale it into the height of 17 mm, the width of 170 mm, and length of 192 mm. Make it a hole and group them together.. Before printing, save and export the selected object to .stl file and print it. Open the Dremel Digilab 3D Slicer. Make sure the object is on the base. Choose the print setup.. I choose ""High Speed"", Infill: Gradual, Tick the ""Generate Support"". Tick the build plate adhesion, click prepare and send to printer.. Assemble all parts that we already printed before by gluing with hot glue.. Here is the final design pot.. To make it prettier, you need to prepare the planting. Add some soil and little rock to the pot. Plant it with some flowers and plants.. Here is the final planter pot. You can place this in the house. Enjoy!. Thank you for reading my Instructable.. Finalist in the Indoor Plants Challenge.",0
"My daughter got lacing beads as a gift that consisted of square and various round beads she could lace onto a string for fun and hand-eye coordination practice. I thought it would be fun to supplement her set with some other shapes and letters. For my tutorial, I'll show you how I designed alphabet beads and made a few other shaped beads using Tinkercad. You can print any of the designs yourself, or use this tutorial as a guide for creating your own.. As with any homemade (or store bought) kids toy, make sure you are comfortable with them using it. The beads are pretty big and shouldn't be a choking hazard, but the edges can be sharp.. Instructable 330. or. *I participate in the Amazon Associates Program. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. There are so many letters and shapes and since you can't print them all at once anywhere, I'm not uploading them here. Instead, please copy and tinker with my designs on Tinkercad so you can download and print the ones you want. If you really want me to upload certain letters or shapes together here, let me know and I will if it will make things easier for you. . Before I got started I wanted to know what size I would be working with so I measured a couple of the beads from the set she got. I measured the biggest (square and cylinder) and smallest (rounded one).. Sizes:. Then I had to decide on a hole size which I used a caliper for. It was about 0.467"" in diameter.. Lastly, some of the beads were going to require an additional cylinder in them to make the bead work. I really just randomly made a larger cylinder but for specifics sake, that cylinder is 0.6"" in diameter. . Now that we have sizes, it's time to start making the beads.. I started with the letter A and used that to help me decide on the size of the beads. The A ended up being 1.282"" squared. . From there they are all different lengths and widths but they are all the same heights which is 1.282"".. [I need to point out I used the individual letters from the Tinkercad designs and not the Text ones. I wanted the letter bulky/blocky. Also, I added a top and bottom line to the I (like I did when I made my Word Crayons) so it would be a bit more interesting than just a straight line.]. When it comes to making these letter beads there are two types, those that just need a hole, and those that need a hole and cylinder. (Some can actually be done either way too.). To start, we are going to do ones that only really need the hole. Those can be ones such as I, J, T, A, etc. . The very basic ones have straight sides such as M, N, O. . You can do this for many of the letters, but for some you have to have an additional tube inside of them for them to work and print right. You can actually add a tube to all of them if you want and I do provide them, but it's optional for some. Next we'll talk about adding a tube. . Like I mentioned, you can add a tube to all of them as it makes it much easier to lace the string through them. If there are holes the string can go off-center and cause issues, so now we'll talk about adding a tube.. Letters with straight sides are easy as all you need to do is add the hole, a cylinder that is the exact width of the letter, and then just line them up and group them together, such as the M above (or H, F, E etc). . . . If the sides are slanted or rounded, it can be more difficult to get a smooth edge. . We're going to do the R, since it's kind of a weird one. . - To start you need 2 of your letter the right size, a cylinder & a tube hole, and a rectangle.. Start with your rectangle the same height as the letter and line up one of letters (as a hole) to be dead center of the rectangle (being dead center is important).. . . . Group them so you have a rectangle with the letter cut out. . . . . Take an additional shape and cut out anything in the way in the center of the letter, this is anything that will interfere with the tube later. Make sure you don't cut into the edges of the letter like on the right where the R dips in.. . . . . . . Make this rectangle (with the letter cut out) into a hole.. . . . Now line everything up so the rectangle you just made, the letter, the hole tube and the cylinder. (if you didn't line up the letter with the rectangle before, this one won't line up right).. . . . Group them and you'll have your letter! As you can see the tube should go nicely through the center of the letter and it should line up nicely on both sides.. . . . Do this for every letter that needs it. You can really do this for all the letters. There are only a few that you can't do it with as they are already so basic in their shape (like I and J). . Some letters are harder to do than others (such as S and C) but I already did them so you're set ;). . . . Any other shapes you do will be done in the same ways I just described. I actually just cut a hole in all of these except for the butterfly which I gave a tube. . I used a flower, butterfly, car (a shape I brought in) and two different diamonds (they are just oriented differently just to see how they would turn out). . Each letter and shape takes about an hour to print with 15% infill. . Many you can print without support but some will require it. The ones that need it will be the tubes that are just hanging there like the C shown above. . I only did support from the base plate as that's all you really need. You don't need support inside the tube and it will just be a mess to clean up so I recommend clicking that setting for whatever slicer you use.. Once you have all your beads you can go right ahead and use them or paint them. . I needed to be able to paint these outside so I set up a couple boxes with a nylon thread suspending them. I attached the thread to popsicle sticks which allowed me to easily attach them to the box or slip them off so I can reuse them. . I cut off the two side flaps so they wouldn't get in the way and cut slits in order to thread the nylon through. . I left the top and bottom flap on so I could partially close them and keep any dirt off the pieces while they dry. I used an old pan to hold the box mostly closed so some air filtered in but hopefully no dirt. . Follow the directions on your paint and paint them and seal them.. One thing to keep in mind is it is very hard to get the spray into any holes in the beads. You can just accept it and have it just not be 100% perfect (like me) or really spray into the sides to get those holes filled.. Your call.. Give them plenty of time to dry before giving them to any kids.. The sealer is supposed to be non-toxic (which is why I use it), but still be careful about kids putting them in their mouths. . This is just a reminder that you need a string to lace these beads on. I recommend using something that is sturdy, bulky, and doesn't knot easily. So, no yarn, embroidery floss, anything like that. I suggest using a sweatshirt string, paracord, or shoelaces. If it has a stiff tip that is ideal.. In the picture above the red one is the one that came with the lacing beads my daughter got and the other two are a shoelace (pink) and sweatshirt string (navy blue) and as you can see, they are all pretty similar. . Here is a look at the A with the shapes that came in the bead set. The colors, surprisingly, matched up pretty well with the set I had. Except for the blue which I wasn't surprised about as my lighter blue stopped working in the middle of spraying and I ended up getting a darker blue online. . And here is a look at a C with a tube and without. Just so you can see how they turn out differently. One big thing is if it doesn't have a tube it will flop around on the string more as well as the nontube one being harder to thread. . Just some more pictures of the figured beads.. This is an entry in the 3D Printed Contest.",0
"In this project we will be making a model of a Animal (Human) cell and talking about the various structures within an animal cell. I made my cell out of just cardboard and paper, but you can use anything you have around the house to make your cell. Things like bits of fabric, buttons, and pipe cleaners could all be used.. A cardboard circle. I took a cardboard box and traced a plate on it to get my circle shape.. Scissors. Paper . Colored Pencils. Glue (I used a glue stick, but forgot to include it in my picture.). Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. The first thing you’ll want to draw is a circle to be the Nucleolus for your cell. Then you’ll draw a bigger circle around that. This bigger circle is the Nucleus. The Nucleus of a cell has 2 main functions, it contains all the DNA of the cell and functions as a “brain” for the cell. The Nucleolus is the smaller circle within the nucleus, and it’s where Ribosomes are made. Ribosomes will be discussed in a later step.. The Endoplasmic Reticulum is connected to the nucleus by the Nuclear Membrane. Because of this you’ll want to start by drawing a circle to fit around your nucleus, before drawing the rest of the cisternae. Endoplasmic reticulum may be either rough or smooth, and both serve different functions. Rough endoplasmic reticulum has Ribosomes bound to it and helps modify and transport the proteins made by those ribosomes. Smooth endoplasmic reticulum modifies lipids.. The Golgi Apparatus is made of cisternae much like the Endoplasmic Reticulum, but the cisternae are not interconnected. The golgi apparatus’ job is to take in molecules produced by the cell, make any modifications, and then package them into Vesicles. These vesicles can then ship the proteins either within the cell itself, or can send the proteins outside the cell.. Ribosomes are small organelles made of RNA. The way I made mine was to first make a square, before cutting the square in smaller and smaller bits of paper. I then glued these bits where they were needed. Make sure you glue some onto your endoplasmic reticulum, and to also glue them around the rest of your cell. Ribosomes help with protein synthesis (making proteins) within the cell.. Mitochondria are larger organelles with an inner and outer membrane, and they also have their own DNA.. Mitochondria are where oxygen and glucose are taken into the cell, before being converted into energy.. The Cell Membrane is the outer edge of the cell and forms the cell’s boundary. To create cell membrane I first traced my entire cell onto a sheet of paper. I then colored around the edge, before cutting the whole thing out. I then folded the paper in half and cut out another circle. You can then glue down the outer circle to form your membrane.. Vacuoles are small pockets formed by a membrane layer. They contain the gas and fluids found in cells, such as oxygen or water.. https://www.cellsalive.com/cells/cell_model.htm. https://www.khanacademy.org/science/biology/struct....",0
"GameGo is a Microsoft Makecode compatible retro gaming portable console in development by TinkerGen STEM education. It is scheduled for release on 20th of May, 2020. It is based on STM32F401RET6 ARM Cortex M4 chip and made for STEM educators or just people who like having fun creating retro video games.You can follow this tutorial and try the game in Makecode Arcade simulator and run it on GameGo, when it becomes available for purchase (sign up for our newsletter to get notified about start of online sales).. In this article we're going to try our hand on recreating a classic Battle City tank shooter game, originally produced and published in 1985 by Namco for Nintendo Entertainment System (NES). In the original game the player controls a tank and shoot projectiles to destroy enemy tanks. The enemy tanks attempt to destroy the player's base, as well as the player's tank itself. We'll make some modification to the game play to better accommodate block programming practices with GameGo, but our remake will still retain a lot of similarity to the original game. Let's begin!. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Open Makecode Arcade at https://arcade.makecode.com/ and click on new project. We'll begin my making our alter-ego the yellow tank. Choose Set mySprite to sprite of kind player block and draw a yellow tank facing upwards as our starting sprite, put that block inside of on start block. Add move mySprite with buttons block. Now we have a tank that we can move with buttons in simulation! Great, but it is always facing the same direction, even when we move down or sideways.... To correct that, let's add four more blocks, one for each direction button.Create a new variable, called direction - we will save the direction of movement of our tank in it, 100 will correspond to down, -100 will correspond to up, 200 for right and -200 for left. Why these numbers? You'll see later, when we add the projectiles that our tank will fire. The logic within each four of these blocks is very simple - we check if new direction(from button press) is the same as direction before. If it is, we basically don't do any changes. If it isn't we change the tank's sprite and in case with downward and left direction we flip the sprite's image to avoid drawing additional sprites. Finally let's assign the starting value of direction to -100 (tank upwards), since this is how our tank starts the game. Try moving the yellow tank now, the sprite will change according to direction of the movement now! Excellent, now let's add bullets.. We'll fire bullets with set projectile to projectile (draw small silver square for that sprite) from mySprite with vx vy velocities. Inside of on button A pressed block, we need to check for absolute value of direction to see if yellow tank is facing up/down of left/right. We then proceed to fire the projectile with the velocity of direction variable - that's why we had -100/100/-200/200 for direction values. . Now we have yellow tank that can fire projectiles and move. If yellow simulated tanks could have feeling it would surely feel lonely in this blank void without enemies and things to do. So, for the next step let's add enemies for it to pass the time.. We'll start this step by creating a bunch of new variables: two arrays (one for holding enemy sprites and another one for holding enemy directions), spawn time variable for storing the time period between spawns, enemy count for storing maximum number of enemies at the same time. We'll also add two projectiles(projectile and enemy projectile) firing in on start block - that will help us to avoid an error later.. Next we create on game update every ... ms block, insert spawn_time variable there.The logic inside of the block is simple - if the total number of enemies at the battlefield is less than maximum allowed number of enemies, add an enemy to enemy_sprite_list and add 200 (going right) direction for that enemy. . Next, in the on created sprite of kind Enemy block we add some graphical effects, place it on a random empty tile and call pick_direction function for this sprite. In on sprite of kind Enemy hits wall, we call the same function, pick_direction. . What is in that function? Here is where things start to get a little bit complicated, so hold on. There's 50 percent chance of enemy tank going up and 50 percent of it going down - we change the sprite accordingly. The only trick here is that we also need to change the value corresponding to that particular enemy tank in enemy_directions_list to it's new direction, so we'd have it fire bullets in the right direction. For that we find the index of enemy sprite in enemy_sprite_list and change that item's value in enemy_directions list. . Finally, let's add shots firing. We add another on game update every 500 ms block and put a for item in enemy_sprite_list. With 30% chance an enemy sprite will fire enemy projectile in it's movement direction. . If we launch the game in simulation now, we can see our yellow tank and enemy tanks appearing in the same point and going into empty space. We can shoot and they can shoot our yellow tank, but nothing would happen. It feels so devoid of meaning still :) Let's add the decorations and game mechanics as the last step.. We're going to start this step by adding life and score from Info tab and setting life to 10 and score to zero. Then we add block set tile map to ... . Draw the file map to look something like you see in the screenshot above. Don't forget to add the walls!. Let's add on sprite of kind Projectile overlaps otherSprite of kind Player - this is when enemy's bullets hit our yellow tank. We need to make sure these projectiles are enemy's bullets and not our own, so we'll add that if condition within block and if it evaluates as True, then we subtract one from life count. Similar to it, in another block on sprite of kind Projectile overlaps otherSprite of kind Enemy we make sure that projectile is a projectile from yellow tank and if this condition evaluates as True, we destroy otherSprite(the enemy tank), remove it from the list of enemy_sprite_list and add one to score.. The last thing is victory and defeat conditions - for victory, we'll check if score is higher or equals 10 in forever block. If it is, then we show the victory screen. And in on life zero block we show the Game Over screen.. Now try it out in the simulation to see if the game is running as expected. Then upload it to GameGo and enjoy smashing enemy tanks!. In our GitHub repository you can download two files for Makecode arcade - one is exactly the same you would get if you follow this instructable and the other one is upgraded version, which has randomly generated level progression. It has 10 levels, each one is randomly generated with increased number of enemies in each successive level. . And of course, there is even more things you or your students can add to the game on top of that! There's better music, breakable walls, different victory conditions and so on! . If you do make an improved version of the game, share it in the comments below! For more information on GameGo and other hardware for makers and STEM educators, visit our website, https://tinkergen.com/ and subscribe to our blog..",0
"So the idea with this clock is to make it in the shape of infinity symbol which one side of the shape will be displaying the hour hand and the other one will be displaying the minute.. If you have any suggestions or questions for the design or the code you can comment down below. 2 Stepper motors and drivers (I am using 28BYJ-48 with driver). Microcontroller (I am using Arduino Nano, any other will do). 3D Printer for making the case. A small breadboard and jumper wires (You can just solder the wires if you want). A 5V dc adaptor and input jack. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. The design of this clock is based on an idea i haven't seen done before. It has 2 separate hands. One for the hour mark and one for the minute mark. In normal clocks these hands stand on top of each other but rotate at different rates. While thinking about ways of doing that with arduino and step motors or servo motors i've realised it isn't an easy task and it would be way easier to build if they were both separate. So i thought if they were separated there could be some unique designs to fit that. That is were this ""Infinity Clock"" idea was born.. I used Fusion 360 to design the whole case and used my high school's 3D printer to print the case. A 3D printer is not necessary to build this. In fact i think it would we way cooler to make this out of wood but it was easier for me to 3D print the whole thing.. I used black and grey PLA for printing and below are slicer settings and the STL files.. Slicer settings for the case:. 0.3mm layer height. 20% infill. 0.8mm shell thickness . Slicer settings for the front part:. 0.1mm layer height (Lower layer height is important for this part because it has more details). 20% infill. 1mm shell thickness. So the complete circuit is not very complicated but there are a few things to be careful with. Step motor driver's +5v pin should not be connected only to arduino's +5v output because arduino can't provide enough current for the motor and will fry. So we connect the motors and the arduino to +5v output of the dc jack. We also should connect all the grounds of drivers, arduino and dc jack together. When the circuitry is complete we can connect the arduino to a pc and upload the sketch.. After uploading the sketch we need to unplug power, set the clock to current time by hand, then plug the power back on. After this the clock will start working. . The only problem with this build right now is these cheap stepper motors get out of sync as time passes so over time the clock will drift away from real time. This issue can be fixed by adding 2 encoders to the motors and adding an RTC module to keep track of time. I think this will be my next step for this project.. After all this was fun to build and taught me a lot about stepper motors and 3d designing in Fusion 360 so it was definitely worth it. And i got a cool clock now.. Any suggestions will be appreciated.. Stay creative..",0
"These instructions will show you how to make children famous cartoon character Pikachu. I have also uploaded a video so you can follow the steps described here with the video that will help you to understand this CAD model. Try to follow the steps few times as some people might not get the desired shape if you are using a sculpt environment for the first time in Fusion 360, but with some practice, you will master the skills, so don’t worry and give up after the first attempt. It is straightforward and we are just using some essential tools and transformation. Some basic rendering tools are also used that will help you to bring the design into reality. You can 3D print this model with whatever additive manufacturing type you have at home but it's totally optional. . Computer. Fusion 360. 3D printer (Optional). Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Watch the video and follow the steps to make your own Pikachu. To begin, in the design environment, click on create form. Once you get into the form environment, click on Quadball. Then select a front plane and start drawing Quadball at the origin. Give dimension as 25 mm and click OK.. Select the two faces as shown by pressing Ctrl on your keyboard and then click on symmetry → Mirror-internal.. Select two faces by pressing Ctrl on your keyboard. Then right-click on your mouse → Select edit form → the transformation rigid appears to → click on point as shown in the picture and drag it to an appropriate dimension to make the chin of Pikachu.. Double click on the line shown in the image and then right-click and select insert edge. Move the slider to approximate distance for the eyes → Click OK → select the edge shown in the picture → right click → edit form → select arrow and move it to the approximate distance for the forehead.. To alter any lines or point on Quadball, select the lines or point → right click → edit form → on the transformation rigid box; there are several options such as up, down, left, right arrows, square box, pointer, and so on. You can move them according to the desired shape required. For more description, check out the video as I have shown every line that needs to be modified for the exact accurate shape of the head. This step is optional, and you can skip this step.. Select the two boxes → right mouse click → select subdivide → Click OK → select two faces as shown in the picture → right click → edit form → hold Alt and drag the pointer of transformation → Again hold Alt and drag pointer for the second position → Click OK. Next double click on the lines shown in the picture → right click → edit form → change coordinate space to selection space → drag the arrow → click OK.. Select the two faces → right mouse click → select subdivide → click OK → select two faces as shown in the picture → right click → edit form → hold Alt and drag the pointer of transformation → Again hold Alt and drag pointer for second postion → select two faces just created → drag the arrow → select edge → drag the square → Click OK.. Select the four faces → right mouse click → select subdivide → click OK → select two lines as shown in the picture → right click → insert edge → drag the slider → click OK → select the lines and drag the arrow down as shown in the video and pictures to mimic the shape of lips → click OK → select the lines created for lips → right click → edit form → drag the arrow inward → click OK.. Select the four faces → right mouse click → select subdivide → click OK → select four faces as shown in the picture → right click → edit form → drag the square as shown by holding Alt → continue dragging square by holding Alt and adjusting the pointer until you get the desired shape of ears.. Select the faces as shown in the picture → right click → edit form → hold Alt and drag the arrow down → continue dragging arrow by holding Alt and adjusting the pointer until you get the desired shape for the body. You can change the shape of the body the way you want. You can do so by moving arrows or square.. Select the faces as shown in the picture → right click → edit form → hold Alt and drag the square and adjust the pointer for the desired size → continue dragging square by holding Alt and adjusting the pointer until you get the desired shape for hand. You can change the shape of the hand the way you want. You can do so by moving arrows or square.. Select the faces as shown in the picture → right click → edit form → hold Alt and drag the square and adjust the pointer for the desired size → continue dragging square by holding Alt and adjusting the pointer until you get the desired shape of feet. You can change the shape of the feet the way you want. You can do so by moving arrows or square.. Now the whole sculpting part is done. Click on Finish form. It will take you to the design environment where you can modify or add some other features.. Click on create sketch → select right plane → select line →start drawing the shape of the tail as needed → click finish sketch → select extrude → select profile as the shape of the tail → direction symmetric → distance 1.5 mm → operation join (very important) → click OK.. Click on construct → offset plane → select front plane → drag the arrow for desired distance for a new plane → click OK → select the new plane just created → click on create sketch → select ellipse → select drawing the shape of eyes and pupil. Instead of repeating the procedure for the second eye, we can use the mirror tool. Select line → select construction → draw a vertical line at the origin → select mirror → select objects as two ellipses which were created earlier → select mirror line as the line drawn at the origin → click OK → finish sketch. Next, click modify → split face → select the face near the eye as faces to split → splitting tool as the first ellipse → click OK → repeat the same procedure for splitting pupil and the eye. If you encounter difficulties, check the video.. Follow the same procedure for splitting as described for splitting eyes. Check out the video if you find it difficult as I have shown every step.. Click on document settings → Appearance → paint → Glossy → drag the colors as required → select the color and drag it on the sculpture body of Pikachu → while adding colors to the faces click on faces → then drag the color on the desired face → click close. Click on design → select render → click on setup- Scene setting → change the brightness, background color as needed → once you are satisfied how your Pikachu looks like click on render → select the desired output size from the list of options available or make your custom size → click render → it will take few minutes to render, and your final output will be ready. You can download it in the desired format you wish.. Export the Pikachu file as STL > open the STL file in any of the 3D printing software you are using and compatible with your 3D printer. This step is totally optional, you can print only if you want to participate in a contest where the candidate needs the actual 3D model to be eligible in as a winner..",0
"These little robots stem from a favorite personal design challenge: to explore the minimal amount of materials and tools necessary to make something. In this case, something that is and/or makes ""art."". Closely tied to this goal is my desire to use and recycle things like old keyboards whenever possible, and to allow for easy re-building, adaptation, customization, and re-use of all materials, over and over again. This is incredibly important to me, both for sustainability and educational reasons. As an educator, I strive to provide the kinds of materials and questions that motivate designs that can be taken apart for easy re-use of every component. This robot needs no hot glue, ideally no tape, and no tools other than optionally scissors. (Any teacher will tell you, if you don't know, the vast difference in time, space, and expense between one thing and 30+ things.). . I hope this robot gives you ideas. I must say I've been the beneficiary of a nearly infinite creative genius source: that of students of every age, for a very long time. I hope I can share some of that inspiration here. So, this little bot is just one design. A start. Even if made exactly as I describe here, It meant to come apart, be remade, tweaked, added to, and ultimately serve as an inspiration and possible starting point for your own personal creations. Enjoy! . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. To replicate this design, you will need: . (x1) Salvaged Computer Keyboard Key Cap *. (x2) Cotton swabs (akaQ-tips, by brand) (paper stem, preferably. Plastic ones are worse for the environment and slightly different in stem diameter. Still massively useful for tinkering, though, so I re-use them all of the time.). (x2) 3/4"" Brass brads- like these. . (x1) LR44 Button cell battery (provides 1.5 Volts) . (x1) Vibe motor, 4-6mm diameter (I used 6mm motors in this example. You may also like these smaller 5mm pager motors) Both links are from my dear friends at Evil Mad Scientist Laboratories, a business worth supporting . (x1) small plastic coffee stir stick, or any other small straw that snuggly fits over the tabs of the 3/4"" brad. (a small piece of tape can be used instead). This design uses the near-ubiquitous small red stir sticks you still see just about everywhere. . (x1) 1/4"" diameter neodymium disc magnet. I've used the Rare Earth 1/4 in. x 1/10 in. Disc Magnets from Home Depot for this project. DISCLAIMER! Such tiny, strong magnets are DANGEROUS if ingested. if you are using these with young students, or young children, you must take care that they are aware not to out these in their mouths or leave anything using them in a place that might be found by a young child. I exercise extreme caution when using these with students of every age, so that everyone has a chance to discuss and be aware of this danger. For maximal safety, you may substitute a glue dot, double-sided sticky tape, velcro dots, or tape here if you like. . Also of note regarding something you would not want swallowed: The battery I've used here is the most common type of 1.5 Volt button cell, the LR44. You can use any other near- sized button or even 3 volt coin cell that fits between the cotton-swab legs beneath the motor mount and magnet. Note that some 3V coin cells are not magnetic. I've yet to encounter an LR44 that isn't. . *A big caveat:This design is centered on one very common type of salvaged computer keyboard key, but it might not be the kind of key you have on hand. I've found this exact design with the same or at least extremely close dimensions used in many many different keyboards, especially from the 90's onward. I'll have notes at the final step for some ideas about adapting other Keycap designs for this kind of robot. As far as designs I've found most interesting and useful, the older and clunkier the keyboard, the better!. The spirit of this problem is to make the best use of what you have. You can salvage a larger vibe motor from a Dollar store electric toothbrush, a tiny pager motor from an actual old pager or cell phone, or just about any small motor from any number of old toys. Get creative with what you have, and embrace your creative constraints! I'll address more about alternative and additional materials in the final steps of this project. . Measure and mark the center of each Cotton swab. The Q-tip brand swabs I've used here are 3 1/8 inches long, so I've marked at 1 9/16"". . Bend each swab into a gentle curve. the amount of curvature is completely up to you. It does help to try and keep the curvature symmetrical in respect to the center, in order for the bot to stand upright and perpendicular to the surface. . Alternatively, you may just pinch and bend the swab in half several times, breaking it. This is a nice option if access to scissors is not immediate, or if you are doing a large-scale workshop and minimizing the number of tools required. This can be a tool-free project!. With this particular keyboard cap, the cotton swab ""legs"" fit perfectly in the corners of the key cap's center structure. I love finding these kinds of fortunate friction fits between parts! It's the basis of so much of the tinkering workshops I provide- materials that fit together in unexpected ways, that can only be discovered through exploration, trial and error, and a mindset that starts to see the possibilities of how things might fit together. I think of this tinkering drive as the finding of ""serendipitous fits."" . The world of loose parts can become your own custom construction set!. What if you keyboard caps are of a very different design? Congratulations! You have the fun challenge of finding your own serendipitous fits and solutions.To handle other size options, you may use small pieces of tape, or small sections of the stir stick, to shim the swab leg size for the desired friction fit.. As I've shared in the gathering parts step, many other keyboard caps may have slightly differing dimensions, or completely different designs from the examples you see here. It's a fun challenge to take the spirit of this project (minimal parts, all-friction fit, no glue/tape, no tools beyond optional scissors) in your own directions. Good luck!. Hello, my name is Brad. Brass Brad. I'm here to be bend and re-formed around your small vibrational motor. I'll also hold onto that black (or red if you like) motor wire end of your vibrating motor. I have plans to meet up with Ms. Magnet for the next step. I hear she can introduce us to Lady LR44 and help us hold on to her negative terminal!. But I'm getting ahead of myself. Go ahead and bend my tabs out, wrap the wire around one of my tabs, then pinch and fold me back over the motor so that I hold it tightly. . To think my maker thought I would be used to hold paper together. If only they could see me now! I have another Brad brother joining us in this project later. He gets to be a switch. We're a highly achieving family of Brads.. Once, a very brave knight of the Brass Brad set about on a motor mount quest with his buddy, Baron von Vibe Motor. They had ambitions to join forces with Captain Key Cap, united by the powers of of serendipitous fits.... To attach the brad to the underside of the Key Cap, I have used a small section of plastic stir stick as a shim. If you don't happen to have one, you can use tape, heat shrink tubing, or any other possible thing to shim the tabs so that they fit snuggly into the central part of the key cap. This whole assembly will suspend the battery, so the fit has to be fairly snug. . In order to better show the connection, I have shown here both the motor mount attached to the keycap both with and without the swab legs attached. You may find it easier to fit the motor mount to the keycap without the legs first, then attach or re-attach the legs. . Take the 1/4"" neodymium disc magnet and place it on the head of the brad. Then, attach the negative terminal (the top part of the cell, that is electrically isolated from the outer shell) of the LR44 button cell to the magnet. Boom. Magnets are rad. Magnets and motors and brads and batteries together are mad rad. You're almost done with the assembly!. INQUIRY STUFF. What's inside of these motors? How might they work? When students discover, through research, dissection of motors, or by learning from peers or teachers, that motors rely on magnets to work, a question often arrises: why would this motor still work when you stick a super strong mini magnet to it? . Another question: Does the side that the of the magnet is attached matter, as in the polarity of the magnetic field relative to the motor, or perhaps even to another robot of the same design? . Questions you don't necessarily already know the answers to are the best! Finding them out through discussion, exploration and experimentation, that's science stuff. There's a huge amount to designs like this, in being able to change single variables and parameters, that lend them to exploring scientific method. . But I digress. Sorry, I can never take off the teacher hat. Let's finish!. KCMWB! I could probably think of a better name/ acronym.... It's time to get your first Key Cap Micro Watercolor Bot fully operational. So! Take the free wire (red, for positive by convention in this case, black if you decided to be awesomely individualistic in step 5) and wrap it around a tab of the second brad a few times (you will have best luck stripping the wire to about 1/2 inch or so.). Take this brad and wrap it around one of the cotton swab legs, on the level of the battery. It probably already turned on as you were attaching it!. As you can see, when the brad touches the outside of the LR44 battery, the circuit is complete for the motor. There's also the bonus that the small magnet makes the entire battery magnetic, so it sticks to the switching brad. You will have to play with the positioning of this brad to find an orientation that works best to allow you to move it to break the connection and turn it off. . Trust me, if you are new to this, you'll have fun and learn a bunch about switches as you try to get this to work. I'm also 100% certain that you can figure out your own ways of turning this little bot on and off. This is one area of many (well, actually all!) that could be vastly different than the option I present here.. TEACHER NOTES. I love being able to turn my various microbots on and off easily. As a teacher and educator, I have found that simple to complex switch design is a fantastic challenge. It's very tangible, and the results are rather immediate. This is one area that you explore other options, and if you are introducing this kind of project to others, invite custom ways of switch this bot on and off.I''ll not show it here- but I do want to add that there are small magnetic reed switches that close or open in the presence of close magnetic fields out there. Imagine a bot that doe not turn on unless another magnet gets closer... electromechanical swarm behavior? hmmmm..... ...or doodles, or scribbles, or random/ repeating patterns, whatever you want to call it. I once had a Maker Corps Member argue that Artbots should not be called ""Artbots"" because the drawings they made were not in his mind ""art."" OK buddy. I'm glad the vast majority of artists I know (that includes every single child I've ever met, taught, and learned from) does not have such a narrow and strict view of art. Art is expression. It is personal. It is whatever the heck you decide you want it to be, whatever gives you and others joy, or whatever provokes thought or feelings. I think the marks made by a creation of your own design fall into this category, so for me, I do like Arbot. I also like scribble machine, or doodle robot, or drawbot, or any other name someone wants to give something that moves, makes, and/or is, art. It's whatever you want to call it. . End accidental soapbox rant on art! . This little bot moves in unpredictable ways, which is a form of art, like dance, for example. To give your Bot another way to help it express it's inner artist, give it the gift of pigmentation. I like using liquid watercolor, but pallet watercolors works, as well as food coloring. Dip the cotton swab ""feet"" in watercolor paint and let it go!. You'll see in the video of the first step two slightly different versions of this project. One one, I've clamped on a tiny clothespin to the counterweight of the vibe motor. This kind of change makes a difference in the kinds of marks and patterns the Bots make. Many things do! I encourage you to customize and change it. Experiment with bending each leg in different way. Small changes in the center of mass can make large differences in the behavior of these kinds of vibrational-based simple robots, for example. I trust you will find many more ways of changing the behavior of your robots, and of the types of art/doodles/scribbles/ masterpieces that they make. . I've used these same 6mm small vibe motors along with other small motors of all kinds and sizes salvaged from old toys and computers by prek-12 students for many many years, in conjunction with all kinds of materials. I'm providing some examples here from preschoolers in particular. They've always embraced taking their own designs and adding motors to them, without the need for any examples from me. Inspiration and help comes from the materials I provide and the questions and setup I use to promote exploration and provoke original responses. The most powerful inspirations comes from their peers, and from being asked things like ""I see you've figured out a way to attach that battery and motor, and ways to turn it on and off. Are you OK with helping anyone else out that could use it?"" It's super empowering to recognize students who have struggled and figured out things, and to immediately help them make use of their earned knowledge and expertise by helping peers. . In this way, tinkering and material exploration can help nurture authority and expertise that is child-centered and driven. By reflecting ""Who did you help? Who Helped you? And Who or what inspired you? Who did you inspire?"" we further bond in seeing each other as assets to a larger creative community, build self-identities as people that can provide help when asked, want to, and that give credit and attribution for the kinds of help and inspiration that they receive. Sounds like the Instructables community! Yall are so incredibly generous and inspirational to me. :). TAKING MICRO ROBOT EXPLORATIONS FURTHER. I've been making these kinds of Robots personally for over 45 year (yep,I started very young, and I'm kinda old!). I've also been making them with young children, young adults, and adults for over 40 years, in all kinds of formal and informal educational settings. For the vast majority of tinkering workshops and classes I run, I use the exact same materials with preschool students as I do adults. Young children are incredible capable, and all adults deserve to tinkering and play, as children so naturally do when given the chance. . I've compiled some of my learnings from running such workshops in a guide I wrote when I was the Chief Maker Educator at Maker Ed, Setting Up and Facilitating Tinkering Workshops with Educators . . (Thanks to my dear former colleagues for editing/format help, and to all my students and workshops participants!). . I'm not one to usually post step by step directions for any of my robotic creations. I spend a huge amount of time creating the maximal amount of possibilities for student-driven and student-developed original designs. With very few exceptions, I hold back from showing my own examples. Whether working with preschoolers, k-12 students, or a group of adults, I have in the past decades of running tinkering workshops, classes, and camp sessions always been rewarded and inspired by creations I would not have otherwise imagined. For all the time I've spent imagining and making these kinds of things, It makes me the most happy to know with certainty that you will show me things I have yet to see or imagine. Such is the power of a supportive, empowering, and inspiring creative community. . So, this example is meant to inspire your own minimalist designs. My bet is that you can do even better in lowering part count and complexity, adding functionality, and completely taking the concept in your own directions. I can't wait to see them!. THANK YOU!. Contexts for Standards & Learning. The beauty of artbots, drawing machines, scribble machines, and moving electromechanical creations is that they seem exiting and “alive.” Their behavior is compelling and fun. Their creation is challenging and makes use of some vital basic engineering, electronic, circuit, and design concepts. Their value goes well beyond STEAM standards though, into the territory of holistic learning and the integration of all academic subjects. . My intention here is not to provide a step-by step list of standards that can be specifically addressed or that naturally arise. It’s to demonstrate a breadth of context for sparking inquiry, real world problems, imagination and story-telling, and ties to things like literacy, story-telling, and artistic expression. . STEM Vocabulary and Concepts. The wordcloud above is just a snapshot of the kinds of STEM concepts, vocabulary that artbots provide strong contexts for. In this case, the emphasis is on math, physics and electronics. They represent just a tiny fraction of the vocabulary you can use as an educator in-context while working with electromechanical creations especially. But you can also use artbots for other science areas, ones you might not normally expect for robotics, such as life sciences. . LIVING ARTBOTSLiving creatures from the tiniest of single cell organisms to the largest of animals all exhibit behaviors and drives to eat, survive and replicate. Even some cells within our bodies, like white blood cells, move about in ways that seem animal-like in their nature. https://www.youtube.com/watch?v=JnlULOjUhSQ. Questions that you might ask and invite speculation and research into include: What motions and behaviors in the living world seem random, or are actually random? What ways of moving by cells or living things might seem random but are driven by sensing the environment? . How might artbots driven by vibrations “sense” their environment? Do they move differently on wet versus dry sections of paper? Parts that are smoother or rougher? When multiple artbots run into each other?. We, and all of life, are fundamentally made of physical components. We are parts that move and interact. We have a huge amount in common with robots. The deeper you look into biomechanics and biochemistry, we're really made of robots within robots within robots... (look into motor proteins! ATPases! We're made of protein motors!).. STORY TELLING and LITERACYWhat often stand out about these kinds of vibration-based robots is that their movements are often very organic and life-like. In my experience, students often see them as pets, bugs, or small little creatures that they feel a connection to as if they were alive. . As a teacher, this is a beautiful thing to harness as an invitation to tell, write, illustrate, and share stories around these kinds of creations. Meaningful stories naturally emerge from all youth creations and endeavors. They can be serious, whimsical, personal or just plain silly. They all have value.. So, ask, who are these robotics creatures? What motivates them? What do they love to do? Most of all, allow time to play. The best possible stories emerge from free-play. Imagine inviting students to develop and share their stories, and revisit them over time, in combinations with other characters and materials. (OK- time for a plug for the Story Workshop work of my wonderful former colleagues at Opal School I had the great pleasure of supporting). . Also imagine inviting students of every age to post instructions to their creations on Instructables. Holy cow, it's a fun challenge. It takes time and care. It's a fantastic reason to convey information in clear and (hopefully) entertaining ways. This is my first post, and it's taking me a very long time, but it is a hella-fun challenge, and it has been a great way to dust off my writing chops. . DESIGN, TINKERING, and PLAY. By asking students to tinker (play, explore, revise) and develop their own designs, we are building autonomous designers and creators, as well as the kinds of citizens that not only can but want to solve the kinds of desperate problems we are facing. This kind of mindset can begin with the kinds of materials I've listed here, and even simpler. I could go on forever and ever about the importance of play and tinkering. Fortunately, I've written plenty about it so you can skip it or look up more here:. A short column I wrote for a print edition of Make Magazine. . The Youth Makerspace Playbook. (I was the Content Lead and Primary Author of this book, developed with colleagues and Maker Ed Partners) . And finally, I'm on the Board of Portland Free Play. You'll see a video on our website I made of public K-8 students playing, and inventing and tinkering loose parts during recess and lunch outdoors. I can never say enough about advocating for the right for children (and adults!) of all ages to play. But let's get back to artbots, eh?. BACK TO and EXPANDING ON ELECTRONICS . What other sizes and kinds of motors and batteries might you use? What kinds of switches and sensors might be added to this? A 555-based timer to control motor speed? A few electronics parts like transistors and CdS sensors to create light-responding behavior? There is an Entire world of BEAM robotics and electronics that I encourage you to look up if you are not familiar. What I love about the BEAM approach is the essential nature of aesthetics in design and engineering elegance. I once was part of an effort of friends in the Portland Area Robotics Society ro develop super simple brushbots robotic swarms, controlled and communicating through simple microcontrollers. We found that by varying the speed of just a single vibrating motor, we could actually steer these simple brushbots. At low speeds, the bias in direction imparted by the bristles made the bots veer one way. At higher speeds, the torque vector of the motor and counterweight overcame this bias and reversed it, causing the brushbot to veer in the opposite direction. . VARIETY. Don't have an old keyboard or salvaged keyboard caps around? What other random piece of wood, metal, or plastic might you use to be the basis of a small robot?. Please take this design for the inspiration for your own completely different creations I hope it can be! In all of the countless classes, camp sessions, and workshops I've facilitated over the decades, It is the variety of designs that emerge from simple invitations, like ""With these parts, make something that make and/or is art..."" that has spawned an astounding diversity of designs among my students, friends, and workshop/ MakerFaire/ youth tinkering colleagues and collaborators. For the last three years especially, I've been giving these same tiny motors and batteries to preschool students in three different schools. I have never needed to give an example. They have always come up with things I never thought of or would have imaged. We start with all kinds of materials, recycled small plastic bits, pieces of polyethylene foam, LEGO and K'NEX, feathers, leaves, twigs, and other natural materials, you name it.. In addition to potentially serving all standards, content areas, and areas of learning, tinkering is just plain fun. It provides joyful learning experiences that have deep academic and social- emotional benefits. Yes, Standards are important. Content and skills are important. Vocabulary is important. A true love of learning, and freedom to express and explore curiosity, wonder, ideas, kindness, and creativity is priceless.. Did you make this project? Share it with us!. 37,095 Enrolled. 
 
 
 3 days ago
 on Step 4. This was fun! Thanks for the idea!. 
 
 Reply
 
 15 hours ago
 
 . Thank you Sarah! If you happen to build this or something like it, I'd love to see a photo! :). 
 
 
 2 days ago
 
 . nice idea. i love robot, too. 
 
 Reply
 
 15 hours ago
 
 . Thanks Charles! Very Kind of you :). Question
 
 4 days ago
 
 . What camera are you using?. 
 
 Reply
 
 3 days ago
 
 . Hello! I'm using a Panasonic Lumix G85, with a Panasonic prime 42.5mm f1.7 optically stabilized lens. I do a large amount of education photo and video documentation work, and I could not recommend this camera any higher. It's phenomenal for my purposes, with features like a totally silent shutter option, and in-body stabilization in addition to any lens stabilization, so I can use any vintage lens of nearly any type (I have Leica M-mount, Nikon and Canon adaptors, for example) and have it be stabilized. It's small enough to be relatively unobtrusive when capturing the work and play of students. Thanks for your comment!. 
 
 
 8 days ago
 
 . Love the photos :D. 
 
 Reply
 
 8 days ago
 
 . Thanks Jessy! That sure means a lot to me, especially coming from you. I love your posts! . © 2020 Autodesk, Inc..",0
"A desktop waterfall is a great way to add some zen and stress relief to the office or living room. The sounds of water can put one's mind into a peaceful state. Alternatively, with a filter, a desktop waterfall can serve as a watering bowl for a pet. . In this instructable I will show how you can create your rain shower waterfall using Fusion 360, a 3d printer, a PTFE tube, and some crafting supplies.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Before beginning, it is best practice to model a mockup of any electronics for size purposes. Don't want to design something only to have it not fit.. The adapter that came with the water pump I order was slightly loose and did not fit the PTFE tube that I had on hand to use. The PTFE tube was a old piece of tubing for a previous 3d printer I had that no longer was working. The tubing I chose to use for this project was a 6 mm outer diameter with a 4mm inner diameter. . 1. Under the ""Create"" menu, select cylinder. Enter dimensions of the insertable part. For my case, the original adapter seemed to have some shrinkage in the plastic in the part that is inserted into the water pump opening(12.4 mm diameter). I added 0.3mm to the diameter and kept the height of the inserted part the same (6.8 mm).. . 2. Create another cylinder. This should be slightly bigger than the opening hole on the water pump for the adapter. The reference adapter piece measures 14.8mm in diameter with a 1mm in height so I used those measurements.. . 3. Move current cylinder to top of the insertable cylinder.. . 4. On top of the ""stopper"" cylinder, create a 3rd cylinder. This cylinder is the one that will holder the PTFE tube. For 3d printing, I hadded 2.3 millimeters to the size of the outer tube diameter to get the cylinder diameter I needed (8.3). I kept the measured height of the original adapter (11.44mm). . **The 0.3 is the tolerance based on my printer's capabilities and the print settings I plan to use. The tolerance should be adjusted for your printer and nozzle.. . 5. Under the ""Modify"" Menu, select the combine tool. Select all the current cylinders change the operation to ""Join"" to make a solid mesh. Then proceed to create another cylinder. This cylinder is the cutout for the PTFE. Set the diameter to the outer diameter of the PTFE tube (my case 6mm) and set the height to the the length of the entire adapter.. . 6. Set the operation method to Cut before hitting OK.. . 7. Using the Fillet tool (located under the Modify menu or shortcut F key), select edges to round out harsh edges. Set the fillet to about 0.25mm.. . 7. At the bottom of the adapter make another cylinder. I set the diameter to 9mm with a 6mm height with the operation set to cut.. . 8. Select to inner edge of the most recent cutout. Using the fillet tool, round the edge to the inside is tapered into the opening for the PTFE.. . The waterpump I chose is 1.8in x 1.8in x 1.4in. In fusion 360 under the Create menu, select a box and entered the necessary dimensions. Move the adapter piece into relative position.. 1. Under the Create menu, select Box. Give the dimensions 152.40 mm x 152.40mm x 76.20 mm.. . 2. Select the entire box and duplicate it (Ctrl +C then Ctrl +P). Press OK. Select a side face of the box and press the M key on the keyboard. This will bring up the move tool. Move the face inwards 16mm. Repeat for the remain 3 sides. Move the bottom face of the box up 6mm.. . 3. Duplicate the first box. Move the 4 side faces inwards 6mm. Move the bottom face of the new box upward about 56mm. Duplicate this box and rename it in the Browser to something such as Top. Click the eye icon to hide this copy for later use.. . 4. Select the combine tool located under the Modify menu. Select the first box as the Target Body and then the other two visible boxes as the Tool Bodies. Set the Operation to Cut and press OK.. . 5. Create a new box from inside the bottom of the basin. Give it the dimensions of 25.40mm x 25.40mm x 174mm. Move the box to one side of the base with the outer side of the ox aligned with the edge of the outside of the basin. Name this Column in the Browser.. . 6. Duplicate the column box that was just made. Move the the 4 side faces inwards 3mm. Move the bottom face upwards 155mm. Rename this object in the Browser as Hole.. . 7. Duplicate the Hole box. Move the 4 and the bottom sides inwards 0.3mm. Rename this mesh Spout Post in the Browser hierarchy and then use the eye icon in the browser to hide the object for now.. . 8. Duplicate the column box. Move the 4 side faces outwards 0.3mm. In the Browser window rename the object to Column Cut and use the eye icon to hide the object.. . 9. Combine the Hole and Column object. Use the Mirror function under Create Menu to mirror the column to the opposite side on the basin.Combine the two columns to the basin.. . 10. On one column, a tunnel will be needed for the PTFE to go through to filter the water up from the basin and into the spout. Inside one of the columns make a Cylinder that cutouts out 6.5mm (or slightly bigger than the PTFE you are using) by about 125mm deep.. . 11. Create another 6.5 diameter cylinder that is about 25 mm in height. Using the Move tool (Hotkey M) rotate the cylinder about 45 degrees. Move the cylinder so the top intersects into the tunnel within the column.. . 12. Using the Draft tool located under the Modify Menu, select the top end of the rotated cylinder as the Plane and the side of the cylinder for the Faces selection. Angle the draft about 15 Degrees.. . 13. Select the inside face of the bottom of the column tunnel. Move and angle the face to align close with the tapered cylinder.. . 14. Using the combine tool, set the Basin as the Target Body and the tapered cylinder as the Tool Bodies. Set the operation to Cut and press OK.. . 15. Use the Fillet tool (Hotkey F) to round out the opening and the inside bend for the tunnel.. . 16. On the back side of the basin there should be a opening for the water pump power cord. Create a cylinder in the top side of the back wall of the basin. Set the diameter to 20mm and height to about 21mm. Set the operation to New Body. Align the cylinder so one face is aligned with the outer wall face with the cylinder pointing inwards.. . 17. Create a box half way through the cylinder that is 20 mm x 22 mm by 21mm.. . 18. Combine the cylinder and the box to the basin as a Cut operation.. . 19. Use the Fillet tool to round the inside edge.. . 20. From the bottom of the inside of the basin, create a new cylinder. Set this to about 20 mm and extend the height to about 70mm. Move the cylinder so it cuts into the ledge of the back wall but not into the exterior wall.. . 21. Use the Combine tools as the Cut operation into the basin.. . 22. Use the Fillet tool to round the top edge of the cutout.. . 1. Unhide the Top layer from the Browser. Resize the height of the box to about 4 mm height. . . 2. Create new box that it about 44mm in height. Make the width the same as the Top and half the length.. . 3. Duplicate the previous box. On the front and back of the box, move the faces inwards 10mm using the move tool. Move the 2 side faces inwards 30 mm. Move the bottom face upwards 20 mm.. . 4. Combine the two boxes. Set the smallest box as the Tool Bodies with, the tallest as the Target Body, and the Operation as Cut. Press ok. Rename this mesh in the Browser as Small Basin.. . 5. Create a new box in the middle of the front wall of the small basin. A opening of about 60 mm in width by 15 mm in height is needed. Set the operation to Cut.. . 6. Under the Modify menu, select the draft tool. Select the top face of the resulting cut as the Plane and select the inside wall of the front wall as the Faces. Rotate the angle about 25 degrees.. . 7. Select the face of the rotated wall. Move it inwards about 5 mm to thicken the front wall.. . 8. Combine the small basin to the top mesh. Rename layer in browser if needed to Basin Top,. . 9. Unhide the Column Cut layer from the Browser. Mirror the column to the opposite side. Combine the two columns to the Basin Top with the Basin Top as the Target Body and the Operation as Cut.. . 10. Select the face of the outer part of the front wall of the small basin. Rotate the face slightly (about 15-25 degrees).. . 11. Select the lip face of the small basin. Rotate this face about 25 degrees.. . 12. Select the inside and outside edges of the lip of the small basin. Chamfer the edges about 2 mm.. . 13. Rotate the 3 other inside side faces of the small basin. (about 15 -25 degrees).. . 14. Create a cylinder in the middle of the backside of the Basin Top. Set the diameter to 20 mm with a 21 mm height.. . 15. Create a box halfway through the cylinder. Set the dimension to 20 mm x 22 mm by 21mm.. . 16. Combine the box and cylinder as a cut operation to the Basin Top.. . 17. Create a few boxes under the small basin about 22 mm in height. The goal is to make room for the PTFE tube. Combine these boxes as a cut operation to the Basin Top.. . 18. Use the fillet tool to round out the inside edges of the space.. . 19. On the side where the PTFE tube needs to filter up into the column, make a box that cuts into the underside cavity but not into the small basin.. . 20. Use the Fillet tool to round out the edges.. . 21. Make series of cylinders about 6 mm in diameter. . . 22. Combine the series of cylinders to the Basin Top as a cut operation to make a drainage tray.. . 23. Round the edges of the drainage holes about 2 mm.. . 24. Extrude the top of the small basin walls to create a splatter barrier (Hotkey E). Use the Fillet tool inside the Small basin to create more of a bowl shape.. . 1. Create a new box (25.4 mm x 152.4 mm x 25.4 mm) a top of the columns of the basin. This needs to stretch from column to column. Name this box Spout in the Browser hierarchy.. . 2. On the left side of the spout, create a cylinder with a 6 mm diameter with a 104 mm height. Center the cylinder so it is in the middle of the spout and 12.4 mm from the edge.. . 3. Unhide Spout Post from the Browser. Mirror the Spout Post to the opposite side and join both posts to the Spout using the Combine tool.. . 4. Create a new cylinder in the middle of one of the posts on the side the PTFE tube needs to be on. Set the diameter to 6.5 mm. Align the new cylinder to intersect with the horizontal.. . 5. Create a 15mm Sphere. Move the sphere to cover the intersection of the two cylinders.. . 6. Under the Modify menu, select Scale. Select the sphere and set the scale type to Non Uniform. Scale the y axis to about 0.72mm.. . 7. Select the sphere and the horizontal cylinder. Move the objects so the horizontal cylinder is about 5.7mm from the bottom of the spout edge.. . 8. Combine the two cylinders with the sphere. Use the Fillet tool to round the edges leading into the sphere. . . 9. Combine the inside tubing to the spout as a Cut operation.. . 10. Create a 2mm cylinder at least 15mm in height. Move the cylinder to intersect with the horizontal tube inside the spout. Duplicate the vertical cylinder and move it to the side 8mm. Repeat duplicating and moving cylinders 5 more times. . . 11. Combine the 7 vertical cylinders to the spout as a Cut operation.. . 12. Using the Fillet tool, round out the inside edges of the vertical openings. . . 1. Using the move tool, you can shorten the inserts of the spout into the column. This will save on 3d print filament and make inserting and removing the spout easier.. . 2. Broad prints are prone to warping when printing. Making a series of flatten cylinders to use as cutouts in the base of the Basin, will help minimize warping and make the Basin print easier to remove. Will also reduce the amount of filament needed when designed to print support free.. . I printed the pieces in a PLA filament on a Wanhao Duplicator I3 clone (Powerspec Duplicator I3 from Microcenter). Print settings should be tweaked to best suit your 3d printer.. . Layer Height: 0.3mm. Speed: 55 mm/s. Temperature: 225C. Fill: 18%. Internal Fill Pattern: Full Honeycomb. Supports: No. Rafts: No. . Layer Height: 0.3mm. Speed: 55 mm/s. Temperature: 225C. Fill: 18%. Internal Fill Pattern: Full Honeycomb . Supports: Yes . Rafts: No. . Layer Height: 0.3mm. Speed: 55 mm/s. Temperature: 225C. Fill: 18% . Internal Fill Pattern: Full Honeycomb . Supports: No. Rafts: No. 1. Once the pieces to the fountain are done 3D printing, it is now time to seal the pieces so water cannot get through the layers of the print and leak out. This is also to prevent bacteria from getting into the layers and molding after a few uses of the fountain. Use a resin epoxy or a lacquer paint. 2. After painting, check fittings of the pieces. Sand down parts if needed due to excess paint.. 3. Around the water pump adapter apply a little E6000 glue around the seal to lock the adapter to the pump so water cannot escape the between the water pump and the adapter. Apply around the the PTFE tube if needed.. 4. Thread the PTFE tube up the column. Cut off any excess PTFE.. . 5. Slip the Basin Top on over the columns and slide into place.. 6. Apply E6000 glue inside the column post hole around the PTFE tube. This is to create a water tight seal around the PTFE tube. Add a little glue to the top where spout will meet the columns to ensure water cannot escape. Insert the Spout into the columns. Let dry for 24 hours.. . 7. Fill Basin with water. Power the fountain and check for leaks.. 8. Add decorations to cover the drainage holes such as small rocks or glass gems.. Stl files made in this project are available for free download on Myminifactory.com. This is an entry in the 3D Printed Contest. Did you make this project? Share it with us!. 23,767 Enrolled. © 2020 Autodesk, Inc..",0
"A little bit about light and pigments:. A pigment is what gives a color its color. It is a material that changes the color of reflected or transmitted light of an object. Light appears white, but it is made up of all the colors added together. We see those colors separated out in a rainbow or a prism. These colors are represented in the visible spectrum of light- the light we can see with our eyes (shown in Photo 3). Objects reflect some colors and absorb others. The color red is not actually “in” an apple. The apple is reflecting the red light and absorbing all the rest. We see different amounts of each color reflected/absorbed to produce the final color we see. . More info about the chart (Photo 3):. Light moves in waves and each wave has a length (wavelength) that is shown in the chart. We measure these wavelengths in nanometers (nm). Each color of light has a wavelength measured this way so when you look at a chart of the visible spectrum of light you will normally also see “nm” & “wavelength” on it. . How the spectrum of light can help us see the difference in ink we make at home vs. ink we buy at the store: . Most of the inks & paints we buy at the store are modern pigments made by using inorganic (not made from living matter) ingredients. Natural pigments- those made out of organic or living ingredients- have been made since ancient times. The inks were made out of things people could find around them in nature. Some colors were rare since the ingredients used were from far away, this can also make them expensive. In the 1800s the Industrial Revolution happened & we started to make paint differently with inorganic ingredients. We could refine oil- break it down until it can be used for fuel- and use the products made from the process in our paints to bind the pigments together differently. We also had scientific advancements in chemistry that allowed us to make pigments instead of just finding them in nature. This dramatically increased the variety of color pigments we have now.. Why do modern paints look “richer” or “more specific” than natural paints? . See the two different paints in Photo 4. One is a natural paint and one is a synthetic (manmade) paint. You can see on the graph of light that they reflect different color combinations. Modern paints are reflected in a very narrow space in the spectrum. Cadmium Red is only really reflected in the red spectrum and very highly. Natural paints are reflected across the entire spectrum with a concentration in one area Red Ochre is reflected in all colors, more so in red spectrum but not significantly more than other colors. More red, and only red is reflected back to our eyes by the modern paint. That’s why it looks more like a true red. Red, but also a lot of other colors as well are reflected back to our eyes by the natural paint. That’s why it looks like a dull or brown-ish red.. Materials. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. In order to make the inks with your natural materials ready. You’ll need to cut them up or crush them. You can cut them with scissors and/or crush them with the back of a spoon. If you’re making more than one color ink make sure you wash your scissors or spoon in between so you don’t mix colors. Add each natural material to a separate container.. You’ll need hot water, almost boiling, to add to your natural materials. Our natural materials measured to about 1 TBS each. We added in 1/4 cup of water- you can add more depending on how much natural materials you have. After you do that you need to add the vinegar (1/2 tsp per ¼ cup of water) & salt (1 pinch per container). Vinegar has been used in inks for quite a while. It’s what’s called a “mordant” or “fixative”. It helps the dye “bind”, “set”, or attach onto paper of fabric. The salt will help preserve the ink so that it lasts longer. Now let it sit overnight. . *Optional, come back in an hour to check on your ink. If it seems to light you can add more materials or other natural ingredients. Remember it”s not going to look like store-bought ink, it will be fainter in color. We added grass clippings to the green ink & raspberries in the pink ink. Look at our final ink picture to see what it will look like.. When you come back you should see that the water is tinted the color of your natural materials. Now you need to sift out the particles so it’s all liquid. Use a coffee filter stretched over your final ink container to catch the solids.. Take out your paper and paintbrush and have fun drawing whatever you want with your homemade inks. You may need to paint multiple layers to get a darker color. Our photo had our inks layered 3 times. Some inks will work & some may not. That’s part of experimenting. Can you do this again and add less water? Add more natural materials? Experiment and see what is most successful. Make sure you take notes while you do this so you can remember which combinations & measurements worked best for next time. . Remember: Your inks will need to be stored in the refrigerator to preserve them after you’re done using them..",0
"Here is a simple way to make large scale, complex models that are light weight, inexpensive and fast.. I came up with this technique when my sister asked me to make her an Indominus Rex costume, the Friday before the school costume contest she had known about for two months. Paper-mache would have been too time consuming and requires actual sculpting talent and I didn't have the materials to make anything out of EVA foam, or the skills to pattern such a complex shape. So this is what I came up with.. This technique uses a 3D model and slicing software to create an accurate cardboard lattice in any shape you want. It becomes a real shape and not a collection of corrugated cardboard pieces with the addition of stockings which can be painted to achieve any effect you like.. I managed to build this in a weekend plus a random scattering of hours equal to another full day. I did have two people helping with the first few steps, which I would recommend. . Because I did not have time for multiple trips to the craft store it is made mostly from things already in the house. In total it only cost about $25 dollars to make. so if you are looking for a cheap, quick Halloween costume to amaze and terrify, this is it.. Most of these things you can find, beg or borrow. The only thing I paid for specifically for this project were the spray paint and some extra hot glue.. Materials. - Cardboard boxes - We got a huge lot of these for free, just by asking my sister's school if they had any spare. This should be the case in offices as well but if not, big box retailers often have loads that they are happy for you to take.. - Sticky Tape or glue sticks. - Paper for blueprints, a printer. - Hot glue gun and a lot of glue sticks.. - 3 pairs of nylon tights -get women's extra large if you can.. - Wire- use a decent gauge. I think ours was for fencing or for home repairs.. - String. - Bike helmet. - A chunk of styrofoam or other support material. - Thin elastic. - Ribbon. - Grey spray paint. - Acrylic paint - the most important colours are red, yellow and black and white, but others are useful.. - Fastening device - hook and eye, velcro, press stud etc.. Tools. - Scalpels or box cutters - I prefer scalpels because they are sharper and flexible but it is down to preference. Box cutters are easier to sharpen. - Ruler, pen etc. - Needle and thread. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. For this project you will need Slicer for Fusion 360 or a similar program. You can download this for free from their website. Make sure that you download the slicer program specifically as this is the feature we will be using.Follow the installation instructions and you should be right. Next you need a model. If you have the skills and the program, by all means, make your own dinosaur. Or if you are less talented (like me) grab one from many of the free CAD model sharing websites such as Thingverse or GrabCAD. Make sure the model you choose is an STL. file. This is not the actual file that I used (my last computer ate all the files for this project) but I like it in particular because it has already broken the model into parts for you. . (As a side note this is in fact a T-Rex head not an Indominous Rex, no one has yet to notice). Now you have the program and the model, it's time to put the model in your program! . The first thing to do is scale your model within the software to the correct size. . To determine the size you want, take a tape measure and measure above your head in the mirror. This will be the height of your model (approximately). I tried to find a balance between large enough to see the details, but not so large that it made my sister's human sized body look tiny. This was important because when using her own arms and legs for the dinosaur's appendages everything needed to be approximately proportionate in order to create a more realistic result.. Also, remember that you will have to support the weight of the cardboard on your neck, so bigger isn't always better. Alternatively you could mount the head to your torso with an over shoulder harness and can make it as big as you like. . Use your software to slice the now scaled model as you wish. Take care to include the thickness of your cardboard in your paper settings as this will directly impact the size of the slots it creates. . Find a compromise between enough detail and the minimum number of cardboard pieces when you slice, as you will have to cut and assemble each piece you see on the screen and this can really increase the time of this build. The fewer slices, the more little details will want to float in mid air. These should be left out of the final product, so make an assessment around where the detail justifies adding extra slices in one direction or the other. . Use the Poster setting on your printer to print out the plans that you previously generated. . Be prepared to spend a long time making the world's most boring jigsaw puzzle as you tape them together.. You can set the size of the paper you want to print on (A1, A0 etc) on the slicing software, so take some time to find the most efficient combination. Make sure not to scale the plans when printing. You can print these over-sized pieces of paper using the poster function on your printer. . Once assembled, cut your printer paper plans out and attach to the cardboard. I like to glue them on using a glue stick, letting the adhesive dry for a little while before adding the paper. This creates a solid bond while cutting but lets you peel the paper off pretty easily after. . Just in case putting that jigsaw together wasn't boring enough, here comes the cutting out bit. Grab some buddies if you can. I think this took 3-4 people about 2 hours to complete. (This is definitely a step that would be great to laser cut, if you have the equipment.). Slowly and carefully begin cutting the pieces out of your corrugated card.. Some safety advice: . *Make sure you have a sharps-safe surface underneath your work piece. I used a big sheet of scrap ply for the large pieces and a self-healing cutting mat for the smaller.. *Never cut through cardboard if there is nothing between you and the blade except air. Air does a terrible job of preventing you from getting stabbed.. *Always cut away from yourself, or if that is unavoidable (because sometimes you really just need leverage) then make sure the hand stabilizing the piece is well outside of the logical path of the blade if something goes wrong. . Work slowly, change blades or sharpen your blade often if you can. Sometimes stabbing through the cardboard and sawing is the fastest way (but don't do this with the blade facing anything on your body, see above safety note). . In the interest of good craftsmanship, try to use a ruler to cut the straight edges. This will help the fit of the pieces when slotted together, but it can and will get tedious.. I strongly recommend marking your cardboard pieces with any identifying symbols from your pattern pieces. Use a pencil so that you can erase it if you want.. Be sure to have a good podcast cued up for this step, I recommend Planet Money from NPR, 99 Percent Invisible or This Podcast Will Kill You (if epidemiology appeals to you).. Using the symbols on your cut out pieces to help you, slowly assembly your parts.. If you are feeling confident you can start gluing from the get-go, but I made a practice dry assembly first. I did this mostly because I did not number all my pieces and became really confused (learn from my mistakes) but it did highlight areas where it was easy to get the pieces swapped or I had made a mistake cutting out.. The Slicer soft-wear has a 3D assembly walk through to help here. . Once you are confident of assembly order, add a really liberal amount of hot glue to every seam. This cardboard construction is going to take quite a bit of man-handling later, so think about how structurally sound you can make it now. . Safety note: . *Hot glue can and will burn you, especially if you leave the gun on while you assembly a new piece. Have tools like pencils and skewers handy to touch the glue when your fingers can't. This will also help get the glue into hard to reach areas.. This part of the process will be pretty stressful because it is both when you have to flex the cardboard in ways it isn't supposed to and also when you see all your cutting out mistakes. I recommend going slowly, fixing things as you find them and if anything doesn't makes sense, take that extra minute to figure out the problem before you glue, it will take so much more time to re-cut the piece if it rips disassembling.. But, if you do break a piece check out the next step before you throw the whole thing out.. Any piece that became a little too bent out of shape I reinforced with some hot glue and skewers. Make sure to use a few and to have them extend a fair way above and below the fault.. If you make any slots too big, just fill in the empty space with hot glue.. Take your panty hose and slowly start stuffing your cardboard monster into them.. I took full advantage of the two legs of the stockings to make the upper and lower halves of the dinosaur's mouth.. Work in little stages, pulling all the loose stocking up over the part you have covered before stretching it over the next section. This will stop the stockings pulling along the cardboard as you try to cover the next section, and potentially bending it out of shape.. Eventually you will reach the point where you can't pull the stockings up anymore. At that point take your second pair and start working from the other side of the model so that the two pairs meet in the middle.. You will find that at this point the cardboard model is surprisingly resilient and will feel a lot more solid. The stockings are essentially acting as Dino Spanx and compressing the structure which gets rid of a lot of wiggle and jiggle. (Physics facts, a lot of materials are stronger in compression than tension - see concrete). Any loose and dangling legs of the stockings can be removed by twisting the stocking until it is really taught, then sewing up the twist and cutting of the end. With a bit of smart needle work you can sort of push the cut end into the twist and secure it there very neatly. . Stitch together any other points where the stockings aren't joined. I only had to attach the waistbands where the two pairs of stockings met. . One thing I did not do was sew any of the stockings to the cardboard itself. I think this could be really useful for slightly blobby areas like the mouth where the stocking stretched out the detail. Some judicious stitches could nip and tuck the stockings into a more defined shape. However, I would use small stitches and be sparing because it will weaken the cardboard and could eventually pull loose or cause a ladder in the stocking. . There may also be areas, like the teeth, where the cardboard should really be outside of the stockings. You can make a little snip there to ease the cardboard out, but do this last. Work in tiny snips and hot glue the stocking to the cardboard immediately when you achieve the desired affect so as not to let the stocking pull the cut wider. . If you are planning to head-mount this model, I would strongly recommend doing so now. This means you can hide the attachment points with your paint job.. With a friend or in the mirror, position the model so that it looks how you want it to on the helmet. Mark any points where the model touches the helmet with some Sharpey. Try to have at least two points.. Apply hot glue to the model where it contacted the helmet and then attach the two pieces as the previously marked points.. Carefully try the contraption on. Does it feel stable? Is it wobbly? . If it feels a little ""not safe"", get some Styrofoam or cardboard and cut some wedges to chock up the head. I only needed one, but it will depend on your shape and size. . The model should still be a little flexible meaning that you can wedge your support structure into place even after the model is attached. Hot glue the bejeezuz out of the structural part of your monstrosity.. NOW! WARNING!. I absolutely glued this model onto the helmet backwards. This was a big mistake and makes it hard to wear for long amounts of time. Make sure your helmet and Dino head are facing in the correct direction. Draw an arrow on your helmet if you have to, I don't care, just please, let only one person in the world make such a silly mistake.. I am including the steps for making the tail here, but it is not necessarily how I would chose to do this if I repeated the process.. Pros of this technique:. - I liked how much movement the tail had. . - The slightly skeletal effect was in keeping with the head form. . - The disks kept the angle they were placed at within the stocking, making it easy to create a realistic pose for the tail. . - It was fast and cheap and utilised the materials I had to hand at the time.. Cons: . - It looks kinda goofy compared to the realistic head. . - It was a lot of effort to get the stockings on, given the mediocre visual result.. Method:. Cut a lot of circles of decreasing diameter out of cardboard. The more disks you have, and the smaller the change in diameter, the closer you can thread them together for a more ""fleshed out"" looking tail. Balance this against time and tail length through. . Poke a hole in the center of each disk and at a few points around the perimeter. Ideally there should be a hole at each third or quarter of your circumference for balance.. Thread string through the perimeter holes until you have a lovely string of disks. This is just as tricky and annoying as you think it would be. . Take some strong fencing wire, loop the end to make it safe and then thread it through all the centre holes. . Space your disks as you wish along the string and wire and then dab some hot glue where the string threads through the card to secure.. Force your stockings over the whole contraption as with the head model. You may need to cut some stockings apart because the big pieces of cardboard will need the waist end of the stockings.. Take the time to angle the disks in the stockings so that the tail has the shape you like, then dab some hot glue where the disks stretch the stocking the most.. Add some form of waist band (I used ribbons and hook and eyes for minimal bulk).. Conclusion:. If I remade this I think I would take a 3D tail model and cut it into three or four sections, then slice it on the same program as the head. . I would then string together each small cardboard model within the stockings. . By making 3D lattice structures like the head, this would give a lot of shape and solidity to the tail, which should translate to a much more professional look. Hopefully by breaking the tail into chunks it would still have the movement that I appreciate in the current solution. . Of course you could always make a simple stuffed tail using the stocking, or shape a more sophisticate one with EVA foam. I look forward to seeing your solutions!. Use spray paint to add solid colour to your model.. You could use some sort of primer, like pva glue, to add a level of opacity to the model, but the time constraints I was working under meant that the drying time would be prohibitive. Feel free to experiment if you have a little longer.. Add thin, even layers of dark grey to the model. Several thin coats works better than one heavy one, as you run the risk of saturating the cardboard. This is a problem because the painted cardboard shows through the painted stockings and the contrast between the spray paint and the natural cardboard will show up as blotchy patches in your build. . This could potentially be avoided if you if you pre-painted the card before covering it in the stockings. Make sure the cardboard is completely dry before you attempt to stuff it in the panty hose. Again time will be a deciding factor here. . I used two cans of grey to cover the head, the tail and the ugg boots that you will see in the next few steps.. You will see here that I masked off the helmet for this step. In future I would probably just spray the helmet with the same base colour as the head to save time. BUT! If you used Styrofoam as a support structure, mask this carefully as the spray paint will likely melt it. . Here is the magic step.. Use acrylic paint to create details and a life like illusion.. Add eyes, a mouth colour to define that area, nostrils and ear holes if you are feeling it. Paint any carboard teeth that you have sticking through your stockings. Add battle scars at this point if your Dino has been through some stuff. . For the eyes and skin texture I used lots of reference pictures and worked in layers. The paint will become more opaque the more layers you add.. Try to use a little more contrast than you think is necessary, ramping up the shadows at the points where different parts of the face/eyes would meet in real life. This will help sell the illusion from afar, and will counteract any slight transparency that you still have going on. I could have done this a little more I think.. Use two or three shades of your base colour to add skin texture - this breaks up the shape and makes it feel a little less like a toy. Use the darkest colour to lay down big random dots, then the mid tone for smaller spots and liberally apply the lightest colour in little spots at the high points to bring them out. If you feel like being really realistic (which I didn't) you can add a thin line of light colour around one side of each dark spot and a darker line on the opposite side to mimic shadows and highlights.. Try playing with warm and cool tones versions of your base colour to add more depth and realism. . Finally, really really don't beat yourself up about how it looks. If it ends up looking a little cartoony, it will read as intentional. If its a little lopsided, no one will notice. Regardless adding features like eyes and noses will take this from a slightly amorphous blob to recognisable head, which means that everyone will be absolutely amazed by how cool it looks. Also most people will view it from a distance, and you will be in motion, so detail will get lost anyway.. If you masked off your helmet now is a good time to paint it either your model colour or a neutral black. Make sure to cover your support structure as well.. The way I built my head, it lost a little of the toothy horror I was going for. So I cut some very basic triangles out of card and painted them with bone white and red for blood. I hot glued them straight onto the stockings on the inside of the mouth.. If you cut around the stockings to show off your teeth when you covered the head, you might be able to skip this step.. You can just leave this costume at head and tail, but in my opinion, the details are what really sell this build.. Honestly, these claws may be my favourite idea in the whole costume. They are so easy and fast to make and make you feel ridiculously impressive. I especially like these claws because you can still use your fingers while wearing them, and they are pretty easy to take on and off.. Cut out three claw shapes from cardboard and stab two rows of two holes, one at the base and another about halfway down the length. Push your thin elastic through to form finger loops. Get some help from someone else to knot or hot glue the elastic on the other side, tight enough to hold it onto your fingers.. Paint them all, add blood as you wish.. Again use cardboard to add flair to the extremities. Cut out 3 claw shapes similar to the hand claws, and an additional ankle spike.. Take a pair of shoes (I used uggs because I liked the proportions they added to the feet) and shape the cardboard claws to them. This will take a little trial and error to cut the claw ends so that they follow the curvature of the shoes. Make sure to have the claws angled pretty sharply away from the ground, because otherwise they will get caught under your toes as you walk.. Spray paint your uggs and let them dry thoroughly.. Use a very large amount of hot glue to attach your claws, or sew them on. When made like this, these shoes are not a super strong build. If you are intending to use them a lot, maybe look into making EVA foam boots. However, it is an easy, inexpensive and fast way to get a pretty impressive costume addition, so I am ok with this compromise. (Also you can probably rip the claws off and keep using the shoes later).. Paint the toe claws to match your hand claws. . Assemble clothes in your correct colour scheme.. I recommend a fairly loose upper layer, so you can hide the tail belt if you like. . Dress yourself, get some help to put on all the claws, shoes etc and go forth and impress!. Please show me if you build anything using these techniques.. Participated in the Cardboard Speed Challenge. Did you make this project? Share it with us!. 19,315 Enrolled. 
 
 
 10 days ago
 
 . This is crazy awesome :). 
 
 
 11 days ago
 
 . nicely done. great job. good luck in the contest.. 
 
 
 11 days ago
 
 . Amazinggggg. © 2020 Autodesk, Inc..",0
"Air! It is what keeps us alive, keeps us breathing! Some of you may know that plants help make oxygen, and oxygen is the air we breathe, but how do we breathe? How do our cells get oxygen? Part of the reason is our respiratory system, and our lungs! For this project we will be learning about how our lungs work by making a model of the lungs that include the diaphragm.. How do our lungs work?. When we breathe, our lungs bring in fresh oxygen for our body and remove carbon and dioxide and other waste gases our bodies don’t need.. When we inhale, or breathe in, we use the muscles in our rib cage, especially the muscle called the diaphragm.. To get the oxygen your body needs, you inhale air through your mouth and nose and air passes through the throat into the trachea. Also called the windpipe.. The trachea divides into the left and right bronchi, like a branch, each bronchus divides again and again, becoming narrower and narrower. Kind of like tree branches.. Your smallest airways end in the alveoli, al·vee·uh·lai, small, thin air sacs that are arranged in clusters. Alveoli are an important part of the respiratory system. It is their job to exchange oxygen and carbon dioxide molecules to and from the bloodstream and thus to and from our cells!. ● Plastic bottle with screw top cap. ● Straws x 2-3. ● Rubber Bands x 2. ● Tape. ● Balloons x 2. ● Plastic Wrap. ● Scissors. ● Exacto Knife (ONLY AN ADULT SHOULD USE THE EXACTO KNIFE). Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. When you choose your bottle, make sure it is big enough to hold the size of balloons you have, and that the bottle is somewhat sturdy. I used a 2 liter soda bottle, it was just sturdy enough and as I had bigger balloons, it was better to be wider than a smaller bottle.. Pierce your plastic bottle. I used an exacto knife for the initial pierce. Then you can cut around the bottom of your bottle with either your scissors or continue using an exacto knife (ONLY AN ADULT SHOULD USE THE EXACTO KNIFE).. Remember, you only need to cut off the bottom, to make sure you will have enough room length wise for the straw as well.. Carefully using your exacto knife (ONLY AN ADULT SHOULD USE THE EXACTO KNIFE), cut a hold roughly the size of your straw. This can be accomplished by cutting an X engraving on the bottom and on the top, then finding the center of your X pierce with your knife in a screw-like motion until it goes through the cap. Repeat this until you have a nice small circle.. (If this ends up being too challenging, feel free to avoid using a twist cap and use modeling clay or playdough on the future step, when adhering the cap to the straw.. Use 2 or 3 straws for this step. First, if you have bending straws, cut them slightly after the bend in the straw, so you are still able to bend it. If not cut the about 3 inches off one side. Keep one of the longer lengths of the straws to do the following: Take your scissors and cut so you cut the straw at an angle on both sides to create a point. Once you have the point use your scissors and put one blade inside the staw and cut about 1 to 1.5 inch up. Repeat for the other side.. You should now have a slit to place the smaller straw pieces into. Make sure the smaller pieces fit the way you want and that air can be blown through one and go out of both ends.. Finally lightly tape the pieces together so there is no excess air able to go through the slits. Remember not too tight, or it will constrict air flow.. This structure will be our trachea, or windpipe, that brings air into the body. It divides into the left and right bronchi continuing the air travel into our lungs.. Take your two balloons and use your scissors to cut the top of the ballow off. This is an optional step, I found it easier to attach the balloon this way, and more air was able to flow into them this way as well.. The balloons are the part of the model that make up the outer part of your lungs. Next, take one balloon and put one side of your windpipe (straw) into the balloon and, using tape, lightly wrap the balloon around the straw making sure there is no obstruction to air flow. Repeat with the other balloon and side of the windpipe.. This way air will be able to travel safely though each bronchus and into the alveoli sacs.. Now you are ready to insert your lungs into your bottle. You will want to do so by inserting your lungs straw side up into the bottle. Now take your lid and put the top of your windpipe (straw) through the hole. If you have difficulty, try folding the top of the straw to squeeze it into the lid. Once your straw is through the lid screw the lid back onto the bottle and lightly tape around the hole so there isn’t excess air.. (If you choose to not make a hole in your lid, instead of using a lid, cover the straw and mouth of the bottle with clay or playdough so it is airtight.). This will make something similar to a vacuum chamber.. Prepare. your plastic wrap to be your diaphragm. Cut a square of plastic wrap large enough to cover the bottom of your bottle. Then, using your rubber bands, secure the plastic wrap around your bottle. I used two rubber bands, one when to initially secure and the other to secure the excess plastic.. In our model this plastic wrap represents the diaphragm. Our diaphragm tightness and flattens allowing us to suck air into our lungs. To breath out, or exhale, our diaphragm and rib cage muscles relax, letting the air out of our lungs.. Use extra tape or an extra rubber band and tape to create a pull tab for your diaphragm. Simply, fold the tape over on itself, so it creates a rope. Then tape then rope to the bottom of your model.. Pull your plastic wrap down to contract the diaphragm and make your lungs inhale the air. Relax the plastic wrap quickly or slowly and see what happens!. The air is exhaled!. You made a model of the lungs with a diaphragm!.",0
"How do you think the Grand Canyon was formed? What about a mountain or a hill? It all comes back to layers and how they are compressed.. Our Earth is made of layers. It has, overall, four layers based on chemical variations: the solid crust on the outside, the mantle, the outer core and inner core. Another one our projects goes into more detail, but in this project, we are discussing the Earth’s crust and especially the sedimentary rocks found near the surface. . Sedimentary rocks are often found in layers. Think of the Grand Canyon, where the rock layers are exposed like a layer cake. Each layer is made of sediments that were laid down (or deposited) in a certain environment such as a sand dune or lakebed. Sediments are deposited horizontally; the lowest layers are the oldest and the highest layers are the youngest.. In this project, we will be learning about geological folds using playdough! . Compressive stress can make rocks form or crumple into folds. Folds are bends in the rock. We are going to make folds with playdough because as in layered sedimentary rocks, you can trace the folding of the layers with your eyes, just like we will see in the playdough!. ● Playdough (can also be made using supplies below). ○ Flour . ○ Water . ○ Salt . ○ Oil . ○ Food Coloring . ○ Mixing bowl . ○ Measuring cups . ● Rolling pin . ● Knife . ● Table covering/cutting board (to protect table) . ● 2 blocks or items to push together.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Using this link: https://www.instructables.com/id/No-Bake-Playdough/ for a large batch made for 4+ people see below for smaller batch measurements. .. Follow the directions on how to mix, but with the modified measurements below to make smaller batches per color. Remember, you might need to add more or less of each ingredient depending on your brands of supplies or what color you are mixing. Red dye makes the dough sticky sometimes, if your dough is sticky add extra flour. If your dough is dry add oil. . Medium batch for 2+ people. ● ½ cup of water . ● 8+ drops of food coloring . ● 1 cup of flour . ● ¼ cup of salt . ● 2 tbs of oil . Small batch for 1+ people . ● ¼ cup of water . ● 5+ drops of food coloring . ● ½ cup of flour . ● 4 tbs of salt . ● 1 tbs of oil . I made 5 small batches to represent layers of sedimentary rocks. I made the following colors: white (no food coloring), green, red, yellow, and mixed all to make a brown. For this project you would only need 2 to 3 small batches of different colors, I made more colors for multiple projects.. Divide and roll your colors into balls, I made sure to have 2 balls per color, for a total of 10 balls and 10 layers. After you have divided them, take one playdough ball, press it down and use your rolling pin to make a long layer of dough. Repeat with a different color. Put one color on top of the other color to create your first two layers.. Keep adding layers, remembering to alternate colors so that no two layers are the same color, until you have used all your playdough or until your stack is how you want it.. Using your knife, carefully cut off the excess on each side to make a long skinny rectangle. This rectangle is now your land mass where you will be able to see the layers when you compress them.. This is when you will need your two blocks or items to compress. Put a block at each end of your rectangle and using both hands, slowly compress or push the blocks toward each other. The blocks being compressed create a type of stress on the playdough, which causes a deformation, or in this case a fold.. There are three types of folds: monoclines, anticlines, and synclines. A monocline is a simple bend in the rock layers so that they are no longer horizontal but are incline.. However, an anticline, like how this project occurred, is a fold that arches upward. The rocks dip away from the center of the fold.. A syncline is a fold that bends downward. The rocks curve down to a center. Sometimes an anticline and syncline can happen in the same geological feature!. Remember, unlike playdough, once rocks are folded, they do not return to their original shape. If rocks experience more stress, they may undergo more folding, or even a fracture.. Also feel free to take a look at our other instructables for more science activities and experiments!. https://www.instructables.com/member/Sciencecityed/ And for more information about Science City, visit https://www.unionstation.org/sciencecity or follow us on Facebook @ScienceCityKC. Remember, to tag us or hashtag #ScienceCityKC..",0
"Do you have a problem when you are making your own tea? Are you having trouble with the tea bag's thread? I think there is a fun and great solution for this. We can use 3D printing object to solve this problem. I will show you how to make tea bag holder and the result is cool and fantastic. In this project, I made 3 different tea bag holders.. Dremel 3D40 Printer. Blue, black, red, white, gold, and green filaments. Black Sharpie. Mugs (for display only). Tea bags (for display only). Paper Clips. Hot glue and gun. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. There are some steps to make tea bag holder with Panda. The result will be like this.. Drag and drop a sphere to the workplane. Make a measurement as follows:. Height: 21.67. Width: 27.23. Length: 33.06. For making the head, drag and drop second sphere to the workplane. The measurements are:. Height: 31.31. Width: 32.68. Length: 39.67. Put it above the body by aligning both of them.. To make the ears, drag and drop a round roof to the workplane. Scale it into height of 5mm, width of 4mm, and length of 7mm. Put it into the head of the panda. Rotate it 22.5 degrees to the left. Duplicate and flip it to make the other side of ear. Align both of them. If you print separately, like I did, make a hole by using the head of the panda itself, so that the ears will go nicely onto the head of panda.. For the muzzle, drag and drop a sphere into the workplane. Scale it into the height of 9.63mm, the width of 9.36mm, and the length of 15.87mm. Attach it to the head.. To make the nose, grab a sphere and scale it into the diameter of 3 mm. Put it onto the muzzle. . To make the mouth, drag a round roof to the workplane. Scale it into the height of 3 mm, the width of 3 mm, and the length of 7 mm. Duplicate it and make it into a hole. Scale it into the height of 3.5 mm, the width of 3 mm, and the length of 7 mm. Group them together. Put the mouth to the muzzle. Rescale the height of 2 mm.. To make the eyes, drag a sphere into the workplane. Scale it into the diameter of 5mm. Stick it to the head. Duplicate and move it until you get the right position for both eyes.. To make the neck, grab a cylinder to the workplane and scale to the diameter of 20 mm and the height of 2 mm. Duplicate it and make it a hole. Scale to the diameter of 19.23 mm and the height of 3 mm. Group them together. Put the neck to the body.. Grab a paraboloid. Scale it into the height of 7 mm, the width of 7 mm, and length of 15 mm. Rotate it until it is -15 degrees. Put it into the panda's body. Duplicate and flip it. Move it until it is symmetrical. Duplicate the panda's body and make it a hole. Group them together.. Grab a cylinder into the workplane. Scale the diameter of 5mm and the height of 45mm. Rotate to 45 degree. Stick it to the panda's body. I add with asteroid shape for the outer side of bamboo, but it is optional.. Drag a sphere into the workplane. Scale the diameters of 9 mm. Put it to the panda's body and duplicate the leg. Duplicate the panda's body and make it a hole. Group the legs and the hole together.. Save and export the Panda file to .stl file and print it, but for this time, print panda part by part of the body with different color. Choose three colors for the panda. I choose black, green, and white.. First, print the head. In the head, I included eyes, muzzle, nose, and mouth because they are small parts so it is very difficult to print separately. Second, print the body. Next, print the neck, hands, ears, legs, and lastly, bamboo.. Open the Dremel Digilab 3D Slicer. Make sure the object is on the base. Choose the print setup.. I choose ""medium quality"", Infill: Gradual, Tick the build plate adhesion, and send to printer. I choose medium quality this time because high speed does not give a good result for smaller object.. Glue all body part of panda one by one using hot glue gun. See the picture. Use a black Sharpie to draw the eyes, nose, and mouth.. There are some steps to make tea bag holder with Bunny. The result will be like this.. Drag a sphere into the workplane. Scale it into the diameter of 40 mm.. Drag a rounded cube into the workplane. Scale it into 32 mm in all faces. Grab a metafillet and make bevel to the upper part of body, so the body is a little bit rounded. The measurement of metafillet is shown in the picture. Attach the head to the body.. Drag and drop sphere to workplane. The diameter of the sphere is 5 mm. Attach the eyes to the head. Duplicate and move it until you get the right position for both eyes.. For the muzzle, drag and drop a sphere into the workplane. Scale it into the height of 6 mm, the width of 11 mm, and the length of 12 mm. Attach it to the head.. To make the nose, grab a roof and scale it into the height of 2 mm and the width and length of 4 mm each. Put it onto the muzzle.. Drag and drop tube to the workplane. Measure the height of 4.02 mm, the width of 3.01 mm, and the length of 5 mm. Drag a cylinder and make a hole of it. Cut it into the shape like mustache. For the size, see the picture.. Drag a paraboloid to the workplane for making the ear. Copy and flip it 180 degrees. Put them together. Rotate 90 degrees. Shorten the width into 4.75 mm and make the length of 14 mm and height of 41 mm. Copy and resize it into the width of 4.05 mm, the length of 11.95 mm, and the height of 35 mm. Align them. Make it into a hole. Group them together. Stick the ears to the head of the bunny. Duplicate the ear. Put it onto the other side.. Drag a sphere into the workplane. Scale the diameters of 9.12 mm and the height of 14.60 mm, so it looks like an ellipse. Put it to the bunny's body. Add three more half sphere to become toes. For the dimension of toes, see the pictures. Rotate the toes until the flat parts face to the body. Duplicate the leg and toes. Attach them to the body.. Drag and drop sphere to the workplane. Make the sphere become ellipse with the size:. Height 5.54 mm. Length 15.47 mm. Width 7.68 mm. Rotate 22.5 degrees vertically and 33 degrees horizontally. Make a copy. Stick it to the bunny's body. You created two hands.. For making a carrot, drag and drop a paraboloid and heart to the workplane. Make the size as shown in the pictures.. Save and export the Bunny file to .stl file and print it, but for this time, print bunny part by part of the body. Choose two colors for the bunny. I choose blue and red.. First, print the head. In the head, I included eyes, muzzle, nose, ears, and mouth because they are small parts so it is very difficult to print separately. Second, print the body. In the body, I included legs and hands. Lastly, print carrot.. Open the Dremel Digilab 3D Slicer. Make sure the object is on the base. Choose the print setup.. I choose ""medium quality"", Infill: Gradual, Tick the build plate adhesion and support, and send to printer.. Glue all body part of bunny one by one using hot glue gun. See the picture. Use a black Sharpie to draw the eyes, nose, and mouth.. To make glass lid, drag and drop cylinder to the workplane. Scale it and make hole in the center. For the scaling, see the pictures. To make the glass lid even prettier, you need to make lip by using another cylinder and make it a hole. Group them together until you get like in the picture. In addition, make a gap in the lid for inserting the tea bag's thread. Grab a box, make it a hole. Align and group it with the lid.. Save and export the glass lid file to .stl file and print it.. I have Dremel 3D Printer 3D 40. First, open the Dremel Digilab 3D Slicer. Make sure the object is on the base. Choose the print setup.. I choose ""high speed"", Infill: Gradual, Tick the build plate adhesion, and send to printer.. There are some steps to make tea bag holder with monster truck. The result will be like this.. . Drag and drop a cylinder to the workplane. Make a measurement as follows:. Height: 16.20 mm. Width: 10.99 mm. Length: 16.20 mm. Drag and drop another cylinder to the workplane. Make a measurement as follows:. Height: 14.09 mm. Width: 19.17 mm. Length: 14.09 mm. Make it a hole. Align and group them. Drag and drop a wheel. Scale it to the diameter of 24.29 mm and the width of 11.34 mm. Grab a cylinder. Scale it into the diameter of 16.20 mm and the width of 11.90 mm. Align and group them together. Put the rim to the tire. Align them. For the tire threads, use box from the shape menu and the size is 5 mm of length, 2 mm of height and 5 mm of width. Rotate it 45 degrees. Copy and flip it. Group them together. Copy them once, and after that, make smart copy around the wheel for 14 times.. Make the frame by grabbing a box. Scale it into the height of 13.77 mm, the width of 17.82 mm, and the length of 55.06 mm. Grab a wedge. Make it a hole and scale it into the height of 32.39 mm, the width of 23.48 mm, and the length of 32.39 mm. Duplicate and flip it horizontally. Group them with the frame. See the picture. Drag another wedge. Scale it into the height of 7.29 mm, the width of 76.12 mm, and the length of 8.10 mm. Also, drag a box and scale it into the height of 7.29 mm, the width of 68.02 mm, and the length of 14.58 mm. Duplicate the wedge. Flip and make them holes and group them together with the frame.. For the axle, drag and drop a cylinder. Make the size of the cylinder 10 mm diameter and 1.62 mm width. Copy 3 times, so you have 4 axles in total. Set aside.. Drag and drop a box to the workplane. Scale it into the width of 23.62 mm, the length of 64.78 mm, and the height of 10.66 mm. Make the radius of 3. Drag round roof and make the length of 11.27 mm, the width of 37.12 mm and the height of 4.79 mm. Copy to the other side of the box and make them holes. Group the holes and the body together.. For the hood, drag and drop box. Make the radius of bevel 3. Scale the box with the length of 20.77 mm, the width of 21.05 mm, and the height of 3.24 mm. Drag a round roof to the workplane. Scale it with the length of 3.11 mm, the width of 21.05 mm, and the height of 6.48 mm. Group it with the hood. Make a hole using a box with length of 22.97 mm, width of 21.20 and the height of 19.44 mm. Put it on the middle- top of the body. Group it with the body.. Continue to make the body of monster truck. Drag and drop box to the workplane and put it in the middle of the body to make passenger compartment tub. Make a hole and group them together.. For the trunk of monster truck, drag and drop box to the workplane. Scale it with the size as follow:. Length: 21.05 mm. Width: 19.44 mm. Height: 32.39 mm. Make sure it passes to the bottom. Make it a hole. Group them together.. For seat, use 2 boxes. Make them 90 degrees angles for each other. For the scale, see the pictures.. Drag and drop a box. Make the radius of 3. Scale it as shown in the picture. Drag and drop another box. Make it a hole and scale it as shown in the picture. Group them together. See the picture.. For holder, drag and drop a box to the workplane. See the picture for the measurement. Copy it, so you have 2 pieces of boxes.. To make the truck's cab, you will need to drag 4 boxes into the workplane. Scale and group them as shown in the pictures. The cab's roof need to be beveled by using 3 metafillet and make them holes. For the windshield, use 2 wedges. Make one of them as a hole and group them together.. Save and export file to .stl file and print it, but for this time, print monster truck part by part of the body with different color. Choose three colors for the panda. I choose black, green, white, and red.. First, print the wheels, frame and axles. Next, print the body. In the body, I included hood, trunk, seat and bumper because they are small parts so it is very difficult to print separately. Later, print the trucks' cab and lastly, holders.. Open the Dremel Digilab 3D Slicer. Make sure the object is on the base. Choose the print setup.. I choose ""medium quality"", Infill: Gradual, Tick the build plate adhesion, and send to printer. I choose medium quality this time because high speed does not give a good result for smaller object.. Glue all truck parts one by one using hot glue. See the picture. Finally, glue a paper clip to make truck's hook for hooking the tea bag's thread.. The project is finished! It is Fantastic, right? Now you can have fun while making your own tea! I hope you like and enjoy it.. Thank you for reading my Instructable.. This is an entry in the 3D Printed Contest. Did you make this project? Share it with us!. 23,767 Enrolled. 
 
 
 8 days ago
 
 . I like the design!. 
 
 Reply
 
 7 days ago
 
 . Thanks. 
 
 
 9 days ago
 
 . nice work. 
 
 Reply
 
 7 days ago
 
 . thanks. 
 
 
 10 days ago
 
 . great. 
 
 Reply
 
 10 days ago
 
 . thanks. 
 
 
 10 days ago
 
 . cute. 
 
 Reply
 
 10 days ago
 
 . thanks. 
 
 
 14 days ago
 
 . Great!!!!!!!!!. 
 
 Reply
 
 13 days ago
 
 . thanks. 
 
 
 14 days ago
 
 . cute. 
 
 Reply
 
 13 days ago
 
 . thanks. 
 
 
 14 days ago
 
 . it is an awesome and creative project. Well done. 
 
 Reply
 
 13 days ago
 
 . thanks. 
 
 
 15 days ago
 
 . So adorable . 
 
 Reply
 
 15 days ago
 
 . thanks. 
 
 
 15 days ago
 
 . These are super cute and your Tinkercad tutorials are so thorogh! . 
 
 Reply
 
 15 days ago
 
 . Thank you so much!. © 2020 Autodesk, Inc..",0
"This is a fun intro to using the slicer add on for Fusion 360, which maps out slices for any STL file. . My classroom recently gained a laser cutter, so once we get a chance to get back to our physical school, this will be one of our first chances to try out the laser cutter. As we are distance learning right now, this can still be done, just requires more person power- you get to cut out all the cardboard bits!. I like this lesson as an integration between my 3D modeling elective and both geography and science classes. . For this project we are going to choose a place on Earth that we consider significant (a ""favorite place""). It can be a place that is important to you or your family, a place that is historically important, or a place that you just think looks especially cool. This project works well with mountains, of course, or other features that are more ""extreme"". . You are going to find your place on a map, download a 3D model of the terrain into fusion 360, use an add-on called slicer to ""slice"" it, print out templates of your slices, cut the slices out of cardboard or other thick material, and then stack and glue the slices together. . . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. This project is really only possible because there is a spectacular website that lets you download 3D model files of terrain (earth land features). . . The site will download a zip folder with one STL file of your model inside.. (If you wanted to, you could 3D print some cool terrain just from this file :) Neat!). Slicer is an add-on app for Fusion 360. It does not come automatically installed. Head over to autodesk and get yourself the app. Install it.. Open Fusion 360. . In the INSERT Menu, choose INSERT MESH. Find your file and open it.. On the TOP MENU BAR, find TOOLS. In the tools menu area select the MAKE menu, then SLICER FOR FUSION 360. This should open your model in slicer.. You can spend some time playing in here to see what different things do, before settling down and slicing this model for our topographic model. . Manufacturing Settings. I have this set to 8.5 x 11 so that the sheets it prints on fit standard printer paper. Construction Technique. (These are fun to explore and experiment with but..) For this model, choose Stacked Slices. . This is the time to play with settings a bit and see how it impacts the look of your model.. If you click assembly steps, the program will animate your model in cardboard and show how it is assembled. You can also look at the assembly reference on the right side to see how many sheets of paper and parts will be needed. . You will not necessarily need all the parts. For example, on my mountain (Mount St Helens), the model has a huge number of sheets that are just plain solid sheets that stack below the mountain. I will not print those. I will just leave them off. . When ready, click ""Get Plans"" . You have the option to save as a PDF (to print on paper, for example) or as a few other file types. . Print your plans!. (My classes--> if you have a printer at home and want to make the full cardboard model, keep going! In the future, when we are back at the school building, we will be able to laser cut these, but not this year.). Use your templates to cut everything out. On the template files, BLUE is a cutting line and RED is a marking/reference line. . Don't forget to number your pieces! (small, somewhere you can't see it in the finished model). (My classes--> As you cut them out, on ONE separate piece of paper, TRACE the outline of each piece in order (starting with #1) making sure that they are lined up properly--> this is going to make a flat topographic map to go with your 3D model). Start with #1, It is the bottom of your model. **Note that some layers have multiple pieces**. Add a bit of glue on the bottom of the next piece (#2), then line it up and stick it down.. Keep going, stacking each piece in place as you go. Use the reference lines as needed. . You can look back at the model in slicer if needed too (remember that it has that assembly animation). You might want to add some color. For example, Some of the levels of one of our terrain maps are water, so we colored them blue. You could add other decorations too, whatever you like. Or labels.. Participated in the Cardboard Speed Challenge.",0
"Hello, Fellow creators out there, in this guide I'll show you how to make a DIY electric skateboard on a relatively small budget. The board I built can reach speeds of about 40km/hr(26mph) and run for about 18km.. Above is a video guide and a few pictures of my build. Please support my work by subscribing to my YouTube channel https://www.YouTube.com/NematicsLab. Lastly, Always skate within your ability, no matter what you ride, always wear a helmet and proper safety gear.. So with that being said let's Get started!. Here are all the supplies you will need to built the Electric Skateboard. Parts & Components: . Tools and Supplies:. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. The first challenge was to find a skateboard which I can later modify to make it electric. I could have easily built one by myself but I didn’t have the right tools for that. Anyways when it comes to selecting skateboards there are quite a few choices like a penny board, speeding board, Longboard, etc. . The best choice here was the Longboard of course because they are usually wider and longer. In addition to having soft wheels, they are also more reliable, easier to ride because of a more balanced structure, making them a good fit for beginners and we will have a lot of room to add electronics later you can choose a different type of it will work just fine but keep in mind what suits best for you and get one. . So here starts the fun part,. Welcome to a world of fun, patience, and options. Yes, options. There are tons of choices out there, whether it be motors, ESCs (Speed controller), or Batteries. But how do you narrow down what you want or don't want? I’ll help you as best I can.. Motor: There are mainly two types of DC motors,. 1) Brushed DC Motor: . 2) Brushless DC Motor (BLDC): . What you are looking for is a brushless (BLDC) outrunner motor with a kv rating from 170 to 300 and Power between 1500 to 3000 Watts. So think of your kv rating as how much toque your the board will have, the lower the kv the higher the torque. My motor is rated for 280kv and 2500watts that is pretty beefy and is more than enough for a person with a weight of 100kgs.. ESC: ESC is an abbreviation for Electronic Speed Controller since BLDC is bit advance and uses 3 phases to control speed hence you need a speed controller. The ESC is the 'brain' of the build. It’s the link between your batteries and the motor. It also connects to the receiver that goes to your remote control. The ESC gets the 'commands'(PWM Signal) from the receiver that (Duty Cycle) tells it how much the remote's throttle is pushed. It then controls the amount of energy that passes from the battery to the motor, hence controlling the motor's speed.. One I’m using is rated for 24Volts and 120Ampers, so if you do math i.e Power= Voltage * Current, then 24*120 = 2880Watts and the motor is rated for 2500Watts so we have some headroom here. . Note: ESC is the one part of your electric skateboard build that you do NOT want to cheap out on. The cheaper speed controller can catch fire. Also if you want you can use a VESC which is an version of ESC.. The battery determines how far you can go. You will want a battery that is compatible with your motor. The battery pack I built is 6S 3P 18650 Li-ion which means I have 6 Li-ion cells in series with 3 in parallel. That means the voltage of my battery is 25.2Volts (6 x 4.2).. The capacity of the battery is measured in mAh and that determines how much juice your battery will have. I have 7,800 mAh and with this, you can determine how much energy you have in watt-hours.. I won't go into much detail on how to build a battery pack as I already have an Instructables post you can check that out!. Besides you can also use Li-Po 6S battery pack so you don't have to deal with building one, but I don't recommend Li-Po cells as they can be dangerous if not handled properly.. Pulley and Belt: So your wheels, motor pulley, wheel pulley, and belt all have to fit in together into what is referred to as a drive train. The ratio of the wheel pulley to motor pulley is called the “gear reduction ratio”. You want that to be around 2.5 but can go as low as 1.5 or as high as 3. Generally, a lower reduction ratio is better but low speed. I used a 70mm wheel Pulley which comes in kit with a gear ratio of 3 for high speeds.. The Motor Mount: For my built, I decided to make my own motor mount because one I ordered was very fragile and useless. . For designing, I used Autodesk Fusion 360 and in design decided to go with the clamping technique for mounting it to trucks of a longboard. I created my final version, and with some testing and 3D printing, I figured out how much slide I could get between the motor and the truck axel to tight the belt in the future.. Once the design was ready I took it to nearby CNC workshop and got it manufactured using CNC. It is a subtractive manufacturing process which employs computerized controls and machine tools to remove layers of material from a workpiece and produces a custom-designed part. The material I used was Aluminum 6061-T6 because it is easy to work with and High strength characteristics.. You can download the STEP file or STL file if you like my design from below.. Firstly I started by removing the rear right wheel so we can attach our mount and motor. Since the Trucks of skateboard had a slight curve to it, I used a metal file to get rid of it, such that the motor mount fits perfectly on tucks of the skateboard. After installing the motor mount I installed the motor using Machine Screws.. Once that was done it was time to add a pulley to our wheel so we can transfer the rotational energy from the motor to wheel. It’s a really simple process just place the bigger pulley at exactly the center of the wheel and mark the holes where we need to drill through the wheel. After Drilling use some machine screws to attach the pulley to the wheel don’t forget to use thread lock or use Self Locking Nut with machine screws. . Now attach the smaller pulley on the motor shaft and put the belt along with Wheel and make sure it’s properly aligned, such that all three combined form our drive train.. After finishing our drive train, we can attach our ESC to the motor. Just connect three wire from ESC to the three wires of Motor now connect your battery pack to the ESC and finally, it’s time to connect ESC to Radio Receiver. . I decided to build my own radio controller using Arduino and nRF24L01 Module but you can just buy one use it., For building one, you will need . Just connect the Transmitter and receiver according to the circuit provided in this step and upload the code(Download from Below) to both Arduino after that connect 5V, GND and Digital Pin 5 of Receiver Arduino to the 5V, GND and Signal PIN of ESC respectively.. After attaching the receiver test if the motor is spinning in the right direction if not, just swap any two wires from the motor to ESC and the motor will spin in another direction. Now all you have to do is add all the electronics and Batteries into a case I have a 3D printer(Download from Below) so I made a custom case but you can use some plastic boxes and mount it to the underneath of longboard and you are ready to roll on streets!. You did it. You just built your own electric longboard. Make sure to share your pictures with me on my social media. . Alright! Now for the numbers!. Weight: 7.2kg. Clearance: 7.5cm. Top Speed: 40km/hr (Possible to reach 48km/hr but highly unstable to ride). Cruising speed: 25Km/hr. Range: 18 Kilometres. Batteries: 6S 3P Li-ion (25.2V 7800mAh). So that's pretty much it for this tutorial guys, If you like my work consider checking out my YouTube channel for more awesome stuff: https://www.youtube.com/c/NematicsLab. You can also follow me on Facebook, Twitter, etc for upcoming projects. https://www.facebook.com/NematicsLab/. https://www.instagram.com/NematicsLab/. https://twitter.com/NematicsLab. This is an entry in the Motor Vehicle Contest.",0
"This is an older project but one of my favorites. It was a personal challenge and school project to teach myself CAD and test the limits of Tinkercad to put into application to the R & D process of rocketry. It was to design a TVC or Thrust Vector Control gimbal. TVC is the process of changing the vector of a rocket's thrust to allow it to control it's flight. This is more to show you my learning process and project journey with Tinkercad rather then details fo the system itself.. If you want more details on the TVC system and want to build your own then check the links below. I will also make a separate instructables detailing the system itself rather than the design process like this one . Everything is open sourced. https://www.thingiverse.com/thing:3657663. https://hackaday.io/project/169698-k-9-rocket-thrust-vector-control-gimbal. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. So a few months back before I learned Fusion 360, I was using Tinkercad. I needed a complex rocket part a few months back and I didn't know F360, so as a homeschool project I decided to try and design it in Tinkercad. I saw https://bps.space/ and really wanted to build a gimbal design based on his system. No matter how much more complex things I've designed in Fusion360, this is still by far my favorite CAD and 3D printing project. I teach younger kids CAD sometimes in my free time and the #1 complaint is ""You can't make anything cool in Tinkercad"". Well just showing this project changes their minds and it makes me happy to be able to demonstrate the advanced capabilities Tinkercad possesses. Tinkercad is by far the best CAD teaching tool I have ever seen. It helped me to self teach myself CAD and teach others too. It covers the fundamentals of 3D design, and I'm here to demonstrate what can be done with simple shapes and the fundamentals.. I had the basic design in mind, use 2 servos in a gimbal frame to vector a tube to hold a model rocket motor. So it was time to go and Tinker in CAD (terrible pun). It took almost 100 shapes in Tinkercad...See for yourself here by ungrouping XD. . #2 discouragement I see when I teach other people CAD is when their design doesn't work on the first try. I show them this picture and always tell them that everything finally worked at the 7th one. Iterative design is how it just gets better and better every time. One catch though, it requires patients and redesigning over and over ;) but keep it up! You're getting closer and closer to a working design every time your iterate. . Currently, I'm at V10 for this gimbal and am designing a new one in F360. But during this project V7 was the first to work! I was happy with the final design and a bit shocked that I had managed to actually use Tinkercad. It was time to stick a motor in and STATIC FIRE IT!!!!!!!!!!!!!!!!!!. It worked and it worked pehnominally! A few minor issue but in the end a great sucess! . Since this is also a school project, I wrote up a report. You can read it here. https://docs.google.com/document/d/1mH6wOfQzJGjTMxgqP0OAoqSD4kdoSnqfWhweJX8Z-OA/edit?usp=sharing. So what did I learn from this project? What can other students learn from this project? Well first off it is absolutely possible to design something like this in Tinkercad. I wouldn't say this is the most optimal design, and surely I can now design this in with far better force distribution in F360 in about an hour or less, but it was a fun challenge. When I teach people CAD this is a great project I think others can learn from. I like to use this as a basic example of an idea to basic design to final system. The end results can be very rewarding ;) . Anyway, I know this is a bit of a silly project, but I hope this was entertaining and educational in some way. I've long moved along with this project to more advanced things but I thought it would be something fun to share for others to learn from. . Note: Anyone wanting details about the gimbals system, I have included links near the description. Also as noted I will write another Instructables on that soon. This was more to share my fun project . I encourage other people to share their work. I did and not only did I learn a ton form feedback, but It also gave me cool opportunities! For example, someone flew my gimbal before I ever did and it worked! Sharing is one way to really enhance your's and other's learning experience. That's why I even bothered to make this to share the processes I went through to complete their project! .",0
"Hi everyone! I wanted to make a small light-up name sign that will fit in my PC case, and realized that this would be a perfect way to teach people the basic features of Fusion 360! This tutorial will cover the bare-bones features of Fusion and is intended for beginners. Let's get started!. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. This step is the most important. Without it you won't be able to continue! :). If you have not installed Fusion 360 on your computer, you can get it on Autodesk's website. Autodesk offers free licenses to students, makers and those who are learning to CAD, so see if you are eligible for a free educational copy!. Once installed, open the application into a new window.. This is your workspace. On the top is your toolbar, where all the functions for creating and altering your model are located. Located on the upper right corner is the ""perspective cube"" which can be spun around to see different parts of your model. The upper left corner has your design elements (all the sketches, bodies and components that you make in this design will be shown here.. Let's begin our design with a sketch. We will first create a two-dimensional image and alter manipulate it to be a 3D object. On the Create Tab in your toolbar, click Create > Create Sketch. A coordinate plane will appear on your screen. Click on the XZ plane to begin your sketch (any plane can be chosen, I usually choose this plane because then my design is parallel to the ground.. Now its time to create a shape! Click Create > Rectangle > 2 Point Rectangle. To draw the rectangle, click on a starting point on the coordinate plane, let go of your cursor, and drag to another point. To make your rectangle precise, change the measurements of the shape by clicking on the individual dimensions and typing in a number. For my rectangle, I made it 50 mm by 115 mm, but it can be any size you like!. To make the sign fit more with my computer, I added a slanted edge to the rectangle. I first created a line and then removed the extra parts of the rectangle to create a trapezoidal shape. To create a line, click Create > Line, and draw the object in the same manner as the rectangle (click on the first point, move the cursor, click on endpoint). To remove the extra part of the rectangle, you can either click on the individual lines and delete them or use the Trim tool. To do this, click Modify > Trim, and click on the lines you want to remove.. Now its time to add some text to your sign! Click on Create > Text and click on the shape you created earlier. A window will appear giving you several options for your text. Type in any message you like, and pick a font and size that looks good to you (I chose ""OMNI Technologies"" and used Gill Sans MT Bold Italic, for that Iron Man 'Stark Industries' feel :D ). Once you are done, Move the text to a place that looks good on the shape. . Before we finish our sketch, it is important to ""explode"" our text. This means that only the outlines of the text are shown, and can be manipulated. This is important because since this will be 3D printed, any piece of the word not attached to the frame (i.e. A center of an ""O"" or the middle of a ""d"") will fall out. To explore the text, simply right click on the text and click Explode Text. Now you can draw lines connecting the unconnected parts with the frame. I used the line tool to make little connectors for the 'O's and 'E's in my design and used the trim tool to remove any unnecessary line segments.. This step is optional, but very useful when you are creating more complex projects.. Since I am putting this model in my computer case, I want to get an idea of how it will look. To do this, I created a construction line. To do this, click Create > Line, and click the Construction option in the sketch pallet on the right. A shortcut to this is hitting L and X on your keyboard. Now you can draw this line wherever you like. It will be visible in the design, but will not affect the model in any way. I used this construction line to show where the tempered glass part of my PC case begins, but construction lines can be used for countless other applications.. Another useful tool is the Dimension Function. This will allow you to have a specific distance between two lines/points. To do this, click Create > Sketch Dimension, or press the D key. Now click on the two things you want to constrain and place the dimension line wherever it looks good. Type in a value into the dimension and the lines will automatically adjust to fit that dimension. Be careful though! The lines may move in ways you might not want it to!. Now for the fun part, turning your 2D drawing into a 3D object!. Click Finish Sketch in the Sketch Pallete to leave the Sketch Environment. To extrude your drawing, select the entire shape by dragging a selection rectangle across the entire model (make sure every part of the sketch is highlighted). Now, press Create > Extrude or hit the E key. A menu will appear giving you several options for the extrusion. For now, do not worry about these settings; simply grab the arrow under the sketch and pull it down to create a 3D model (make sure the value the arrow shows is negative, as we want the sketch we created to be on the top of the model. I made my model 15 mm thick, and stopped extruding by clicking OK on the Extrude menu.. Now, you might wonder, where did the text go? Don't worry, we will get it back in the next step.. To get our text back, we need to use the Components Browser on the left side of the workspace. You will see several folders; one of these is named Bodies, and the other is named Sketches. The Bodies folder will hold all the 3D objects in the component in your design, while the Sketches folder will have the 2D drawings. Fusion 360 organizes its design files in this order: Components > Bodies & Sketches. You can create multiple components, each with a set of bodies and sketches. We will get to this later in this tutorial.. Next to each folder and file is a symbol of an eye. If it is crossed out, that specific file is invisible but is still there in the design. This feature is useful in designs with several components and bodies since it allows you to only see what you are working on. Click on the Sketches Folder, and click on the eye next to your sketch, most likely named Sketch 1. Voila! Your letters are now visible!. To put LEDs in the sign, and save 3D printer filament, we should hollow out our sign. To do this, orbit to the back of the sign (the side opposite to letters side), and click Modify > Shell. Click on the back face of the sign, and set a wall thickness. This number is the thickness of your walls after the shape has been hollowed; I chose 2.5 mm. Hit OK and your shape is hollow!. This is another optional step; I did it to make the model fit better in my computer case. You can use the extrude tool to Join, Cut, Intersect, Create a New Body,or Create a New Component. Joining will add material to the model, and Cutting will remove material.. I decided to cut 10mm from the bottom of my sign by clicking on the bottom face and moving the arrow into my design. (Important Note: Doing extrusions like this can mess with other parts of your design; it is best to go back to the sketch and fix the dimensions if you are not sure. In my case, I lost the bottom wall of my model, but this is okay for my application.. To extrude the text, select all the parts of the text and extrude using the Cut function, pulling the text into the sign (make sure to extrude more or equal to wall thickness). When complete, your sign will have the letters cut out of it!. Introducing the greatest tool in CAD, the fillet!. A fillet rounds out sharp corners and can be useful to make bends stronger or make models look sleeker. To create fillets, click Modify > Fillet, and click on the edges you want to round out. Then pull on the arrow that appears, or input a specific value. In my case, I used the fillet tool to round out the interior walls of my sign.. Awesome! The front part of the sign is done! Now, to begin the back section.. Since you want the front and back to be two separate objects, its best to make a new component. To do this, click Create > New Component. Name the component in the menu that pops up and click OK. Your sign will turn transparent. This is Fusion 360 showing you that you are not working on that component anymore.. To make a back panel lid for this sign, let's create a sketch on the back face of the sign. It might seem as though you are still working on the front piece, but you are simply using it to construct the lid. . Since you want the front and back to share the same outline, you can project the lines onto your sketch. To do this, click Create > Project / Include > Project, or press P. Now, click the lines you want to project and press OK. The lines should turn purple, meaning that they are now projected onto your sketch. This feature is incredibly useful for complex assemblies were reconstructing a sketch line-by-line would be too difficult.. To make this lid attachable with the front, We can make a small lip that will fit onto the inside of the front. to do this, we can use the offset tool. What and offset does is create an outline a specific distance away from the original line. This is useful for adding thickness to an outline or make hollowed out shapes. To use offset, click Modify > Offset. Then select the lines you want to offset and drag the arrow to specify a distance. I created an offset 1.5mm thick on the insideof the original edge.. Now we can extrude the lid. Select the entire shape and extrude it away from the front part of the sign at whatever thickness suits you. After making the sketch visible again (It probably disappeared after the first extrude, find the lip you created using the offset, and extrude it into the front part of the box. You now have a thin lip on the lid!. To be able to see the enttire model, we need to activate it. Hover your cursor on the topmost component in your design, and you will see a circle appear. If you click this circle, your entire design will be activated visible. You can activate other components by doing this to individual components.. To make the model easy to understand and (more importantly) look better, we can change the appearance of the components. To do this, click on Modify > Appearances. A menu with several types of materials will appear. Navigate through the options and pick a material that looks good for you (some will have to be downloaded). To use a material, drag it onto the body you want to change, and you are done!. To allow wires to enter the box, we need to make a hole. We can do this easily by clicking Create > Hole, and clicking on the face we want to ""drill into"". A red cylinder will appear, similar to the cut function when extruding. Alter this cylinder to give the hole you want (dragging the arrows/changing the settings in the hole dialog). Hit OK and your design is complete!. Congratulations! You were able to use Fusion 360 to make a cool looking light up sign! To turn this design into reality, we need to prepare a .stl file for 3D printing. To do this, click Tools > Make > 3D Print, and click on a component you want to print. Make sure the Send to 3d Print Utility checkbox is unchecked and hit OK. You can now save the .stl file of the component. Repeat this step with the lid component so you can print that as well. Once you have completed this step you can start 3D printing!. I hope to add printing and assembly instructions in the future, stay tuned for part 2! If you liked this project, please vote for it in the 3D Printed contest!. This is an entry in the 3D Printed Contest. Did you make this project? Share it with us!. 23,767 Enrolled. 
 
 
 15 days ago
 
 . Great walkthrough!. © 2020 Autodesk, Inc..",0
"~*~ BACON POUND CAKE ~*~. SERVES: 1 LOAF ⎪ LEVEL: EASY. There aren’t enough bacon desserts in the world! So I took this Fat Challenge as an opportunity to create one. As someone who always has a small jar of excess bacon fat in their fridge, I’m always adding bacon flavor to things like fried potatoes, salad dressings, and popcorn. But I wager it will shine even more in cake. And what better way to test this hypothesis than with a classic pound cake. . This recipe uses a stand mixer, but a regular bowl and wooden spoon will work just as well. I highly recommend splurging on high-quality butter like Kerry Gold or Plugra so the flavor is at it’s best. Cake flour is especially key here. While you can use all-purpose, cake flour ensures a moist, light, and delicate sponge as it slows down the development of gluten. If you’re on a time-crunch, store-bought bacon bits are fine, but if you don’t have bacon fat on hand then you’ll just have to suck it up and make those bits. Serve with ice cream, whipped cream, or a drizzle of maple syrup!. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ . Ingredients . 1/2 pound bacon. 3 large eggs, room temperature . 3 tablespoons whole milk (or half & half), room temperature . 1.5 teaspoons vanilla extract . 1.5 cups sifted flour . 1 teaspoon baking powder . 1/2 teaspoon kosher salt . 3/4 cup granulated white sugar . 9 tablespoons (1 stick + 1 tablespoon) unsalted butter, room temperature . about 1/4 cup rendered bacon fat, room temperature. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. PLAN AHEAD: You can make the bacon bits a day or two in advanced. Once drained, store them in a plastic bag or container in the fridge. If you don’t already have bacon fat, use the rendered fat from this batch. Place in the fridge, uncovered until solidified.. . . . . . . ~*~ CREAM CHEESE VARIATION ~*~. Omit the milk. In Step 6, add 4 ounces cream cheese in with the butter, bacon fat, and half wet mixture.. ~*~ CHOCOLATE CHIP VARIATION ~*~In Step 6, add 1/4 cup bitter-sweet chocolate chips in with the bacon bits. . ~*~ LEFTOVERS VARIATION ~*~ Bacon French Toast: In a shallow dish, whisk together 1 large egg and 1/4 cup milk until well blended. Place 1 tablespoon butter in a skillet and melt over medium-low heat. Place a slice of pound cake in the egg mixture, turning to coat both sides. Use a spatula to carefully transfer the cake slice to the skillet. Repeat with one more slice. Cook the pound cake until browned on both sides, adding more butter as needed. Serve with fresh fruit or jam.. First Prize in the Fat Challenge.",0
"Hello fellow foodies! I'm super excited to present my recipe for Chicken, Bacon, and Monterey Jack Pithivier. What? You may be asking what on Earth is a pithivier and how do I pronounce that word? Those are great questions! A Pithivier is a free form pie made with puff pastry and has a double crust. It is usually sweet with fruit and almond paste but it can also be filled with meat and cheese. It has a characteristic dome shape to it and it is usually circular in overall shape.  It is named after the French town of Pithiviers and if you check out Wikipedia, there is a pronunciation of the word that you can listen to.  For my recipe, I played around with flavors and textures until I found just the right combination that I loved. For me, it is the perfect combination of meats, spices, and cheese. When I tested my final recipe, I could not get enough of the tasty pie! The cumin and chili powder work so well with the chicken, bacon, onion and peppers. And, the cheese, all melty and gooey, is so nice with the crispy layers of puff pastry. Yum!  This pie is a meal by itself and it presents so nicely for any holiday or family gathering. You can make it ahead of time by assembling it and refrigerating it until ready to bake. That makes it a perfect party food for entertaining!  Best of all, this recipe creates two pithiviers so there will be plenty to go around!  I hope you enjoy my recipe! . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. 2 pounds chicken thighs cut into 1"" cubes 12 ounces hardwood smoked bacon cut into 1"" squares 1/3 cup cornstarch 1 teaspoon salt 1/4 teaspoon black pepper 1 cup chopped yellow onion 1 cup chopped red, green, and yellow bell peppers 1 teaspoon chili powder 1 teaspoon ground cumin 2 cups shredded Monterey Jack cheese 2-17 ounces puff pastry boxes (2 sheets each)Egg wash:1 egg white1 tablespoon water. In a large skillet, sauté bacon until lightly browned over medium high heat on the stovetop.. In a medium bowl, toss chicken pieces with cornstarch, salt and pepper. Make sure the pieces are coated completely.. Add chicken to skillet and cook with bacon.. Add chopped peppers and onions.. Add chili powder and cumin and stir to incorporate. Cook until chicken is no longer pink and and onions are transparent.. Remove mixture from heat and drain all grease and juice. Cool in a medium bowl. Refrigerate for 1 hour.Preheat oven to 400 degrees Fahrenheit.. Line a large cookie sheet with parchment paper and lay out one sheet of puff pastry. Use an inverted 9” cake pan to make a circular indentation to mark where the filling goes. *The following steps will need to be done twice because this recipe creates two pithiviers.. Sprinkle pastry with 1/2 cup cheese.. Since this recipe makes 2 pies, you will add half the meat filling to one of the puff pastry sheets. Turn bowl over onto puff pastry so that filling creates a round dome shape. Add another 1/2 cup of cheese on top of the filling.. On another sheet of pastry, use a cookie cutter to cut shapes for ventilation. Save shapes to decorate pastry surface.Lay sheet over meat filling dome. Use an inverted cake pan to cut a 9""circle around using a knife.Cut a 1"" slice around the perimeter every one inch.Add pastry shapes to the surface to decorate.. Create an egg wash by combining one egg white and 1 tablespoon water. Brush surface with egg wash using a brush.. Bake for 30-35 minutes or until surface is golden brown. Slice and enjoy!. I hope you enjoyed my recipe. If you did, please check my other recipes at bakingintheburbs.netThanks a bunch!Jennifer. . Participated in the Baking Challenge.",0
"Seared brussel sprouts make a fantastic crunchy addition to any meal, and the addition of bacon and portabello mushrooms to this dish really ups the 'oomf' factor of a vegetable that many people grew up disliking! . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Add the Bacon to a pan on medium high heat. Cook until it begins to harden but before it grows crunchy. Or else cook until its reached its desired crispiness and then remove and set aside, keep the bacon fat in the pan.. Add the minced garlic to the pan, allowing it to grow fragrant in the bacon fat. As the garlic begins to brown add the halved brussel sprouts. Let the sprouts to sit undisturbed for 4-5 minutes (allowing them to sear on one side) before flipping them over and adding the cut up mushrooms to the party.. (If you are worried about burning the sprouts at this stage, a tablespoon or two of vegetable oil can go a long way to keep things from sticking). Cook for an additional 3-5 minutes until the mushrooms have cooked down and the previously unseared side of the sprouts has developed some color.. Add your bacon back to the pan at this point if you had earlier removed it.. Stir all ingredients in the pan to combine, then add salt and pepper to taste and top with grated Parmesan cheese.. Plate and serve. The addition of mushrooms really helps to stretch a limited number of brussels. My experience is that the above quantities of ingredients comfortably work as a side dish for 3-4 people.. Participated in the Side Dishes Challenge.",0
"Bacon! bacon! bacon! . Everybody (that I know), loves bacon. Even my vegan friend admits to secretly indulging occasionally. I love it! Breakfast, lunch, dinner; it’s my jam, BACON JAM!. Level of difficulty – easy. Prep time – 30 minutes. Total time commitment – 4 hours. End result – 3 cups of awesomeness. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. 1 ½ pounds of sliced bacon. 3 garlic gloves. 2 yellow onions. ½ cup dark brown sugar. ½ cup cider vinegar. ¼ cup maple syrup. ¾ cup of strong coffee. Brew a pot of robust coffee.. Peel and finely dice 2 medium sized yellow onions.. Smash and peel 3 garlic cloves.. Slice the bacon crosswise into approximately 1-inch pieces.. Measure vinegar, sugar, syrup, and coffee and combine into a medium-sized bowl.. In a large skillet, over medium-high heat, cook the bacon until it is lightly browned.. Remove the bacon from the skillet and allow to drain on a couple paper towels.. Pour all but 1 tablespoon of bacon fat from the skillet and add the onions and garlic to the pan. Cook on medium-high heat, approximately 5 minutes, until the onions are translucent.. Carefully add the vinegar, brown sugar, coffee, and maple syrup mixture to the onions and garlic. Bring to a boil and stir for 2 minutes.. Add the prepared bacon pieces to the pan and mix in thoroughly. Remove the pan from the heat.. Immediately transfer the mixture to a slow cooker or. crockpot. Cook on high, uncovered, for 3 ½ to 4 hours. . The liquid should have a syrup consistency.. Almost done!. If you have a food processor, transfer the mixture to it from the slow cooker. Pulse until a chunky consistency is achieved, think applesauce, the chunky kind.. If you have a stick blender, like me, you can use it to achieve the same results as the food processor right in the slow cooker insert.. Once the jam is cooled down, refrigerate in airtight containers.. Do not freeze or can.. Enjoy for up to 4 weeks.. Take it to parties! Give as a gift! Rub it on your belly! Make it your jam!. Try it with grilled chicken or steak, on sandwiches, on muffins, fresh bread, puff pastry, or right from the jar.. Best when served warm.. You like it HOT and spicy? Try adding a diced jalapeno, red pepper flakes, hot sauce, or tabasco sauce to the skillet before transferring the mixture to the slow cooker. . Unfortunately, the recipe only yields 3 cups but nothing is stopping you from tripling it! Just keep in mind that it will triple the slow cooker time too. . That’s it!. Thanks for stopping by!. Participated in the Slow Cooker Challenge.",0
Ingredients:. 1000g minced meat. 200g smoked ham. 150g breadcrumbs. 100g parmigiano reggiano. 2 onions. 2 eggs. salt & pepper. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Scatter salt & pepper to the meat. Add breadcrumbs and the eggs. Cut the onions in small pieces and stir everything together. Place the ham stripes on an muffin shape and fill the meat mix in the form. Wrap the ham around the filling and turn the wrapped meatballs. . Place parmigiano reggiano pieces on top. Now put the muffin shape in the oven at 180 degrees celsius circulating air for about 30 minutes. Grab a few and enjoy. Look at my other work. . https://www.youtube.com/user/bernokolo. Participated in the Baking Contest 2017.,0
"We are going to cook Crispy but juicy bacon using a great trick.. I’ve tried every food hack under the sun for bacon but I find this one works best. . You can buy a bacon grilling rack but they’re not fun to clean and just another thing that you have to store in the cupboard.. We are going to make one out of alfoil.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Measure out the alfoil to be double the length of the tray.. Fold in half.. . Then turn over and fold again by 1 cm or half an inch. . Repeat until you reach the other end.. You’ll end up with a zip zag shape.. Sit this in the tray.. I find I can normally fit 5 slices.. You could fit 10 by making two side by side.. My oven has a few hot spots, so rotate the tray if needed.. The best part of this other than having perfectly cooked bacon is you can just throw out the alfoil once the bacon has finished cooking.. Don’t forget to save the bacon fat because it’s amazing when used to fry eggs.. If your bacon is thicker, you’ll to cook it for a little longer.. . This way of cooking bacon gives you beautifully crispy bacon while still been juicy..",0
"I love cured meats, charcuterie, smoked-goods, etc.... Yes, there are a wide range of products that you can purchase from the supermarket, all of which are mass-produced resulting in the use of ""not-so-friendly"" chemicals to your body and lacking the most important factor...taste.. Having Croatian heritage, a father who was a butcher, and working school holidays in the butchery during my teenage years, I developed a joy for creating my own meat products. . This instructable is just one branch of a greater tree of homemade meat related products. I hope you enjoy.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Quality is everything when it comes to making your own.. Any products I wish to create, I'll usually procure from farms that adopt sustainable growing practises for both the animal and the farm.. A friend put me onto an online butchery that does the above and makes these products available to consumers. Here's a link to Feather and Bone. I'm sure you could find similar butchers in your are by just searching online.. The piece of pork belly I used ended up being just under 1kg after filleting the skin off...yeah, my knife skills weren't that great that day. . Call it a cure, call it a rub, call it a marinade. Whatever you want to call it, this is the mixture the pork belly will be sitting in for a few weeks.. I used:. I mashed up all the above in a mortar and pestle and rubbed it all over the piece of meat.. Once covered evenly, I vacuum sealed the meat and placed it on the top shelf of the fridge.. Short of the long is I left the meat in the fridge for a 2 week period rotating it ever 3 days. Once the 2 weeks of curing is up it's time to season and roll the meat.. Take the meat out of the fridge and rinse off the curing mix, pat dry with a paper towel or any towel that won't leave any fibres behind.. Once dried, it's time to add the seasoning. I went traditional and used 1 tsp of ground nutmeg (make the effort and grind it yourself) and 1 Tbsp of crushed black peppercorns. Rub all over ensuring the whole piece of meat is covered.. Here comes the fun part or rolling this bad boy...instructional video care of River Cottage...thank you. I enjoy a bit of smoke on my pork, so what better to use that apple tree wood chips.. After some experimenting with a homemade contraption, I found the UFO cold-smoker to be the easiest and quickest way to generate smoke without affecting the temperature of the smoke box.. I like to smoke the meat for about 4hrs...the awesome thing with the UFO cold smoker is when it is fully stocked with chips, it will smoke for about 8hrs without having to restock.. Ok, so the smoking is complete it's time to air-dry the meat. Without the use of expensive curing equipment to moderate the temperature and humidity, it's a tricky thing to dry meat at home. After chatting with some like-minded individuals, I was put onto 'Banquet Bags'...these bags allow you to safely dry in your own refrigerator and take out the potential of the meat picking up germs from the environment. The bags form a bond with the protein in the meat, allowing them to age without the risk of picking up unwanted germs or fungi, while still allowing the meat to 'breathe'.. I used these bags to vacuum seal the pancetta and place it in the fridge rotating it every 3 days.. So, remember how I wrote the starting weight of the pancetta?. This helps to determine when the meat is safe to eat. After much reading up on the safety of eating air-dried meat, I determined that the pancetta needed to lose 30% of moisture before I could partake. This took about 2.5 months. How did I ever wait that long?. Each to their own, but I'm satisfied with simple quality...a ploughman's board with homegrown spring-onions and tomatoes. Unfortunately the crackers and yoghurt a store bought, but a satisfying meal and a result.. So there you go...the taste beats anything store bought...enjoy..",0
"This Instructable is all about cold smoked bacon. A lot of warmer climates will hot smoke their pork bellies but here in the UK Autumn/Winter is the ideal time to let the cold smoke do it's magic. Effectively you cure your meat and then smoke in in low temps so the smoked takes to the protein but doesn't cook it. You can then slice and store for many days/weeks and simply grill/bake when you're ready to eat it.. The full guide follows the Video (next step).. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Here's the full Youtube guide to Cold Smoked Bacon.Please take a look and if you like, subscribe to my channel! Full Guide next step.. I simply used a dry cure from Weschenfelder Direct (Supracure) Mixed with sea salt (the actual Supracure should only account for 5% or less of the weight of the meat you're curing). This is a salt cure containing nitrates that can be used at home or professionally and allows you to make cured bacon within about 5-7 days.You can add sugars, aromatics and spices to your cure to give a slightly different taste to your finished bacon, as long as the majority of the mixture is salt (i.e. putting more sugar and aromatics in may effect the cure doing it's work).. Once you have coated the meat in your cure you need to let all the moisture be drawn out by the salt. For meat such as pork this will take several days (fish can be a matter of hours). . Based on the thickness of the pork you need to allow 4-6 days of cure time - you will see the moisture start to pool in the bowl and effectively turn the dry cure into a wet cure as the process continues.. Make sure to turn your pork each day of the curing process and to ensure the meat is fully covered by spooning over the (now wet) salt mix over the pork before returning it to the refrigerator. . You'll notice the pork will stiffen up and be much more rigid as the water leaves the protein. . After the allotted time when most of the moisture has left the pork belly and is in the bowl you will have BACON.. Now at this stage you need to thoroughly wash the salt cure off the bacon. . Put the dish under a running cold tap and, with your hands ensure that no salt trace remains. It is recommended to even soak the bacon first for an hour in cold water then rinse, so the bacon doesn't become too salty when you cook it. Once complete, place the bacon back in a dish as shown in the picture and leave it uncovered overnight in the fridge. This will allow a pellicle to form, greatly improving the next stage - Cold Smoking!. To cold smoke you need a chamber to keep the food and smoke in. You can actually cold smoke in cardboard box but it's best to have something a little more solid to protect your food.A barbecue grill with lid and air vents or a dedicated Smoking cabinet is best.Once you have this you need to produce cold smoke. This can be done in a number of ways.. Or you could visit our other COLD SMOKE GENERATOR HACK (below) to see how you can DIY the job yourself. . https://www.instructables.com/id/Cold-Smoke-Genera.... You can place you bacon on racks within the BBQ/Smoker or, if it allows, use Meat Hooks to hang the pork bellies from the top of the smoker. This allows the smoke to get full access to the meat ensuring a good even smoke flavour.. Don't cold smoke when your equipment is in direct contact with the suns rays. You need to keep the temps ambient and any external heat source can raise the cabinets temperature and over the course of a cold smoking session, may cause the meat to spoilYou'll need to choose your wood flavour (Alder was used in our recipe) but Beech, oak, fruit based trees like apple are all good to smoke Bacon with - as does Hickory but this is a very strong flavour too it so don't overdo the smoke.Generally when cold smoking you'll need to do about 6 hours to get a good hint of smoke in your meat. You can do much longer and if you need to break it down into two sessions - for example cold smoke for 4-5 hours and then do another 4-5 hours the next day (returning to the fridge in between).Once you have the desired level of smoke take the bacon inside - shrink wrap it and place in in the fridge for a day or two (you can cook it straight away but it's best to let the smoke flavour permeate the meat).. Take a large, sharp knife or if you have it a meat slicer and slice the bacon lengthways leaving you with long thin strips of bacon. You can choose just how thick or thin you want it.You can now cook the bacon as you would usually but if you are looking to store it make sure it's tightly covered and left in the fridge.If you're giving some to friends/family you can use foil mats to lay your bacon on then shrink-wrap them closed. This will create a real visual feast before the actual feast begins.",0
"Ingredients:. 1000g minced meat. 300g feta cheese. 200g bacon stripes. 3 onions. salt, pepper & greek spice mix. spring form. toothpicks. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Scatter salt, pepper & greek spice mix to the meat and stir it together.Place bacon stripes in the spring form and place the half of the meat. Crumble feta cheese over it and place the rest of the meat. Cut the onions in rings and lay them on top. Now wrap the bacon stripes around the filling and fix them with toothpicks. . Put the form in the oven at 180 degrees celsius circulating air for about 40 minutes. Remove the toothpicks. Grab a piece and enjoy.. Look at my other work.. https://www.youtube.com/channel/UClE2pnTDfDwsbUnaw....",0
"Where there are hell lot of varieties in chicken recipes my all time favorite is Chicken Kabab and in this tutorial I'm gonna show you how to prepare Crispy Chicken Kabab in a easy way.. If you are a chicken lover then I'm sure this is going to replace your favorite KFC chicken or anything.. It is healthy for sure because it's homemade. Apart from that it will be delicious because of the ingredients used.. Now it's time to give your mouth some pleasure.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. These are some ingredients you'll find in any general store.. . First you need to take a clean bowl and add Chicken Kabab Masala into it.. Now break an egg and put it into the bowl along with the yellow.. Mix it thoroughly till all the egg gets mixed into the powder and forms a paste.. To this paste add 10 gms of ginger paste and 20 gms of garlic paste. Mix it well until it becomes a fine paste. You can add some amount of chilli powder if you like it spicy.. Now you are done with preparing the masala. Keep it aside.. Take the chicken into a bowl and clean it well.. After cleaning the chicken cut it into small pieces so the it will be deep fried.. Now add this chicken into the Masala paste that we prepared in the previous step.. Mix it well till all the paste is coated to the chicken pieces.. Keep it aside for 15-20 minutes.. After keeping the Masala Coated chicken aside for a while, keep a pan on the stove and turn on the flame.. Add Vegetable oil into the pan and wait until the oil gets heated up.. Add the chicken pieces one by one into the pan and deep fry.. Take em out and keep them into a container placing tissues below them so that it observes oil.. Garnish them with onions or coriander and enjoy your favorite chicken.. Thank you. Participated in the Makerspace Contest 2017.",0
"Who doesn't love bacon? It's delicious, crunchy and full of flavour. Just as puff pastry. That's why these two combined are the perfect match.. Today I'll teach you how to make this bacon braid. It's so tasty and it looks beautiful. And even though it looks fancy you can make it in 30 min. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. 400gr puff pastry. I bought mine frozen, and it worked as good as the one I buy fresh.. 1 bell pepper. . 300gr cheese (mozzarella or marbled). 1 egg. 200gr bacon. 1lb chicken breast (boneless and skinless). Salt. Pepper. Slice the chiken breast so that it cooks faster. . Season with salt and pepper. . Once cooked chop them.. Chop the pepper. Cook the bacon and chop it. Slice the cheese. Handle the puff pastry carefully, don't knead it, just roll it out. . With 400gr of puff pastry you can make a 12x10 in renctangle. The thickness should be not less than 4mm. . Put the ingredients in the middle, leaving 1in without stuffing on each end. First the chicken, then bell peppers and bacon, finally the cheese. But only add 2/3 of the bacon. We need some for the last step.. To make the braid cut the pastry as shown in the picture. Space the cuts as evenly as possible, about 1 inch apart.. Begin folding the first part over the stuffing as shown in the picture. . Take one piece and bring it to the middle, then take one from the opposite side and bring it to the middle too. Continue doing so until you cover all the stuffing.. Whip the egg and fully cover the braid with it. Don't use all the egg. . Add the remaining bacon, thinly chopped, as a topping. It will get even crunchier while the puff pastry bakes. . Bake it until the puff pastry is golden and crispy (mine was ready in 15 min) So tasty!. Participated in the Makerspace Contest 2017.",0
"A Wähe is part of the Alemannic culture, a flat cake with either sweet or salty topping. The Chrutwähe is a salty one with spinach and bacon. The name Chrutwähe is from Switzerland, the recipe is hard to find because there is actually a popular music festival with the very same name.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. I decided to split the bacon into 100grams speck cubes and 50grams ham. Also I used 2 medium onions instead o f1 big one, the weight of 60grams was the same. I bought the pastry and didn't make it myself. First you have to thaw the pastry if used and defrost the spinach. . You also need a cake tin or springform of 26cm (10"").. Melt the 40grams of butter and stirr in the 40grams of flour to create a roux. Crack the eggs and whisk them. Add nutmeg and the eggs to the roux, stirr until evenly mixed and set aside. Preheat the stove to 200°C (400°F).. After thawing the pastry the edge might show some irritations from the condensation water, fold the dough and roll it out to even the dough. Then spread it out in your cake tin or springform. With a fork stick several holes into the dough, this way it gets out easier. . Mince the onions and ham, add with the speck cubes to the spinach in a pan at medium heat. Add 2/3 of the roux that you prepared with the single cream and eggsfrom step 2, season to taste with salt and pepper. The mix is ready after 10 minutes or when the spinach becomes softer. Then fill into the springform with the pastry ground.. Take the last 1/3 of the roux and give it on top until everything is sealed and no spinach sticks out. Then bake in the preheated stove for 35 minutes at 200°C (400°F). . If during the baking procedure the crust on top looks too dark, lay a sheet of parchment paper on top. The Chrutwähe actually tastes a lot better if you eat it the next day, let it rest overnight and then enjoy a saturating and savoury food.. . Enjoy your meal!. Participated in the Makerspace Contest 2017.",0
"In this instructable, I will show you how to make a Bacon Bowl. I will also give you a review about the product I used to make these easily as well as an alternative method using a muffing pan. Bacon bowls are easy to make, and pretty cool, especially if you are a bacon lover! Let's get started!. If you have any questions or comments put them down below and I will get back to you as soon as I can. . Follow the easy steps below or watch the short video tutorial or do both!. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Ingredients:. Tools:. The above links are affiliate links. As an Amazon Associate I earn from qualifying purchases.. First we will be using a product called the perfect bacon bowl. When I first got this I was skeptical on how good it was and if it did indeed work. So we will be using this first then later on I will explain an alternative way for making bacon bowls. We take a paper towel and spray it with cooking spray and then wipe down the plastic bacon bowl mold. They recommend to not spray it directly. . Next we want to cut one slice of bacon right in half. . Next we take the two halves and make an X over the plastic mound. . Now we take the other two full length pieces and wrap them around. After the first one is wrapped around, then you will wrap the other one around the opposite direction so it covers the seam, fat side of the bacon facing up. Now it is ready to be cooked in the microwave or baked in the oven or toaster oven. I am going to use the microwave. I will cook it on high for 2.5 minutes, then check the crispiness. If it is not crisp enough, I will cook it for another 30 seconds or so and check it. . Once it is done it will look something like this. Definitely not what the picture is on the box that the product comes in haha. But the product does indeed work and it makes a bacon bowl! It was super easy, great for a quick way to get creative with your bacon. Now it will take longer if you decide to bake it in the oven instead. 20 to 25 minutes or so. Then all you need to do is fill it up with some scrambled eggs, or whatever else you might like. . But let's say you are interested in making a bacon bowl but don't want to buy that product. You can try this method. Take a muffin pan, and then cook your bacon about half way, but make sure it is still nice and pliable. Then spray the inside of your muffin tin. Then just line the inside with your bacon pieces. Now crack open an egg and put it right in, then top with cheese and bake the whole thing in the oven for 20 to 25 minutes until the egg is cooked. Voila another method. . Now watch those steps in action by checking out the video tutorial!. . Participated in the Gluten Free Challenge 2017.",0
"Ingredients:. chicken filet. bacon stripes. chester cheese. salt, pepper & paprika. muffin shape. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Scatter salt, pepper & paprika to the filet and mix it. Cut the bacon stripes in half and lay them crosswise in the muffin shape. Place chicken filet and wrap it with the bacon. Turn the individual packages so that the bacon does not roll up. Put the muffin shape in the oven at 180 degrees celsius circulating air for about 20 minutes. Now place the chester cheese on it. . Put the muffin shape back in the oven for another 10 minutes and enjoy. Look at my other work.. https://www.youtube.com/channel/UClE2pnTDfDwsbUnaw....",0
"Ingredients:. 1000g ground beef. 300g bacon stripes. 250g alm cheese. 200g sesame. salt, pepper & paprika. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Weave the bacon stripes on a piece of baking paper. Scatter salt, pepper & paprika to the beef and stir it. Place it on baking paper and place cheese stripes on it. Roll it to the top and close the ends. Place the roll on the bacon and wrap the bacon around. Close the ends again. Cover the complete surface with sesame and place it on an oven plate. Put it in the oven at 180 degrees celsius circulating air. . After about an hour in the oven it is ready to serv. Serv it with potato wedges or else and enjoy. . Look at my other work.. https://www.youtube.com/channel/UClE2pnTDfDwsbUnaw....",0
"Ingredients:. 1000g minced meat. 250g alm cheese. 200ml barbecue sauce. 300g bacon stripes. salt, pepper & paprika. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Start with a weave out of bacon stripes. Scatter salt, pepper & paprika to the meat and mix it. Place it on baking paper and place alm cheese on it. Form a roll and close the ends. Place it on your bacon weave and wrap it. Close the ends again and put it in the oven at 180 degrees celsius circulating air. . After 1 hour remove the plate from the oven. Spread it with babecue sauce and put it back in the oven. After 15 minutes spread again barbecue sauce over it and put it back in the oven for 15 minutes to finish it. Grad a piece and enjoy it with some fries or else. . Look at my other work.. https://www.youtube.com/channel/UClE2pnTDfDwsbUnaw....",0
"These cheese straws make an awesome snack, or even an appetizer. They're like a cross between a breadstick and a cheese puff. Even better, the'yre super easy to make, and of course, they're insanely crispy, bacon-y, cheesy, and addictive.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. 1 sheet of frozen puff pastry. 1/3 cup to 1/2 cup hard cheese (ie extra-sharp cheddar, parmesan, etc). 3 to 5 slices of bacon. Olive oil or butter as needed. Seasoning to taste (I used salt, pepper, and cayenne pepper). First, open up the pastry and brush on a bit of oil until it is evenly coated.. This acts as a sort of glue for the seasonings, which are sprinkled on top.. I really liked the blend of cayenne, pepper, and salt, but you can adjust to your liking. :). If using pre-grated cheese, just add it on top. But if you're grating it yourself (even better!) use a microplane or very fine grater to sprinkle the cheese out as evenly as possible.. To spread it out more evenly and adhere the cheese to the pastry, cover it with plastic wrap and pat down with your fingerprints. . Slice the puff pastry into strips. The thinner you cut, the crispier the straws. I cut it into thirds using the seams that already formed and cut out a total of nine strips. . Since the slices of bacon were too wide to fit on each strip, I cut each slice in half before rolling it with the pastry.. To form the straws, lay a bacon slice on the back of each puff pastry strip, and roll it into a straw-like spiral with the cheese side facing out.. Bake for 20-30 minutes in an oven preheated to 400ºF. . After ten minutes or so, flip each strip over so they cook more evenly.. Your straws are done once they are stiff and no longer droop when you pick them up.. As you can see, they are awesomely crunchy and puffy and the cheese becomes really crispy. They taste great on their own or garnished with a bit of green onion and bacon bits.. Adapted from foodwishes.blogspot.com. Participated in the Snacks Contest 2017.",0
"Ingredients:. 500g chicken breast. 250ml cream. 200g bacon. 100g cream cheese. 150g limburger cheese. 1 hand sundried tomatoes. salt, pepper, chili flakes, hot paprika & curry. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Cut a big bag in the chicken breast and cover the inside with cream cheese. Place a few sundried tomatoes in the bag and a few pieces limburger cheese. Wrap bacon stripes around the chicken breast. Scatter salt, pepper, chili flakes, hot paprika & curry over it. Spice the cream with salt, pepper & curry and stir it together. Place the chicken breast on a plate and put it in the oven at 180 degrees celsius circulating air. . After 20 minutes pour the cream on the plate and put it back in the oven for another 20 minutes. Now it is ready to serv. Look at my other work. . .",0
"Homemade bacon is a truly magical piece of meat!. Making your own bacon will take at least a week, but this will be the greatest bacon you’ve ever had! You'll also get the added bonus and the satisfaction of knowing you made it yourself.. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. In a bowl add:. 1 Cup Raw Sugar. 1 Cup Table Salt. 1 tsp Pink Salt. 2 Tbsp Dried Thyme. 1 Tbsp Garlic Powder. Black Pepper. Here’s a handy calculator to work out how much pink salt you’ll need: http://www.localfoodheroes.co.uk/calculator/dry_cure_bacon/ . Thoroughly mix the cure together.. Now the cure is ready to go.. I’ve got a 2.5kg or 5.5-pound piece of skinless pork belly.. Place it in a glass tray or a ziplock bag before coating with the cure.. Make sure to fully coat all sides.. Cover the dish or seal the ziplock bag before placing it in the fridge.. It will take a least 7 days to sure the bacon, it’s ok if you leave it longer but make sure it’s had at least 7 days.. Every day or every second day flip the pork belly over, this will help it to evenly cure.. After about a week the pork belly should be fully cured. The meat should be firm but still pliable.. Rinse the pork belly under cold water to remove the salt from the surface, otherwise it will be way too salty.. Now the pork belly is ready to smoke and become bacon.. I’m using a kettle BBQ and minion method. The minion method will give you a consistent heat over a few hours. . Place a BBQ tray on the opposite side and fill with two cups of water.. This will add some moisture to the air and stop the bacon from drying out.. You want the BBQ to be sitting at around a temperature of 225f or 110c.. Add a few hickory wood chips, you could also apple wood, the choice is yours.. Place the bacon fat side up of the drip tray. By having it fat side up the bacon will base itself.. Cover with the lid, have the vents half open.. The bacon will take anywhere from 3 to 4 hours to smoke and cook through.. Once the bacon reaches a temp of 150f or 67c it will have a nice amber colour and it’s done.. Let the bacon sit and cool the room temp.. Because it’s been smoked to a temp of 150f it’s safe to eat as is but we all know that bacon needs to be fried..",0
"Simple, fast, and delicious. . I'm trying a low-carb diet and wanted a fast snack that tasted good even if I had to eat it cold. . I'd list the nutrition here, but it's likely to vary depending on your sources. . This would be super easy to pre-wrap the chicken and freeze the pre-prepared strips for future snacks too! Look tasty? Good! . Let's make some! . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. This is meant to be a SNACK and therefore is simple. You need 4 things.. 1:Chicken. I used split breast meat to meet my diet.. 2: Bacon. I like Gwaltney's. Tasty and you can buy it in big packs! . 3: Favorite Spice. I like Webers... All flavors. But this time I'm using Weber's Garlic Jalapeno! . 4: Buffalo ranch sauce. It's tasty, Moore's is good. . Got all that? . Prep time! Couldn't be easier. . Yep. That's all you gotta do! . Sprinkle a good coating of your chosen seasoning all over both sides of your chicken pieces, then wrap them up wit 2 pieces of bacon. . That's about 1.25 oz of chicken and 2 strips of bacon. Perfect for a snack. Set them into a hot iron skillet while you wrap the rest. . Simple. Cook with a lid over them so the chicken remains tender,. Flip 1/3 of the way for the first time after about 5-7 minutes on low-med heat. Don't drool in the skillet, It smells awesome! . The bacon will be nice and crisp without over cooking if you keep the lid on. Rotate another 1/3 after about 4 minutes. . After close to 10 minutes of cooking (Maybe 15) Cut your strips in half to ensure the chicken has cooked completely. . If the chicken is done, cut each half in half again to make inch long chunks. . Lay each chunk open (bare chicken) side up and drizzle buffalo sauce over them! Looks good and tastes great too! . Third Prize in the Snacks Contest 2017.",0
"Materials:. . Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Get 3 of the 8ft woods and cut each every 2ft. Therefore for each 8ft wood you have 4 pieces.. Once you have the 4 pieces, you screw them together into a square like the picture above.. (You will need to do this 2x). Then, you grab another 4 pieces of wood. You are going to screw the wood on the inside of each corner.. Once all of the corners are screwed together, you get another of the 4 pieces that are screwed together as a square and screw it to the top of each corner.. Then you have a piece of wood that's 24x29in and screw it on top of the cube.. Also get 3 of the 2ft wood and screw them around each side.. Lastly, you screw the reflective sheet on top of the 24x29in wood and around the 2ft wood that are sticking out.. Your final project is now complete!.",0
"Ingredients:. 500g chicken breast. 300ml cream. 150g bacon stripes. 1 mango. 100g sesame. salt, pepper & curry. Teachers! Did you use this instructable in your classroom? Add a Teacher Note to share how you incorporated it into your lesson.. Scatter sesame, salt, pepper & curry to the chicken breast and wraps it with the bacon stripes. Cut the mango in small pieces and place it with the wrapped chicken on an oven plate. Sprinkle sesame, salt, pepper & curry to it. Put it in the oven at180 degrees celsius circulating air for 20 minutes. . Pour the cream on the plateafter 20 minutes and put it back in the oven for another 15 minutes to finish it. Enjoy it with rice, noodles, potatoes or?. Look at my other work. . https://www.youtube.com/channel/UCd57nigopX84T-HtT....",0
